{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/src/js/index.js\";\nimport React from \"react\"; //import { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const consoleLog = (isallowlogs, str) => {\n  if (isallowlogs) {\n    console.log(str);\n  }\n};\nexport const showError = props => {\n  let htmlArray = document.getElementsByClassName(\"org-datainput\");\n  let htmlErrorArray = document.getElementsByClassName(\"org-datainputerror\");\n\n  for (let i = 0; i < htmlErrorArray.length; i++) {\n    htmlErrorArray[i].style.display = \"none\";\n  }\n\n  for (let i = 0; i < htmlArray.length; i++) {\n    for (let j = 0; j < props.length; j++) {\n      console.log(htmlArray[i]);\n      console.log(props); // console.log(props[htmlArray[i]);\n\n      if (props && props[j].name === htmlArray[i].dataset.name) {\n        let error = \"<div style='color:red;' class='org-datainputerror'>\" + props[j].message + \"</div>\";\n        htmlArray[i].insertAdjacentHTML(\"afterend\", error);\n      }\n    }\n  }\n};\nexport const sortArray = (items, orderby, typeofsortby) => {\n  // sort by value\n  if (typeofsortby === \"integer\") {\n    return items.sort(function (a, b) {\n      return a[orderby] - b[orderby];\n    });\n  } // sort by name\n\n\n  if (typeofsortby === \"string\") {\n    return items.sort(function (a, b) {\n      var nameA = a[orderby].toUpperCase(); // ignore upper and lowercase\n\n      var nameB = b[orderby].toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    });\n  }\n};\nexport function GetAlphabetPanel(params) {\n  let alphabethtml = [];\n\n  let letterOnclick = e => {\n    params.aplhabetOnClickjs(e.target.innerHTML);\n  };\n\n  alphabethtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"G\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"H\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"I\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"J\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"K\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"L\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"M\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"N\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"O\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"P\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"Q\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"R\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"T\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"U\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"V\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"W\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"Y\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: \"2px\"\n      },\n      className: \"org-cursor\",\n      onClick: letterOnclick,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this));\n  return alphabethtml;\n}\n_c = GetAlphabetPanel;\nexport const fieldTypeHtmltoDBmapping = props => {\n  let {\n    fieldType,\n    inputOrOutput\n  } = props;\n  console.log(fieldType);\n  console.log(inputOrOutput);\n  let output = \"\";\n\n  if (fieldType === \"text\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputtext\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n\n  if (fieldType === \"button\") {\n    if (inputOrOutput === \"input\") {\n      output = \"button\";\n    } else {\n      output = \"button\";\n    }\n  }\n\n  if (fieldType === \"buttonpanel\") {\n    if (inputOrOutput === \"input\") {\n      output = \"buttonpanel\";\n    } else {\n      output = \"buttonpanel\";\n    }\n  }\n\n  if (fieldType === \"email\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputemail\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n\n  if (fieldType === \"number\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputnumber\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n\n  if (fieldType === \"select\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputselect\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n\n  if (fieldType === \"image\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputimage\";\n    } else {\n      output = \"outputimage\";\n    }\n  }\n\n  return output;\n};\nexport const serverButtonHandler = async props => {// let { clickprops, localdata, recorddata } = props;\n  // console.log(clickprops);\n  // let metadataParams = {\n  //   objectName: \"layoutactions\",\n  //   objectData: {},\n  //   keyConditions: [\n  //     {\n  //       field: \"orgname\",\n  //       value: localdata.orgname,\n  //       expression: \"=\",\n  //     },\n  //     {\n  //       field: \"id\",\n  //       value: clickprops.actionid,\n  //       expression: \"=\",\n  //     },\n  //   ],\n  //   filterConditions: [],\n  //   pageSize: \"\",\n  //   limit: \"\",\n  //   exclusiveStartKey: \"\",\n  // };\n  // console.log(\"metadataParams\" + JSON.stringify(metadataParams));\n  // let metadataresult = await getRecorddata(metadataParams);\n  // if (metadataresult.isSuccess === \"false\") {\n  //   alert(\"metadata\" + metadataresult.message);\n  // } else {\n  //   if (metadataresult.dataprops.Items[0]) {\n  //     console.log(metadataresult);\n  //     let action = metadataresult.dataprops.Items[0].action;\n  //     if (action.type === \"redirect\") {\n  //       if (action.nexturl.type === \"new\") {\n  //         let nexturl = action.nexturl;\n  //         let replacetext = nexturl.replacetext;\n  //         for (let replaceparamI in nexturl.replaceparams) {\n  //           let replaceparam = nexturl.replaceparams[replaceparamI];\n  //           if (replaceparam.type === \"localdata\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               localdata[replaceparam.name]\n  //             );\n  //           }\n  //           if (replaceparam.type === \"clickprops\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               clickprops[replaceparam.name]\n  //             );\n  //           }\n  //           if (replaceparam.type === \"recorddata\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               recorddata[replaceparam.name]\n  //             );\n  //           }\n  //         }\n  //         console.log(replacetext);\n  //         window.location.assign(replacetext);\n  //       }\n  //       if (action.nexturl.type === \"old\") {\n  //         window.history.back();\n  //       }\n  //     }\n  //     if (action.type === \"dataupdateandredirect\") {\n  //       if (action.nexturl.type === \"new\") {\n  //         console.log(action);\n  //         //dataupdate\n  //         for (let objectvar in action.dataupdate) {\n  //           let object = action.dataupdate[objectvar];\n  //           let objectTableName = object.tablename;\n  //           let objectfields = object.fields;\n  //           for (let objectfield in objectfields) {\n  //             let objectfieldvaluereplacetext =\n  //               objectfields[objectfield].replacetext;\n  //             console.log(objectfieldvaluereplacetext);\n  //             for (let replaceparam in objectfields[objectfield]\n  //               .replaceparams) {\n  //               let replaceparamvalue =\n  //                 objectfields[objectfield].replaceparams[replaceparam];\n  //               console.log(replaceparamvalue);\n  //               if (replaceparamvalue.type === \"recorddata\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   recorddata[replaceparamvalue.name]\n  //                 );\n  //               }\n  //               if (replaceparamvalue.type === \"localdata\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   localdata[replaceparamvalue.name]\n  //                 );\n  //               }\n  //               if (replaceparamvalue.type === \"clickprops\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   clickprops[replaceparamvalue.name]\n  //                 );\n  //               }\n  //             }\n  //             console.log(objectfieldvaluereplacetext);\n  //             recorddata[objectfield] = objectfieldvaluereplacetext;\n  //           }\n  //           console.log(recorddata);\n  //           let result = await createRecord({\n  //             objectName: objectTableName,\n  //             objectData: recorddata,\n  //           });\n  //           if (result.isSuccess === \"false\") {\n  //             alert(result.message);\n  //           } else {\n  //             ////////// redirection\n  //             let nexturl = action.nexturl;\n  //             if (nexturl) {\n  //               let replacetext = nexturl.replacetext;\n  //               for (let replaceparamI in nexturl.replaceparams) {\n  //                 let replaceparam = nexturl.replaceparams[replaceparamI];\n  //                 if (replaceparam.type === \"localdata\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     localdata[replaceparam.name]\n  //                   );\n  //                 }\n  //                 if (replaceparam.type === \"recorddata\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     recorddata[replaceparam.name]\n  //                   );\n  //                 }\n  //                 if (replaceparam.type === \"clickprops\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     clickprops[replaceparam.name]\n  //                   );\n  //                 }\n  //               }\n  //               console.log(replacetext);\n  //               window.location.assign(replacetext);\n  //             }\n  //             ////////\n  //           }\n  //         }\n  //       }\n  //       if (action.nexturl.type === \"old\") {\n  //         window.history.back();\n  //       }\n  //     }\n  //   }\n  // }\n};\nexport const getMonthStringDisplay = props => {\n  let {\n    monthIndex\n  } = props;\n  let monthStringDisplay = \"\";\n\n  if (monthIndex === 0) {\n    monthStringDisplay = \"JAN\";\n  }\n\n  if (monthIndex === 1) {\n    monthStringDisplay = \"FEB\";\n  }\n\n  if (monthIndex === 2) {\n    monthStringDisplay = \"MAR\";\n  }\n\n  if (monthIndex === 3) {\n    monthStringDisplay = \"APR\";\n  }\n\n  if (monthIndex === 4) {\n    monthStringDisplay = \"MAY\";\n  }\n\n  if (monthIndex === 5) {\n    monthStringDisplay = \"JUN\";\n  }\n\n  if (monthIndex === 6) {\n    monthStringDisplay = \"JUL\";\n  }\n\n  if (monthIndex === 7) {\n    monthStringDisplay = \"AUG\";\n  }\n\n  if (monthIndex === 8) {\n    monthStringDisplay = \"SEP\";\n  }\n\n  if (monthIndex === 9) {\n    monthStringDisplay = \"OCT\";\n  }\n\n  if (monthIndex === 10) {\n    monthStringDisplay = \"NOV\";\n  }\n\n  if (monthIndex === 11) {\n    monthStringDisplay = \"DEC\";\n  }\n\n  return monthStringDisplay;\n};\nexport const getMonthDigitalDisplay = props => {\n  let {\n    monthIndex\n  } = props;\n  let monthDigitalDisplay = \"\";\n\n  if (monthIndex < 9) {\n    monthIndex = monthIndex + 1;\n    monthDigitalDisplay = \"0\" + monthIndex;\n  } else {\n    monthDigitalDisplay = parseInt(monthIndex) + 1;\n  }\n\n  return monthDigitalDisplay;\n};\nexport const getDateDigitalDisplay = props => {\n  let {\n    dateIndex\n  } = props;\n  let dateDigitalDisplay = \"\";\n\n  if (dateIndex < 10) {\n    dateDigitalDisplay = \"0\" + dateIndex;\n  } else {\n    dateDigitalDisplay = dateIndex;\n  }\n\n  return dateDigitalDisplay;\n};\nexport const getDayStringDisplay = props => {\n  let {\n    dayIndex\n  } = props;\n\n  if (dayIndex === 0) {\n    dayIndex = \"SUN\";\n  }\n\n  if (dayIndex === 1) {\n    dayIndex = \"MON\";\n  }\n\n  if (dayIndex === 2) {\n    dayIndex = \"TUES\";\n  }\n\n  if (dayIndex === 3) {\n    dayIndex = \"WED\";\n  }\n\n  if (dayIndex === 4) {\n    dayIndex = \"THURS\";\n  }\n\n  if (dayIndex === 5) {\n    dayIndex = \"FRI\";\n  }\n\n  if (dayIndex === 6) {\n    dayIndex = \"SAT\";\n  }\n\n  return dayIndex;\n};\nexport const getUniqueArray = props => {\n  let {\n    dataArray,\n    param\n  } = props;\n  let uniqueDataArray = [];\n\n  for (let i = 0; i < dataArray.length; i++) {\n    let dataArrayVar = dataArray[i];\n    let isExist = false;\n\n    for (let j = 0; j < uniqueDataArray.length; j++) {\n      let uniqueDataArrayVar = uniqueDataArray[j];\n\n      if (dataArrayVar[param] === uniqueDataArrayVar[param]) {\n        isExist = true;\n      }\n    }\n\n    if (isExist === false) {\n      uniqueDataArray.push(dataArrayVar);\n    }\n  }\n\n  return uniqueDataArray;\n};\nexport const getLocalData = props => {\n  let routerpropsparams = props.routerprops.match.params;\n  let urlsearchparams = new URLSearchParams(props.routerprops.location.search);\n  let localdata = {};\n  let d = new Date();\n  localdata[\"currenttimesting\"] = d.toISOString().toLowerCase();\n  localdata[\"orgname\"] = \"gouthama\";\n  localdata[\"userprofileid\"] = \"gouthama-admin\";\n  localdata[\"userid\"] = \"pradeep\";\n  localdata[\"orgname\"] = sessionStorage.getItem(\"orgname\");\n  localdata[\"userprofileid\"] = sessionStorage.getItem(\"userprofileid\");\n  localdata[\"userroleid\"] = sessionStorage.getItem(\"userroleid\");\n  localdata[\"userid\"] = sessionStorage.getItem(\"orguserid\");\n  localdata[\"appname\"] = routerpropsparams.appname ? routerpropsparams.appname.toLowerCase() : undefined;\n  localdata[\"maintabname\"] = routerpropsparams.maintabname ? routerpropsparams.maintabname.toLowerCase() : undefined;\n  localdata[\"sidetabname\"] = routerpropsparams.sidetabname ? routerpropsparams.sidetabname.toLowerCase() : undefined;\n  localdata[\"actionname\"] = routerpropsparams.actionname ? routerpropsparams.actionname.toLowerCase() : undefined;\n  localdata[\"urlsearchparams\"] = urlsearchparams;\n  let recordId = urlsearchparams.get(\"id\");\n  let viewname = urlsearchparams.get(\"viewname\");\n  let relatedviewname = urlsearchparams.get(\"relatedviewname\");\n  localdata[\"recordid\"] = recordId ? recordId.toLowerCase() : undefined;\n  localdata[\"viewname\"] = viewname ? viewname.toLowerCase() : undefined;\n  localdata[\"relatedviewname\"] = relatedviewname ? relatedviewname.toLowerCase() : undefined;\n  return localdata;\n}; // export function GetCreateEditRecordPagelayout(params) {\n//   console.log(params);\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\"\n//       }}\n//     >\n//       <div\n//         className=\"mediumfont greybg\"\n//         style={{\n//           textAlign: \"left\",\n//           width: \"80%\",\n//           padding: \"5px 0px\"\n//         }}\n//       >\n//         Basic Information\n//       </div>\n//       <div className=\"smallfont\" style={{ textAlign: \"left\", width: \"80%\" }}>\n//         Name\n//       </div>\n//       <input\n//         className=\"largeinput\"\n//         style={{ width: \"80%\", marginBottom: \"8px\" }}\n//       />\n//       <div className=\"smallfont\" style={{ textAlign: \"left\", width: \"80%\" }}>\n//         API\n//       </div>\n//       <input\n//         className=\"largeinput\"\n//         style={{ width: \"80%\", marginBottom: \"8px\" }}\n//       />\n//     </div>\n//   );\n// }\n// export function SortArrayObjectbyField(params) {\n//   let dataObjectjsarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataObjectjsarray.push(params.dataObjectjs[key].fields);\n//   }\n//   function compare(a, b) {\n//     // Use toUpperCase() to ignore character casing\n//     let afieldvalue = a[params.fieldname];\n//     let bfieldvalue = b[params.fieldname];\n//     let comparison = 0;\n//     if (afieldvalue === null || afieldvalue === undefined) {\n//       comparison = -1;\n//     } else if (bfieldvalue === null || bfieldvalue === undefined) {\n//       comparison = 1;\n//     } else {\n//       const valueA = afieldvalue.toUpperCase();\n//       const valueB = bfieldvalue.toUpperCase();\n//       if (valueA > valueB) {\n//         comparison = 1;\n//       } else if (valueA < valueB) {\n//         comparison = -1;\n//       }\n//     }\n//     return comparison;\n//   }\n//   dataObjectjsarray.sort(compare);\n//   let dataObjectjssorted = {};\n//   for (let key in dataObjectjsarray) {\n//     let fieldsjs = {};\n//     fieldsjs.fields = dataObjectjsarray[key];\n//     dataObjectjssorted[dataObjectjsarray[key].Name] = fieldsjs;\n//   }\n//   return dataObjectjssorted;\n// }\n// export function GetTablefromObjects(params) {}\n// export function GetFirstkeyfromObject(params) {\n//   let dataarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   let firstkey = \"\";\n//   if (dataarray.length > 0) {\n//     firstkey = dataarray[0].label;\n//   }\n//   return firstkey;\n// }\n// export function GetHtmlArrayfromObject(params) {\n//   // get repeatedhtml from objectarray based on label, name field value like <div>test1</div><div>test2</div> from {{name:\"test1\",label:\"test1\"},{name:\"test2\",label:\"test2\"}}\n//   let htmlarray = [];\n//   let propvalues = {};\n//   let dataarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   if (params.classNamejs) {\n//     propvalues[\"className\"] = params.classNamejs;\n//   }\n//   if (params.stylejs) {\n//     propvalues[\"style\"] = params.stylejs;\n//   }\n//   for (let key in dataarray) {\n//     let dataarrayvar = dataarray[key];\n//     if (params.idjs) {\n//       propvalues[\"id\"] = params.idjs + dataarrayvar.name;\n//       propvalues[\"data-name\"] = dataarrayvar.name;\n//     }\n//     if (params.onClickjs) {\n//       let onclickfunction = e => {\n//         params.onClickjs(e.target.id);\n//       };\n//       propvalues[\"onClick\"] = onclickfunction;\n//     }\n//     let newelement = React.createElement(\n//       params.tagnamejs,\n//       propvalues,\n//       dataarrayvar.label\n//     );\n//     if (params.parenttagnamejs) {\n//       let parentpropvalues = {};\n//       if (params.parentclassNamejs) {\n//         parentpropvalues.className = params.parentclassNamejs;\n//       }\n//       if (params.parentstylejs) {\n//         parentpropvalues.style = params.parentstylejs;\n//       }\n//       let siblingsparentpropvalues = {};\n//       if (params.siblingsparentclassNamejs) {\n//         siblingsparentpropvalues.className = params.siblingsparentclassNamejs;\n//       }\n//       if (params.siblingsparentidjs) {\n//         siblingsparentpropvalues.id =\n//           params.siblingsparentidjs + dataarrayvar.name;\n//         siblingsparentpropvalues[\"data-name\"] = dataarrayvar.name;\n//       }\n//       if (params.siblingsparentonClickjs) {\n//         let onclickfunction = e => {\n//           params.siblingsparentonClickjs(e.target.id);\n//         };\n//         siblingsparentpropvalues[\"onClick\"] = onclickfunction;\n//       }\n//       let childhtml = [];\n//       childhtml.push(dataarrayvar.label);\n//       if (params.statichtmlsibiling) {\n//         childhtml.push(params.statichtmlsibiling);\n//       }\n//       let siblingsparentelement = React.createElement(\n//         params.siblingsparenttagnamejs,\n//         siblingsparentpropvalues,\n//         childhtml\n//       );\n//       newelement = React.createElement(\n//         params.parenttagnamejs,\n//         parentpropvalues,\n//         siblingsparentelement\n//       );\n//     }\n//     htmlarray.push(newelement);\n//   }\n//   return htmlarray;\n// }\n// export function gethtmlbasedonotherobject(params) {\n//   // get repeatedhtml from objectarray based on other object label, name field value like <div>test1</div><div>test2</div> from {{name:\"test1\",label:\"test1\"},{name:\"test2\",label:\"test2\"}}\n//   // params.dataObjectjs\n//   // params.datalabelObjectjs\n//   // params.datacolumnObjectjs\n//   // params.datarowObjectjs\n//   let dataobjectarrayhtml = [];\n//   let labelarrayhtml = [];\n//   let columnarrayhtml = [];\n//   let rowarrayhtml = [];\n//   let tablearrayhtml = [];\n//   let dataobjectpropvalues = {};\n//   let labelpropvalues = {};\n//   let columnpropvalues = {};\n//   let rowpropvalues = {};\n//   let tablepropvalues = {};\n//   let dataarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   let labelarray = [];\n//   for (let key in params.labeldataObjectjs) {\n//     labelarray.push(params.labeldataObjectjs[key]);\n//   }\n//   labelarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   if (params.classNamejs) {\n//     dataobjectpropvalues[\"className\"] = params.classNamejs;\n//   }\n//   if (params.stylejs) {\n//     dataobjectpropvalues[\"style\"] = params.stylejs;\n//   }\n//   if (params.labelclassNamejs) {\n//     labelpropvalues[\"className\"] = params.labelclassNamejs;\n//   }\n//   if (params.labelstylejs) {\n//     labelpropvalues[\"style\"] = params.labelstylejs;\n//   }\n//   if (params.columnclassNamejs) {\n//     columnpropvalues[\"className\"] = params.columnclassNamejs;\n//   }\n//   if (params.columnstylejs) {\n//     columnpropvalues[\"style\"] = params.columnstylejs;\n//   }\n//   if (params.rowclassNamejs) {\n//     rowpropvalues[\"className\"] = params.rowclassNamejs;\n//   }\n//   if (params.rowstylejs) {\n//     rowpropvalues[\"style\"] = params.rowstylejs;\n//   }\n//   if (params.tableclassNamejs) {\n//     tablepropvalues[\"className\"] = params.tableclassNamejs;\n//   }\n//   if (params.tablestylejs) {\n//     tablepropvalues[\"style\"] = params.tablestylejs;\n//   }\n//   if (params.tableidjs) {\n//     tablepropvalues[\"id\"] = params.tableidjs;\n//     tablepropvalues[\"data-name\"] = params.tableidjs;\n//   }\n//   if (params.tableonClickjs) {\n//     let onclickfunction = e => {\n//       params.tableonClickjs(e.target.id);\n//     };\n//     tablepropvalues[\"onClick\"] = onclickfunction;\n//   }\n//   rowarrayhtml = [];\n//   for (let key in dataarray) {\n//     let dataarrayvar = dataarray[key].fields;\n//     columnarrayhtml = [];\n//     if (params.rowidjs) {\n//       rowpropvalues[\"id\"] = params.rowidjs + dataarrayvar.Name;\n//       rowpropvalues[\"data-name\"] = dataarrayvar.Name;\n//     }\n//     if (params.rowonClickjs) {\n//       let onclickfunction = e => {\n//         params.rowonClickjs(e.target.id);\n//       };\n//       rowpropvalues[\"onClick\"] = onclickfunction;\n//     }\n//     if (params.columnidjs) {\n//       columnpropvalues[\"id\"] = params.columnidjs + dataarrayvar.Name;\n//       columnpropvalues[\"data-name\"] = dataarrayvar.Name;\n//     }\n//     if (params.columnonClickjs) {\n//       let onclickfunction = e => {\n//         params.columnonClickjs(e.target.id);\n//       };\n//       columnpropvalues[\"onClick\"] = onclickfunction;\n//     }\n//     let mainobjectfieldhtml = [];\n//     if (labelarray) {\n//       for (let labelkey in labelarray) {\n//         let labelarrayvar = labelarray[labelkey];\n//         if (params.idjs) {\n//           dataobjectpropvalues[\"id\"] = params.idjs + dataarrayvar.Name;\n//           dataobjectpropvalues[\"data-name\"] = dataarrayvar.Name;\n//         }\n//         if (params.onClickjs) {\n//           let onclickfunction = e => {\n//             params.onClickjs(e.target.id);\n//           };\n//           dataobjectpropvalues[\"onClick\"] = onclickfunction;\n//         }\n//         if (params.labelidjs) {\n//           labelpropvalues[\"id\"] = params.labelidjs + labelarrayvar.name;\n//           labelpropvalues[\"data-name\"] = labelarrayvar.name;\n//         }\n//         if (params.labelonClickjs) {\n//           let onclickfunction = e => {\n//             params.labelonClickjs(e.target.id);\n//           };\n//           labelpropvalues[\"onClick\"] = onclickfunction;\n//         }\n//         let labelelement = React.createElement(\n//           params.labeltagnamejs,\n//           labelpropvalues,\n//           labelarrayvar.label\n//         );\n//         let fieldelement = React.createElement(\n//           params.tagnamejs,\n//           dataobjectpropvalues,\n//           dataarrayvar[labelarrayvar.name]\n//         );\n//         let columnelement = [];\n//         if (params.isshowlabel) {\n//           columnelement.push(labelelement);\n//         }\n//         columnelement.push(fieldelement);\n//         columnarrayhtml.push(\n//           React.createElement(\n//             params.columntagnamejs,\n//             columnpropvalues,\n//             columnelement\n//           )\n//         );\n//       }\n//     }\n//     rowarrayhtml.push(\n//       React.createElement(params.rowtagnamejs, rowpropvalues, columnarrayhtml)\n//     );\n//   }\n//   if (params.tabletagnamejs) {\n//     tablearrayhtml.push(\n//       React.createElement(params.tabletagnamejs, tablepropvalues, rowarrayhtml)\n//     );\n//     return tablearrayhtml;\n//   }\n//   return rowarrayhtml;\n// }\n// export function GettableHtmlfromObject(params) {\n//   let thobject = params.thobjectjs;\n//   let tdobject = params.tdobjectjs;\n//   let orderby = \"name\";\n//   let thparams = {};\n//   thparams.tagnamejs = \"th\";\n//   let thonclick = () => {\n//     alert();\n//   };\n//   thparams.onClickjs = thonclick;\n//   thparams.dataObjectjs = thobject;\n//   thparams.stylejs = { fontSize: \"40px\" };\n//   thparams.idjs = \"listpage-objectsetupicon-\";\n//   thparams.classNamejs = \"bluefont  \";\n//   thparams.statichtmlsibiling = [];\n//   thparams.statichtmlsibiling.push(\n//     <i class=\"material-icons smallleftpadding org-cursor\">\n//       keyboard_arrow_down\n//     </i>\n//   );\n//   thparams.siblingsparentclassNamejs = \"spacebetween\";\n//   thparams.siblingsparenttagnamejs = \"span\";\n//   //thparams.parentclassNamejs = \"spacebetween\";\n//   thparams.parenttagnamejs = \"th\";\n//   thparams.parentstylejs = {\n//     width: \"50%\"\n//   };\n//   let thhtml = GetHtmlArrayfromObject(thparams);\n//   let throwhtml = React.createElement(\"tr\", {}, thhtml);\n//   //return thhtml;\n//   let tdparams = {};\n//   tdparams.dataObjectjs = tdobject;\n//   tdparams.tagnamejs = \"span\";\n//   let onclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.onClickjs = onclickfunction;\n//   tdparams.stylejs = { fontSize: \"30px\" };\n//   tdparams.idjs = \"listpage-objectsetupicon-\";\n//   tdparams.classNamejs = \" bluefont  \";\n//   tdparams.labeldataObjectjs = thobject;\n//   tdparams.labeltagnamejs = \"th\";\n//   let labelonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.labelonClickjs = labelonclickfunction;\n//   tdparams.labelstylejs = { fontSize: \"30px\" };\n//   tdparams.labelidjs = \"listpage-objectsetupicon-\";\n//   tdparams.labelclassNamejs = \" bluefont  \";\n//   tdparams.columntagnamejs = \"td\";\n//   let columnonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.columnonClickjs = columnonclickfunction;\n//   tdparams.columnstylejs = { fontSize: \"30px\" };\n//   tdparams.columnidjs = \"listpage-objectsetupicon-\";\n//   tdparams.columnclassNamejs = \" bluefont   \";\n//   tdparams.rowtagnamejs = \"tr\";\n//   let rowonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.rowonClickjs = rowonclickfunction;\n//   tdparams.rowstylejs = { fontSize: \"30px\" };\n//   tdparams.rowidjs = \"listpage-objectsetupicon-\";\n//   tdparams.rowclassNamejs = \" bluefont   \";\n//   tdparams.isshowlabel = false;\n//   let tdhtml = gethtmlbasedonotherobject(tdparams);\n//   //return tdhtml;\n//   let tableelement = [];\n//   tableelement.push(throwhtml);\n//   tableelement.push(tdhtml);\n//   let tablehtml = React.createElement(\n//     \"table\",\n//     { border: \"1px\", className: \"col-12 table tableclass\" },\n//     tableelement\n//   );\n//   return tablehtml;\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAlphabetPanel\");","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/src/js/index.js"],"names":["React","consoleLog","isallowlogs","str","console","log","showError","props","htmlArray","document","getElementsByClassName","htmlErrorArray","i","length","style","display","j","name","dataset","error","message","insertAdjacentHTML","sortArray","items","orderby","typeofsortby","sort","a","b","nameA","toUpperCase","nameB","GetAlphabetPanel","params","alphabethtml","letterOnclick","e","aplhabetOnClickjs","target","innerHTML","push","padding","fieldTypeHtmltoDBmapping","fieldType","inputOrOutput","output","serverButtonHandler","getMonthStringDisplay","monthIndex","monthStringDisplay","getMonthDigitalDisplay","monthDigitalDisplay","parseInt","getDateDigitalDisplay","dateIndex","dateDigitalDisplay","getDayStringDisplay","dayIndex","getUniqueArray","dataArray","param","uniqueDataArray","dataArrayVar","isExist","uniqueDataArrayVar","getLocalData","routerpropsparams","routerprops","match","urlsearchparams","URLSearchParams","location","search","localdata","d","Date","toISOString","toLowerCase","sessionStorage","getItem","appname","undefined","maintabname","sidetabname","actionname","recordId","get","viewname","relatedviewname"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n//import { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\n\nexport const consoleLog = (isallowlogs, str) => {\n  if (isallowlogs) {\n    console.log(str);\n  }\n};\n\nexport const showError = (props) => {\n  let htmlArray = document.getElementsByClassName(\"org-datainput\");\n  let htmlErrorArray = document.getElementsByClassName(\"org-datainputerror\");\n  for (let i = 0; i < htmlErrorArray.length; i++) {\n    htmlErrorArray[i].style.display = \"none\";\n  }\n  for (let i = 0; i < htmlArray.length; i++) {\n    for (let j = 0; j < props.length; j++) {\n      console.log(htmlArray[i]);\n      console.log(props);\n      // console.log(props[htmlArray[i]);\n      if (props && props[j].name === htmlArray[i].dataset.name) {\n        let error =\n          \"<div style='color:red;' class='org-datainputerror'>\" +\n          props[j].message +\n          \"</div>\";\n        htmlArray[i].insertAdjacentHTML(\"afterend\", error);\n      }\n    }\n  }\n};\n\nexport const sortArray = (items, orderby, typeofsortby) => {\n  // sort by value\n  if (typeofsortby === \"integer\") {\n    return items.sort(function (a, b) {\n      return a[orderby] - b[orderby];\n    });\n  }\n\n  // sort by name\n  if (typeofsortby === \"string\") {\n    return items.sort(function (a, b) {\n      var nameA = a[orderby].toUpperCase(); // ignore upper and lowercase\n      var nameB = b[orderby].toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      // names must be equal\n      return 0;\n    });\n  }\n};\nexport function GetAlphabetPanel(params) {\n  let alphabethtml = [];\n\n  let letterOnclick = (e) => {\n    params.aplhabetOnClickjs(e.target.innerHTML);\n  };\n\n  alphabethtml.push(\n    <div>\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        A\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        B\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        C\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        D\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        E\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        F\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        G\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        H\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        I\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        J\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        K\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        L\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        M\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        N\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        O\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        P\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        Q\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        R\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        S\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        T\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        U\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        V\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        W\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        X\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        Y\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        Z\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        All\n      </span>\n    </div>\n  );\n  return alphabethtml;\n}\n\nexport const fieldTypeHtmltoDBmapping = (props) => {\n  let { fieldType, inputOrOutput } = props;\n  console.log(fieldType);\n  console.log(inputOrOutput);\n  let output = \"\";\n  if (fieldType === \"text\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputtext\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n  if (fieldType === \"button\") {\n    if (inputOrOutput === \"input\") {\n      output = \"button\";\n    } else {\n      output = \"button\";\n    }\n  }\n  if (fieldType === \"buttonpanel\") {\n    if (inputOrOutput === \"input\") {\n      output = \"buttonpanel\";\n    } else {\n      output = \"buttonpanel\";\n    }\n  }\n  if (fieldType === \"email\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputemail\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n  if (fieldType === \"number\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputnumber\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n  if (fieldType === \"select\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputselect\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n\n  if (fieldType === \"image\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputimage\";\n    } else {\n      output = \"outputimage\";\n    }\n  }\n\n  return output;\n};\n\nexport const serverButtonHandler = async (props) => {\n  // let { clickprops, localdata, recorddata } = props;\n  // console.log(clickprops);\n  // let metadataParams = {\n  //   objectName: \"layoutactions\",\n  //   objectData: {},\n  //   keyConditions: [\n  //     {\n  //       field: \"orgname\",\n  //       value: localdata.orgname,\n  //       expression: \"=\",\n  //     },\n  //     {\n  //       field: \"id\",\n  //       value: clickprops.actionid,\n  //       expression: \"=\",\n  //     },\n  //   ],\n  //   filterConditions: [],\n  //   pageSize: \"\",\n  //   limit: \"\",\n  //   exclusiveStartKey: \"\",\n  // };\n  // console.log(\"metadataParams\" + JSON.stringify(metadataParams));\n  // let metadataresult = await getRecorddata(metadataParams);\n  // if (metadataresult.isSuccess === \"false\") {\n  //   alert(\"metadata\" + metadataresult.message);\n  // } else {\n  //   if (metadataresult.dataprops.Items[0]) {\n  //     console.log(metadataresult);\n  //     let action = metadataresult.dataprops.Items[0].action;\n  //     if (action.type === \"redirect\") {\n  //       if (action.nexturl.type === \"new\") {\n  //         let nexturl = action.nexturl;\n  //         let replacetext = nexturl.replacetext;\n  //         for (let replaceparamI in nexturl.replaceparams) {\n  //           let replaceparam = nexturl.replaceparams[replaceparamI];\n  //           if (replaceparam.type === \"localdata\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               localdata[replaceparam.name]\n  //             );\n  //           }\n  //           if (replaceparam.type === \"clickprops\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               clickprops[replaceparam.name]\n  //             );\n  //           }\n  //           if (replaceparam.type === \"recorddata\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               recorddata[replaceparam.name]\n  //             );\n  //           }\n  //         }\n  //         console.log(replacetext);\n  //         window.location.assign(replacetext);\n  //       }\n  //       if (action.nexturl.type === \"old\") {\n  //         window.history.back();\n  //       }\n  //     }\n  //     if (action.type === \"dataupdateandredirect\") {\n  //       if (action.nexturl.type === \"new\") {\n  //         console.log(action);\n  //         //dataupdate\n  //         for (let objectvar in action.dataupdate) {\n  //           let object = action.dataupdate[objectvar];\n  //           let objectTableName = object.tablename;\n  //           let objectfields = object.fields;\n  //           for (let objectfield in objectfields) {\n  //             let objectfieldvaluereplacetext =\n  //               objectfields[objectfield].replacetext;\n  //             console.log(objectfieldvaluereplacetext);\n  //             for (let replaceparam in objectfields[objectfield]\n  //               .replaceparams) {\n  //               let replaceparamvalue =\n  //                 objectfields[objectfield].replaceparams[replaceparam];\n  //               console.log(replaceparamvalue);\n  //               if (replaceparamvalue.type === \"recorddata\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   recorddata[replaceparamvalue.name]\n  //                 );\n  //               }\n  //               if (replaceparamvalue.type === \"localdata\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   localdata[replaceparamvalue.name]\n  //                 );\n  //               }\n  //               if (replaceparamvalue.type === \"clickprops\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   clickprops[replaceparamvalue.name]\n  //                 );\n  //               }\n  //             }\n  //             console.log(objectfieldvaluereplacetext);\n  //             recorddata[objectfield] = objectfieldvaluereplacetext;\n  //           }\n  //           console.log(recorddata);\n  //           let result = await createRecord({\n  //             objectName: objectTableName,\n  //             objectData: recorddata,\n  //           });\n  //           if (result.isSuccess === \"false\") {\n  //             alert(result.message);\n  //           } else {\n  //             ////////// redirection\n  //             let nexturl = action.nexturl;\n  //             if (nexturl) {\n  //               let replacetext = nexturl.replacetext;\n  //               for (let replaceparamI in nexturl.replaceparams) {\n  //                 let replaceparam = nexturl.replaceparams[replaceparamI];\n  //                 if (replaceparam.type === \"localdata\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     localdata[replaceparam.name]\n  //                   );\n  //                 }\n  //                 if (replaceparam.type === \"recorddata\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     recorddata[replaceparam.name]\n  //                   );\n  //                 }\n  //                 if (replaceparam.type === \"clickprops\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     clickprops[replaceparam.name]\n  //                   );\n  //                 }\n  //               }\n  //               console.log(replacetext);\n  //               window.location.assign(replacetext);\n  //             }\n  //             ////////\n  //           }\n  //         }\n  //       }\n  //       if (action.nexturl.type === \"old\") {\n  //         window.history.back();\n  //       }\n  //     }\n  //   }\n  // }\n};\nexport const getMonthStringDisplay = (props) => {\n  let { monthIndex } = props;\n  let monthStringDisplay = \"\";\n  if (monthIndex === 0) {\n    monthStringDisplay = \"JAN\";\n  }\n  if (monthIndex === 1) {\n    monthStringDisplay = \"FEB\";\n  }\n  if (monthIndex === 2) {\n    monthStringDisplay = \"MAR\";\n  }\n  if (monthIndex === 3) {\n    monthStringDisplay = \"APR\";\n  }\n  if (monthIndex === 4) {\n    monthStringDisplay = \"MAY\";\n  }\n  if (monthIndex === 5) {\n    monthStringDisplay = \"JUN\";\n  }\n  if (monthIndex === 6) {\n    monthStringDisplay = \"JUL\";\n  }\n  if (monthIndex === 7) {\n    monthStringDisplay = \"AUG\";\n  }\n  if (monthIndex === 8) {\n    monthStringDisplay = \"SEP\";\n  }\n  if (monthIndex === 9) {\n    monthStringDisplay = \"OCT\";\n  }\n  if (monthIndex === 10) {\n    monthStringDisplay = \"NOV\";\n  }\n  if (monthIndex === 11) {\n    monthStringDisplay = \"DEC\";\n  }\n  return monthStringDisplay;\n};\nexport const getMonthDigitalDisplay = (props) => {\n  let { monthIndex } = props;\n  let monthDigitalDisplay = \"\";\n  if (monthIndex < 9) {\n    monthIndex = monthIndex + 1;\n    monthDigitalDisplay = \"0\" + monthIndex;\n  } else {\n    monthDigitalDisplay = parseInt(monthIndex) + 1;\n  }\n\n  return monthDigitalDisplay;\n};\n\nexport const getDateDigitalDisplay = (props) => {\n  let { dateIndex } = props;\n  let dateDigitalDisplay = \"\";\n  if (dateIndex < 10) {\n    dateDigitalDisplay = \"0\" + dateIndex;\n  } else {\n    dateDigitalDisplay = dateIndex;\n  }\n\n  return dateDigitalDisplay;\n};\n\nexport const getDayStringDisplay = (props) => {\n  let { dayIndex } = props;\n  if (dayIndex === 0) {\n    dayIndex = \"SUN\";\n  }\n  if (dayIndex === 1) {\n    dayIndex = \"MON\";\n  }\n  if (dayIndex === 2) {\n    dayIndex = \"TUES\";\n  }\n  if (dayIndex === 3) {\n    dayIndex = \"WED\";\n  }\n  if (dayIndex === 4) {\n    dayIndex = \"THURS\";\n  }\n  if (dayIndex === 5) {\n    dayIndex = \"FRI\";\n  }\n  if (dayIndex === 6) {\n    dayIndex = \"SAT\";\n  }\n\n  return dayIndex;\n};\n\nexport const getUniqueArray = (props) => {\n  let { dataArray, param } = props;\n  let uniqueDataArray = [];\n  for (let i = 0; i < dataArray.length; i++) {\n    let dataArrayVar = dataArray[i];\n    let isExist = false;\n    for (let j = 0; j < uniqueDataArray.length; j++) {\n      let uniqueDataArrayVar = uniqueDataArray[j];\n      if (dataArrayVar[param] === uniqueDataArrayVar[param]) {\n        isExist = true;\n      }\n    }\n    if (isExist === false) {\n      uniqueDataArray.push(dataArrayVar);\n    }\n  }\n  return uniqueDataArray;\n};\nexport const getLocalData = (props) => {\n  let routerpropsparams = props.routerprops.match.params;\n  let urlsearchparams = new URLSearchParams(props.routerprops.location.search);\n\n  let localdata = {};\n  let d = new Date();\n\n  localdata[\"currenttimesting\"] = d.toISOString().toLowerCase();\n  localdata[\"orgname\"] = \"gouthama\";\n  localdata[\"userprofileid\"] = \"gouthama-admin\";\n  localdata[\"userid\"] = \"pradeep\";\n  localdata[\"orgname\"] = sessionStorage.getItem(\"orgname\");\n  localdata[\"userprofileid\"] = sessionStorage.getItem(\"userprofileid\");\n  localdata[\"userroleid\"] = sessionStorage.getItem(\"userroleid\");\n  localdata[\"userid\"] = sessionStorage.getItem(\"orguserid\");\n\n  localdata[\"appname\"] = routerpropsparams.appname\n    ? routerpropsparams.appname.toLowerCase()\n    : undefined;\n\n  localdata[\"maintabname\"] = routerpropsparams.maintabname\n    ? routerpropsparams.maintabname.toLowerCase()\n    : undefined;\n\n  localdata[\"sidetabname\"] = routerpropsparams.sidetabname\n    ? routerpropsparams.sidetabname.toLowerCase()\n    : undefined;\n\n  localdata[\"actionname\"] = routerpropsparams.actionname\n    ? routerpropsparams.actionname.toLowerCase()\n    : undefined;\n\n  localdata[\"urlsearchparams\"] = urlsearchparams;\n  let recordId = urlsearchparams.get(\"id\");\n  let viewname = urlsearchparams.get(\"viewname\");\n  let relatedviewname = urlsearchparams.get(\"relatedviewname\");\n  localdata[\"recordid\"] = recordId ? recordId.toLowerCase() : undefined;\n  localdata[\"viewname\"] = viewname ? viewname.toLowerCase() : undefined;\n  localdata[\"relatedviewname\"] = relatedviewname\n    ? relatedviewname.toLowerCase()\n    : undefined;\n\n  return localdata;\n};\n\n// export function GetCreateEditRecordPagelayout(params) {\n//   console.log(params);\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\"\n//       }}\n//     >\n//       <div\n//         className=\"mediumfont greybg\"\n//         style={{\n//           textAlign: \"left\",\n//           width: \"80%\",\n//           padding: \"5px 0px\"\n//         }}\n//       >\n//         Basic Information\n//       </div>\n//       <div className=\"smallfont\" style={{ textAlign: \"left\", width: \"80%\" }}>\n//         Name\n//       </div>\n//       <input\n//         className=\"largeinput\"\n//         style={{ width: \"80%\", marginBottom: \"8px\" }}\n//       />\n//       <div className=\"smallfont\" style={{ textAlign: \"left\", width: \"80%\" }}>\n//         API\n//       </div>\n//       <input\n//         className=\"largeinput\"\n//         style={{ width: \"80%\", marginBottom: \"8px\" }}\n//       />\n//     </div>\n//   );\n// }\n\n// export function SortArrayObjectbyField(params) {\n//   let dataObjectjsarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataObjectjsarray.push(params.dataObjectjs[key].fields);\n//   }\n//   function compare(a, b) {\n//     // Use toUpperCase() to ignore character casing\n//     let afieldvalue = a[params.fieldname];\n//     let bfieldvalue = b[params.fieldname];\n//     let comparison = 0;\n//     if (afieldvalue === null || afieldvalue === undefined) {\n//       comparison = -1;\n//     } else if (bfieldvalue === null || bfieldvalue === undefined) {\n//       comparison = 1;\n//     } else {\n//       const valueA = afieldvalue.toUpperCase();\n//       const valueB = bfieldvalue.toUpperCase();\n\n//       if (valueA > valueB) {\n//         comparison = 1;\n//       } else if (valueA < valueB) {\n//         comparison = -1;\n//       }\n//     }\n//     return comparison;\n//   }\n\n//   dataObjectjsarray.sort(compare);\n\n//   let dataObjectjssorted = {};\n//   for (let key in dataObjectjsarray) {\n//     let fieldsjs = {};\n//     fieldsjs.fields = dataObjectjsarray[key];\n//     dataObjectjssorted[dataObjectjsarray[key].Name] = fieldsjs;\n//   }\n//   return dataObjectjssorted;\n// }\n// export function GetTablefromObjects(params) {}\n// export function GetFirstkeyfromObject(params) {\n//   let dataarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   let firstkey = \"\";\n//   if (dataarray.length > 0) {\n//     firstkey = dataarray[0].label;\n//   }\n//   return firstkey;\n// }\n// export function GetHtmlArrayfromObject(params) {\n//   // get repeatedhtml from objectarray based on label, name field value like <div>test1</div><div>test2</div> from {{name:\"test1\",label:\"test1\"},{name:\"test2\",label:\"test2\"}}\n//   let htmlarray = [];\n//   let propvalues = {};\n//   let dataarray = [];\n\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n\n//   if (params.classNamejs) {\n//     propvalues[\"className\"] = params.classNamejs;\n//   }\n\n//   if (params.stylejs) {\n//     propvalues[\"style\"] = params.stylejs;\n//   }\n\n//   for (let key in dataarray) {\n//     let dataarrayvar = dataarray[key];\n\n//     if (params.idjs) {\n//       propvalues[\"id\"] = params.idjs + dataarrayvar.name;\n//       propvalues[\"data-name\"] = dataarrayvar.name;\n//     }\n\n//     if (params.onClickjs) {\n//       let onclickfunction = e => {\n//         params.onClickjs(e.target.id);\n//       };\n//       propvalues[\"onClick\"] = onclickfunction;\n//     }\n\n//     let newelement = React.createElement(\n//       params.tagnamejs,\n//       propvalues,\n//       dataarrayvar.label\n//     );\n//     if (params.parenttagnamejs) {\n//       let parentpropvalues = {};\n//       if (params.parentclassNamejs) {\n//         parentpropvalues.className = params.parentclassNamejs;\n//       }\n//       if (params.parentstylejs) {\n//         parentpropvalues.style = params.parentstylejs;\n//       }\n\n//       let siblingsparentpropvalues = {};\n//       if (params.siblingsparentclassNamejs) {\n//         siblingsparentpropvalues.className = params.siblingsparentclassNamejs;\n//       }\n\n//       if (params.siblingsparentidjs) {\n//         siblingsparentpropvalues.id =\n//           params.siblingsparentidjs + dataarrayvar.name;\n//         siblingsparentpropvalues[\"data-name\"] = dataarrayvar.name;\n//       }\n\n//       if (params.siblingsparentonClickjs) {\n//         let onclickfunction = e => {\n//           params.siblingsparentonClickjs(e.target.id);\n//         };\n//         siblingsparentpropvalues[\"onClick\"] = onclickfunction;\n//       }\n\n//       let childhtml = [];\n//       childhtml.push(dataarrayvar.label);\n\n//       if (params.statichtmlsibiling) {\n//         childhtml.push(params.statichtmlsibiling);\n//       }\n//       let siblingsparentelement = React.createElement(\n//         params.siblingsparenttagnamejs,\n//         siblingsparentpropvalues,\n//         childhtml\n//       );\n//       newelement = React.createElement(\n//         params.parenttagnamejs,\n//         parentpropvalues,\n//         siblingsparentelement\n//       );\n//     }\n//     htmlarray.push(newelement);\n//   }\n\n//   return htmlarray;\n// }\n// export function gethtmlbasedonotherobject(params) {\n//   // get repeatedhtml from objectarray based on other object label, name field value like <div>test1</div><div>test2</div> from {{name:\"test1\",label:\"test1\"},{name:\"test2\",label:\"test2\"}}\n\n//   // params.dataObjectjs\n//   // params.datalabelObjectjs\n//   // params.datacolumnObjectjs\n//   // params.datarowObjectjs\n\n//   let dataobjectarrayhtml = [];\n//   let labelarrayhtml = [];\n//   let columnarrayhtml = [];\n//   let rowarrayhtml = [];\n//   let tablearrayhtml = [];\n\n//   let dataobjectpropvalues = {};\n//   let labelpropvalues = {};\n//   let columnpropvalues = {};\n//   let rowpropvalues = {};\n//   let tablepropvalues = {};\n//   let dataarray = [];\n\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n\n//   let labelarray = [];\n//   for (let key in params.labeldataObjectjs) {\n//     labelarray.push(params.labeldataObjectjs[key]);\n//   }\n//   labelarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n\n//   if (params.classNamejs) {\n//     dataobjectpropvalues[\"className\"] = params.classNamejs;\n//   }\n\n//   if (params.stylejs) {\n//     dataobjectpropvalues[\"style\"] = params.stylejs;\n//   }\n\n//   if (params.labelclassNamejs) {\n//     labelpropvalues[\"className\"] = params.labelclassNamejs;\n//   }\n\n//   if (params.labelstylejs) {\n//     labelpropvalues[\"style\"] = params.labelstylejs;\n//   }\n\n//   if (params.columnclassNamejs) {\n//     columnpropvalues[\"className\"] = params.columnclassNamejs;\n//   }\n\n//   if (params.columnstylejs) {\n//     columnpropvalues[\"style\"] = params.columnstylejs;\n//   }\n\n//   if (params.rowclassNamejs) {\n//     rowpropvalues[\"className\"] = params.rowclassNamejs;\n//   }\n\n//   if (params.rowstylejs) {\n//     rowpropvalues[\"style\"] = params.rowstylejs;\n//   }\n\n//   if (params.tableclassNamejs) {\n//     tablepropvalues[\"className\"] = params.tableclassNamejs;\n//   }\n\n//   if (params.tablestylejs) {\n//     tablepropvalues[\"style\"] = params.tablestylejs;\n//   }\n\n//   if (params.tableidjs) {\n//     tablepropvalues[\"id\"] = params.tableidjs;\n//     tablepropvalues[\"data-name\"] = params.tableidjs;\n//   }\n//   if (params.tableonClickjs) {\n//     let onclickfunction = e => {\n//       params.tableonClickjs(e.target.id);\n//     };\n//     tablepropvalues[\"onClick\"] = onclickfunction;\n//   }\n//   rowarrayhtml = [];\n//   for (let key in dataarray) {\n//     let dataarrayvar = dataarray[key].fields;\n\n//     columnarrayhtml = [];\n\n//     if (params.rowidjs) {\n//       rowpropvalues[\"id\"] = params.rowidjs + dataarrayvar.Name;\n\n//       rowpropvalues[\"data-name\"] = dataarrayvar.Name;\n//     }\n//     if (params.rowonClickjs) {\n//       let onclickfunction = e => {\n//         params.rowonClickjs(e.target.id);\n//       };\n//       rowpropvalues[\"onClick\"] = onclickfunction;\n//     }\n\n//     if (params.columnidjs) {\n//       columnpropvalues[\"id\"] = params.columnidjs + dataarrayvar.Name;\n//       columnpropvalues[\"data-name\"] = dataarrayvar.Name;\n//     }\n//     if (params.columnonClickjs) {\n//       let onclickfunction = e => {\n//         params.columnonClickjs(e.target.id);\n//       };\n//       columnpropvalues[\"onClick\"] = onclickfunction;\n//     }\n\n//     let mainobjectfieldhtml = [];\n//     if (labelarray) {\n//       for (let labelkey in labelarray) {\n//         let labelarrayvar = labelarray[labelkey];\n\n//         if (params.idjs) {\n//           dataobjectpropvalues[\"id\"] = params.idjs + dataarrayvar.Name;\n//           dataobjectpropvalues[\"data-name\"] = dataarrayvar.Name;\n//         }\n//         if (params.onClickjs) {\n//           let onclickfunction = e => {\n//             params.onClickjs(e.target.id);\n//           };\n//           dataobjectpropvalues[\"onClick\"] = onclickfunction;\n//         }\n\n//         if (params.labelidjs) {\n//           labelpropvalues[\"id\"] = params.labelidjs + labelarrayvar.name;\n//           labelpropvalues[\"data-name\"] = labelarrayvar.name;\n//         }\n//         if (params.labelonClickjs) {\n//           let onclickfunction = e => {\n//             params.labelonClickjs(e.target.id);\n//           };\n//           labelpropvalues[\"onClick\"] = onclickfunction;\n//         }\n\n//         let labelelement = React.createElement(\n//           params.labeltagnamejs,\n//           labelpropvalues,\n//           labelarrayvar.label\n//         );\n\n//         let fieldelement = React.createElement(\n//           params.tagnamejs,\n//           dataobjectpropvalues,\n//           dataarrayvar[labelarrayvar.name]\n//         );\n//         let columnelement = [];\n//         if (params.isshowlabel) {\n//           columnelement.push(labelelement);\n//         }\n\n//         columnelement.push(fieldelement);\n\n//         columnarrayhtml.push(\n//           React.createElement(\n//             params.columntagnamejs,\n//             columnpropvalues,\n//             columnelement\n//           )\n//         );\n//       }\n//     }\n//     rowarrayhtml.push(\n//       React.createElement(params.rowtagnamejs, rowpropvalues, columnarrayhtml)\n//     );\n//   }\n//   if (params.tabletagnamejs) {\n//     tablearrayhtml.push(\n//       React.createElement(params.tabletagnamejs, tablepropvalues, rowarrayhtml)\n//     );\n//     return tablearrayhtml;\n//   }\n//   return rowarrayhtml;\n// }\n// export function GettableHtmlfromObject(params) {\n//   let thobject = params.thobjectjs;\n//   let tdobject = params.tdobjectjs;\n//   let orderby = \"name\";\n\n//   let thparams = {};\n\n//   thparams.tagnamejs = \"th\";\n//   let thonclick = () => {\n//     alert();\n//   };\n//   thparams.onClickjs = thonclick;\n//   thparams.dataObjectjs = thobject;\n//   thparams.stylejs = { fontSize: \"40px\" };\n//   thparams.idjs = \"listpage-objectsetupicon-\";\n//   thparams.classNamejs = \"bluefont  \";\n\n//   thparams.statichtmlsibiling = [];\n//   thparams.statichtmlsibiling.push(\n//     <i class=\"material-icons smallleftpadding org-cursor\">\n//       keyboard_arrow_down\n//     </i>\n//   );\n//   thparams.siblingsparentclassNamejs = \"spacebetween\";\n//   thparams.siblingsparenttagnamejs = \"span\";\n\n//   //thparams.parentclassNamejs = \"spacebetween\";\n//   thparams.parenttagnamejs = \"th\";\n//   thparams.parentstylejs = {\n//     width: \"50%\"\n//   };\n\n//   let thhtml = GetHtmlArrayfromObject(thparams);\n\n//   let throwhtml = React.createElement(\"tr\", {}, thhtml);\n//   //return thhtml;\n\n//   let tdparams = {};\n\n//   tdparams.dataObjectjs = tdobject;\n//   tdparams.tagnamejs = \"span\";\n//   let onclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.onClickjs = onclickfunction;\n//   tdparams.stylejs = { fontSize: \"30px\" };\n//   tdparams.idjs = \"listpage-objectsetupicon-\";\n//   tdparams.classNamejs = \" bluefont  \";\n\n//   tdparams.labeldataObjectjs = thobject;\n//   tdparams.labeltagnamejs = \"th\";\n//   let labelonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.labelonClickjs = labelonclickfunction;\n//   tdparams.labelstylejs = { fontSize: \"30px\" };\n//   tdparams.labelidjs = \"listpage-objectsetupicon-\";\n//   tdparams.labelclassNamejs = \" bluefont  \";\n\n//   tdparams.columntagnamejs = \"td\";\n//   let columnonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.columnonClickjs = columnonclickfunction;\n//   tdparams.columnstylejs = { fontSize: \"30px\" };\n//   tdparams.columnidjs = \"listpage-objectsetupicon-\";\n//   tdparams.columnclassNamejs = \" bluefont   \";\n\n//   tdparams.rowtagnamejs = \"tr\";\n//   let rowonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.rowonClickjs = rowonclickfunction;\n//   tdparams.rowstylejs = { fontSize: \"30px\" };\n//   tdparams.rowidjs = \"listpage-objectsetupicon-\";\n//   tdparams.rowclassNamejs = \" bluefont   \";\n\n//   tdparams.isshowlabel = false;\n\n//   let tdhtml = gethtmlbasedonotherobject(tdparams);\n\n//   //return tdhtml;\n//   let tableelement = [];\n//   tableelement.push(throwhtml);\n//   tableelement.push(tdhtml);\n//   let tablehtml = React.createElement(\n//     \"table\",\n//     { border: \"1px\", className: \"col-12 table tableclass\" },\n//     tableelement\n//   );\n//   return tablehtml;\n// }\n"]},"metadata":{},"sourceType":"module"}
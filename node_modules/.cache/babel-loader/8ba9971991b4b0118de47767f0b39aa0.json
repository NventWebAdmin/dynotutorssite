{"ast":null,"code":"import firebase from \"firebase\";\nimport React from \"react\";\nimport axios from \"axios\";\nvar config = {\n  apiKey: \"AIzaSyCV4ykN9qy5eIaWuTJX3UftfcH6VsXDfXk\",\n  authDomain: \"nventweb.firebaseapp.com\",\n  databaseURL: \"https://nventweb.firebaseio.com\",\n  projectId: \"nventweb\",\n  storageBucket: \"nventweb.appspot.com\",\n  messagingSenderId: \"596282375955\",\n  appId: \"1:596282375955:web:9f66e0aab426513c3da4e6\",\n  measurementId: \"G-CP4VBGX4S4\"\n};\nexport function getRecordsFirebase() {\n  let recArray = [\"test\", \"test2\"];\n  return recArray;\n}\nexport function getRecordFirebase(recId) {\n  let rec = {\n    name: recId,\n    phone: \"123\"\n  };\n  return rec;\n}\nexport const getallRecords = (url, params, callbackf) => {\n  console.log(\"te\");\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  }\n\n  var recordsRef = firebase.database().ref(\"appone\");\n  recordsRef.on(\"value\", function (snapshot) {\n    console.log(JSON.stringify(snapshot.val())); //updateStarCount(postElement, snapshot.val());\n    // if (callbackf) callbackf(snapshot.val());\n  });\n  return \"test\";\n};\nexport async function createRecordFirebase(recId) {\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  return result;\n}\nexport async function bulkcreateRecordFirebase(recId) {\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  return result;\n}\nexport async function updateRecordFirebase(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  console.log(result);\n  return result;\n}\nexport async function deleteRecordFirebase(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  return result;\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/src/db/firebase.js"],"names":["firebase","React","axios","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getRecordsFirebase","recArray","getRecordFirebase","recId","rec","name","phone","getallRecords","url","params","callbackf","console","log","apps","length","initializeApp","recordsRef","database","ref","on","snapshot","JSON","stringify","val","createRecordFirebase","result","isSuccess","message","dataprops","bulkcreateRecordFirebase","updateRecordFirebase","deleteRecordFirebase"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,0BAFD;AAGXC,EAAAA,WAAW,EAAE,iCAHF;AAIXC,EAAAA,SAAS,EAAE,UAJA;AAKXC,EAAAA,aAAa,EAAE,sBALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAb;AAWA,OAAO,SAASC,kBAAT,GAA8B;AACnC,MAAIC,QAAQ,GAAG,CAAC,MAAD,EAAS,OAAT,CAAf;AACA,SAAOA,QAAP;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,MAAIC,GAAG,GAAG;AAAEC,IAAAA,IAAI,EAAEF,KAAR;AAAeG,IAAAA,KAAK,EAAE;AAAtB,GAAV;AACA,SAAOF,GAAP;AACD;AAED,OAAO,MAAMG,aAAa,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,SAAd,KAA4B;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,MAAI,CAACxB,QAAQ,CAACyB,IAAT,CAAcC,MAAnB,EAA2B;AACzB1B,IAAAA,QAAQ,CAAC2B,aAAT,CAAuBxB,MAAvB;AACD;;AACD,MAAIyB,UAAU,GAAG5B,QAAQ,CAAC6B,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,CAAjB;AACAF,EAAAA,UAAU,CAACG,EAAX,CAAc,OAAd,EAAuB,UAAUC,QAAV,EAAoB;AACzCT,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,GAAT,EAAf,CAAZ,EADyC,CAEzC;AACA;AACD,GAJD;AAMA,SAAO,MAAP;AACD,CAbM;AAeP,OAAO,eAAeC,oBAAf,CAAoCrB,KAApC,EAA2C;AAChD,MAAIsB,MAAM,GAAG;AAAEC,IAAAA,SAAS,EAAE,OAAb;AAAsBC,IAAAA,OAAO,EAAE,EAA/B;AAAmCC,IAAAA,SAAS,EAAE;AAA9C,GAAb;AAEA,SAAOH,MAAP;AACD;AAED,OAAO,eAAeI,wBAAf,CAAwC1B,KAAxC,EAA+C;AACpD,MAAIsB,MAAM,GAAG;AAAEC,IAAAA,SAAS,EAAE,OAAb;AAAsBC,IAAAA,OAAO,EAAE,EAA/B;AAAmCC,IAAAA,SAAS,EAAE;AAA9C,GAAb;AAEA,SAAOH,MAAP;AACD;AAED,OAAO,eAAeK,oBAAf,CAAoCF,SAApC,EAA+C;AACpDjB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,SAAZ;AACA,MAAIH,MAAM,GAAG;AAAEC,IAAAA,SAAS,EAAE,OAAb;AAAsBC,IAAAA,OAAO,EAAE,EAA/B;AAAmCC,IAAAA,SAAS,EAAE;AAA9C,GAAb;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AAEA,SAAOA,MAAP;AACD;AAED,OAAO,eAAeM,oBAAf,CAAoCH,SAApC,EAA+C;AACpDjB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,SAAZ;AAEA,MAAIH,MAAM,GAAG;AAAEC,IAAAA,SAAS,EAAE,OAAb;AAAsBC,IAAAA,OAAO,EAAE,EAA/B;AAAmCC,IAAAA,SAAS,EAAE;AAA9C,GAAb;AAEA,SAAOH,MAAP;AACD","sourcesContent":["import firebase from \"firebase\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nvar config = {\n  apiKey: \"AIzaSyCV4ykN9qy5eIaWuTJX3UftfcH6VsXDfXk\",\n  authDomain: \"nventweb.firebaseapp.com\",\n  databaseURL: \"https://nventweb.firebaseio.com\",\n  projectId: \"nventweb\",\n  storageBucket: \"nventweb.appspot.com\",\n  messagingSenderId: \"596282375955\",\n  appId: \"1:596282375955:web:9f66e0aab426513c3da4e6\",\n  measurementId: \"G-CP4VBGX4S4\",\n};\n\nexport function getRecordsFirebase() {\n  let recArray = [\"test\", \"test2\"];\n  return recArray;\n}\n\nexport function getRecordFirebase(recId) {\n  let rec = { name: recId, phone: \"123\" };\n  return rec;\n}\n\nexport const getallRecords = (url, params, callbackf) => {\n  console.log(\"te\");\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  }\n  var recordsRef = firebase.database().ref(\"appone\");\n  recordsRef.on(\"value\", function (snapshot) {\n    console.log(JSON.stringify(snapshot.val()));\n    //updateStarCount(postElement, snapshot.val());\n    // if (callbackf) callbackf(snapshot.val());\n  });\n\n  return \"test\";\n};\n\nexport async function createRecordFirebase(recId) {\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  return result;\n}\n\nexport async function bulkcreateRecordFirebase(recId) {\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  return result;\n}\n\nexport async function updateRecordFirebase(dataprops) {\n  console.log(dataprops);\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  console.log(result);\n\n  return result;\n}\n\nexport async function deleteRecordFirebase(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}
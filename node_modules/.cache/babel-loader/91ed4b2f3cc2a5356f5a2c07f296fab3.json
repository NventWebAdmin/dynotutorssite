{"ast":null,"code":"import { getRecordsAWS, getRecordAWS, createRecordAWS, updateRecordAWS, deleteRecordAWS, bulkcreateRecordAWS } from \"./aws\";\nimport { getRecordsFirebase, getRecordFirebase, createRecordFirebase, updateRecordFirebase, deleteRecordFirebase, bulkcreateRecordFirebase } from \"./firebase\";\nimport { configdata } from \"../config\";\nexport function getRecordsdata() {\n  let recArray;\n\n  if (configdata.dbvendor == \"aws\") {\n    recArray = getRecordsAWS();\n  }\n\n  if (configdata.dbvendor == \"firebase\") {\n    recArray = getRecordsFirebase();\n  }\n\n  return recArray;\n}\nexport function getRecorddata(dataprops) {\n  let rec;\n\n  if (configdata().dbvendor == \"aws\") {\n    rec = getRecordAWS(dataprops);\n  }\n\n  if (configdata().dbvendor == \"firebase\") {\n    rec = getRecordFirebase(dataprops);\n  }\n\n  return rec;\n}\nexport function createRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().dbvendor == \"aws\") {\n    rec = createRecordAWS(dataprops);\n  }\n\n  if (configdata().dbvendor == \"firebase\") {\n    rec = createRecordFirebase(dataprops);\n  }\n\n  return rec;\n}\nexport function bulkcreateRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().dbvendor == \"aws\") {\n    rec = bulkcreateRecordAWS(dataprops);\n  }\n\n  if (configdata().dbvendor == \"firebase\") {\n    rec = bulkcreateRecordFirebase(dataprops);\n  }\n\n  return rec;\n}\nexport function updateRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().dbvendor == \"aws\") {\n    rec = updateRecordAWS(dataprops);\n  }\n\n  if (configdata().dbvendor == \"firebase\") {\n    rec = updateRecordFirebase(dataprops);\n  }\n\n  return rec;\n}\nexport function deleteRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().dbvendor == \"aws\") {\n    rec = deleteRecordAWS(dataprops);\n  }\n\n  if (configdata().dbvendor == \"firebase\") {\n    rec = deleteRecordFirebase(dataprops);\n  }\n\n  return rec;\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/src/db/index.js"],"names":["getRecordsAWS","getRecordAWS","createRecordAWS","updateRecordAWS","deleteRecordAWS","bulkcreateRecordAWS","getRecordsFirebase","getRecordFirebase","createRecordFirebase","updateRecordFirebase","deleteRecordFirebase","bulkcreateRecordFirebase","configdata","getRecordsdata","recArray","dbvendor","getRecorddata","dataprops","rec","createRecord","console","log","bulkcreateRecord","updateRecord","deleteRecord"],"mappings":"AAAA,SACEA,aADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,mBANF,QAOO,OAPP;AAQA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,wBANF,QAOO,YAPP;AAQA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,MAAIC,QAAJ;;AACA,MAAIF,UAAU,CAACG,QAAX,IAAuB,KAA3B,EAAkC;AAChCD,IAAAA,QAAQ,GAAGd,aAAa,EAAxB;AACD;;AACD,MAAIY,UAAU,CAACG,QAAX,IAAuB,UAA3B,EAAuC;AACrCD,IAAAA,QAAQ,GAAGR,kBAAkB,EAA7B;AACD;;AAED,SAAOQ,QAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBC,SAAvB,EAAkC;AACvC,MAAIC,GAAJ;;AACA,MAAIN,UAAU,GAAGG,QAAb,IAAyB,KAA7B,EAAoC;AAClCG,IAAAA,GAAG,GAAGjB,YAAY,CAACgB,SAAD,CAAlB;AACD;;AACD,MAAIL,UAAU,GAAGG,QAAb,IAAyB,UAA7B,EAAyC;AACvCG,IAAAA,GAAG,GAAGX,iBAAiB,CAACU,SAAD,CAAvB;AACD;;AACD,SAAOC,GAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsBF,SAAtB,EAAiC;AACtCG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,MAAIC,GAAJ;;AACA,MAAIN,UAAU,GAAGG,QAAb,IAAyB,KAA7B,EAAoC;AAClCG,IAAAA,GAAG,GAAGhB,eAAe,CAACe,SAAD,CAArB;AACD;;AACD,MAAIL,UAAU,GAAGG,QAAb,IAAyB,UAA7B,EAAyC;AACvCG,IAAAA,GAAG,GAAGV,oBAAoB,CAACS,SAAD,CAA1B;AACD;;AACD,SAAOC,GAAP;AACD;AAED,OAAO,SAASI,gBAAT,CAA0BL,SAA1B,EAAqC;AAC1CG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,MAAIC,GAAJ;;AACA,MAAIN,UAAU,GAAGG,QAAb,IAAyB,KAA7B,EAAoC;AAClCG,IAAAA,GAAG,GAAGb,mBAAmB,CAACY,SAAD,CAAzB;AACD;;AACD,MAAIL,UAAU,GAAGG,QAAb,IAAyB,UAA7B,EAAyC;AACvCG,IAAAA,GAAG,GAAGP,wBAAwB,CAACM,SAAD,CAA9B;AACD;;AACD,SAAOC,GAAP;AACD;AAED,OAAO,SAASK,YAAT,CAAsBN,SAAtB,EAAiC;AACtCG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,MAAIC,GAAJ;;AACA,MAAIN,UAAU,GAAGG,QAAb,IAAyB,KAA7B,EAAoC;AAClCG,IAAAA,GAAG,GAAGf,eAAe,CAACc,SAAD,CAArB;AACD;;AACD,MAAIL,UAAU,GAAGG,QAAb,IAAyB,UAA7B,EAAyC;AACvCG,IAAAA,GAAG,GAAGT,oBAAoB,CAACQ,SAAD,CAA1B;AACD;;AACD,SAAOC,GAAP;AACD;AAED,OAAO,SAASM,YAAT,CAAsBP,SAAtB,EAAiC;AACtCG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,MAAIC,GAAJ;;AACA,MAAIN,UAAU,GAAGG,QAAb,IAAyB,KAA7B,EAAoC;AAClCG,IAAAA,GAAG,GAAGd,eAAe,CAACa,SAAD,CAArB;AACD;;AACD,MAAIL,UAAU,GAAGG,QAAb,IAAyB,UAA7B,EAAyC;AACvCG,IAAAA,GAAG,GAAGR,oBAAoB,CAACO,SAAD,CAA1B;AACD;;AACD,SAAOC,GAAP;AACD","sourcesContent":["import {\n  getRecordsAWS,\n  getRecordAWS,\n  createRecordAWS,\n  updateRecordAWS,\n  deleteRecordAWS,\n  bulkcreateRecordAWS,\n} from \"./aws\";\nimport {\n  getRecordsFirebase,\n  getRecordFirebase,\n  createRecordFirebase,\n  updateRecordFirebase,\n  deleteRecordFirebase,\n  bulkcreateRecordFirebase,\n} from \"./firebase\";\nimport { configdata } from \"../config\";\n\nexport function getRecordsdata() {\n  let recArray;\n  if (configdata.dbvendor == \"aws\") {\n    recArray = getRecordsAWS();\n  }\n  if (configdata.dbvendor == \"firebase\") {\n    recArray = getRecordsFirebase();\n  }\n\n  return recArray;\n}\n\nexport function getRecorddata(dataprops) {\n  let rec;\n  if (configdata().dbvendor == \"aws\") {\n    rec = getRecordAWS(dataprops);\n  }\n  if (configdata().dbvendor == \"firebase\") {\n    rec = getRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function createRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().dbvendor == \"aws\") {\n    rec = createRecordAWS(dataprops);\n  }\n  if (configdata().dbvendor == \"firebase\") {\n    rec = createRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function bulkcreateRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().dbvendor == \"aws\") {\n    rec = bulkcreateRecordAWS(dataprops);\n  }\n  if (configdata().dbvendor == \"firebase\") {\n    rec = bulkcreateRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function updateRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().dbvendor == \"aws\") {\n    rec = updateRecordAWS(dataprops);\n  }\n  if (configdata().dbvendor == \"firebase\") {\n    rec = updateRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function deleteRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().dbvendor == \"aws\") {\n    rec = deleteRecordAWS(dataprops);\n  }\n  if (configdata().dbvendor == \"firebase\") {\n    rec = deleteRecordFirebase(dataprops);\n  }\n  return rec;\n}\n"]},"metadata":{},"sourceType":"module"}
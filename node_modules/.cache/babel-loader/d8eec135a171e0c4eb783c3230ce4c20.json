{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import axios from\"axios\";var createAPIUrl=\"https://1e4loh865h.execute-api.us-east-2.amazonaws.com/DEV\";{/*\n////////get data\n let result = await getRecorddata({\n        objectName: \"student\",\n        objectData: {},\n        keyConditions: [\n          { field: \"startdate\", value: 1, expression: \">\" },\n          { field: \"class\", value: \"first\", expression: \"=\" },\n        ],\n        filterConditions: [\n          { field: \"rollnumber\", value: 1, expression: \"=\" },\n          { field: \"age\", value: \"first\", expression: \"=\" },\n        ],\n      });\n      console.log(result);\n      if (result.isSuccess === \"false\") {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: result.message,\n                  type: \"error\",\n                },\n              ],\n            })\n        );\n      } else {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: \"data retrieved\",\n                  type: \"info\",\n                },\n              ],\n            })\n        );\n      }\n      \n  //////////////insert record\nlet result = await createRecord({\n        objectName: \"product\",\n        objectData: {\n          Id: \"id2\",\n          name: \"pradeeprao\",\n          city: \"dallas\",\n          phone: \"1234\",\n          state: \"texas\",\n          zip: \"75206\",\n        },\n      });\n      if (result.isSuccess === \"false\") {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: result.message,\n                  type: \"error\",\n                },\n              ],\n            })\n        );\n      } else {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: \"data inserted\",\n                  type: \"info\",\n                },\n              ],\n            })\n        );\n      }\n\n//////////////update record\nlet result = await updateRecord({\n  objectName: \"product\",\n  objectPrimaryKeyValue: { Id: \"id1\" },\n  objectData: {\n    name: \"pradeeprao\",\n    city: \"dallas\",\n    phone: \"1234\",\n    state: \"texas\",\n    zip: \"75206\",\n  },\n});\nif (result.isSuccess === \"false\") {\n  this.setState(\n    {\n      showNotification: \"false\",\n      notificationMessages: [],\n    },\n\n    () =>\n      this.setState({\n        showNotification: \"true\",\n        notificationMessages: [\n          {\n            name: \"message1\",\n            message: result.message,\n            type: \"error\",\n          },\n        ],\n      })\n  );\n} else {\n  this.setState(\n    {\n      showNotification: \"false\",\n      notificationMessages: [],\n    },\n\n    () =>\n      this.setState({\n        showNotification: \"true\",\n        notificationMessages: [\n          {\n            name: \"message1\",\n            message: \"data updated\",\n            type: \"info\",\n          },\n        ],\n      })\n  );\n}\n\n///////////////delete item\n\n\n let result = await deleteRecord({\n        objectName: \"account\",\n        objectPrimaryKeyValue: { Id: \"id1\" },\n      });\n      if (result.isSuccess === \"false\") {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: result.message,\n                  type: \"error\",\n                },\n              ],\n            })\n        );\n      } else {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: \"data deleted\",\n                  type: \"info\",\n                },\n              ],\n            })\n        );\n      }\n\n\n      ///////bulkcreated\n          let result = await bulkcreateRecord({\n          objectName: \"student\",\n          objectListData: [\n            { orgname: \"gouthama\", id: \"tsest\" },\n            { orgname: \"gouthama\", id: \"tsest2\" },\n          ],\n        });\n        if (result.isSuccess === \"false\") {\n          alert(result.message);\n        } else {\n          console.log(result);\n        }\n\n\n*/}export function getRecordsAWS(){var recArray=[\"test\",\"test2\"];return recArray;}export function getRecordAWS(_x){return _getRecordAWS.apply(this,arguments);}function _getRecordAWS(){_getRecordAWS=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataprops){var result,endurl,keyConditions,filterConditions,KeyConditionExpression,filterConditionExpression,ExpressionAttributeNames,ExpressionAttributeValues,index,lastIndex,i,keyindex,valueindex,filterindex,filterlastIndex,_i,_keyindex,_valueindex,params,axiosresult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(dataprops);result={isSuccess:\"false\",message:\"\",dataprops:{}};endurl=createAPIUrl+\"/\"+dataprops.objectName+\"/retrieve\";console.log(endurl);keyConditions=dataprops.keyConditions;filterConditions=dataprops.filterConditions;KeyConditionExpression=\"\";filterConditionExpression=\"\";ExpressionAttributeNames={};ExpressionAttributeValues={};index=0;lastIndex=keyConditions.length-1;for(i in keyConditions){console.log(i);keyindex=\"#a\"+index;ExpressionAttributeNames[keyindex]=keyConditions[i].field;valueindex=\":x\"+index;ExpressionAttributeValues[valueindex]=keyConditions[i].value;if(index<lastIndex){if(keyConditions[i].expression==\"beginswith\"){KeyConditionExpression=KeyConditionExpression+\"begins_with (\"+\"#a\"+index+\" \"+\",\"+\" :\"+\"x\"+index+\") and \";}else{KeyConditionExpression=KeyConditionExpression+\"#a\"+index+\" \"+keyConditions[i].expression+\" :\"+\"x\"+index+\" and \";}}else{// KeyConditionExpression =\n//   KeyConditionExpression +\n//   \"#a\" +\n//   index +\n//   \" \" +\n//   keyConditions[i].expression +\n//   \" :\" +\n//   \"x\" +\n//   index +\n//   \" \";\n///////\nif(keyConditions[i].expression==\"beginswith\"){KeyConditionExpression=KeyConditionExpression+\"begins_with (\"+\"#a\"+index+\" \"+\",\"+\" :\"+\"x\"+index+\")\";}else{KeyConditionExpression=KeyConditionExpression+\"#a\"+index+\" \"+keyConditions[i].expression+\" :\"+\"x\"+index+\" \";}/////\n}index=index+1;}filterindex=0;filterlastIndex=filterConditions.length-1;for(_i in filterConditions){console.log(_i);_keyindex=\"#b\"+filterindex;ExpressionAttributeNames[_keyindex]=filterConditions[_i].field;_valueindex=\":y\"+filterindex;ExpressionAttributeValues[_valueindex]=filterConditions[_i].value;if(filterindex<filterlastIndex){filterConditionExpression=filterConditionExpression+\"#b\"+filterindex+\" \"+filterConditions[_i].expression+\" :\"+\"y\"+filterindex+\" and \";}else{filterConditionExpression=filterConditionExpression+\"#b\"+filterindex+\" \"+filterConditions[_i].expression+\" :\"+\"y\"+filterindex+\" \";}filterindex=filterindex+1;}console.log(KeyConditionExpression);console.log(filterConditionExpression);console.log(ExpressionAttributeNames);console.log(ExpressionAttributeValues);params={FilterExpression:filterConditionExpression,KeyConditionExpression:KeyConditionExpression,ExpressionAttributeNames:ExpressionAttributeNames,ExpressionAttributeValues:ExpressionAttributeValues,PageSize:dataprops.pageSize,Limit:dataprops.limit,ExclusiveStartKey:dataprops.exclusiveStartKey};console.log(params);_context.next=24;return axios.post(endurl,params,{headers:{\"Content-Type\":\"application/json\"}}).then(function(response){console.log(\"response on\"+dataprops.objectName);console.log(response);result={isSuccess:\"true\",message:\"user loggedin\",dataprops:response.data};return result;}).catch(function(error){console.log(error.response);var errormessage=\"\";if(error.response){errormessage=error.response.data.message;}else{errormessage=JSON.stringify(error);}result={isSuccess:\"false\",message:errormessage,dataprops:{}};return result;});case 24:axiosresult=_context.sent;result=axiosresult;console.log(result);return _context.abrupt(\"return\",result);case 28:case\"end\":return _context.stop();}}},_callee);}));return _getRecordAWS.apply(this,arguments);}export function bulkcreateRecordAWS(_x2){return _bulkcreateRecordAWS.apply(this,arguments);}function _bulkcreateRecordAWS(){_bulkcreateRecordAWS=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dataprops){var result,endurl,objectListData,objectListDatatobeSent,objectData,datatobesent,axiosresult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(dataprops);result={isSuccess:\"false\",message:\"\",dataprops:{}};endurl=createAPIUrl+\"/\"+dataprops.objectName+\"/bulkcreate\";console.log(endurl);objectListData=dataprops.objectListData;objectListDatatobeSent=[];for(objectData in objectListData){objectListDatatobeSent.push({PutRequest:{Item:objectListData[objectData]}});}datatobesent={};datatobesent[dataprops.objectName]=objectListDatatobeSent;_context2.next=11;return axios.post(endurl,datatobesent,{headers:{\"Content-Type\":\"application/json\"}}).then(function(response){console.log(response);result={isSuccess:\"true\",message:\"user loggedin\",dataprops:response.data};return result;}).catch(function(error){console.log(error);var errormessage=\"\";if(error.response){errormessage=error.response.data.message;}else{errormessage=JSON.stringify(error);}result={isSuccess:\"false\",message:errormessage,dataprops:{}};return result;});case 11:axiosresult=_context2.sent;result=axiosresult;console.log(result);return _context2.abrupt(\"return\",result);case 15:case\"end\":return _context2.stop();}}},_callee2);}));return _bulkcreateRecordAWS.apply(this,arguments);}export function createRecordAWS(_x3){return _createRecordAWS.apply(this,arguments);}function _createRecordAWS(){_createRecordAWS=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dataprops){var result,endurl,objectData,axiosresult;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(dataprops);result={isSuccess:\"false\",message:\"\",dataprops:{}};endurl=createAPIUrl+\"/\"+dataprops.objectName+\"/create\";console.log(endurl);objectData=dataprops.objectData;_context3.next=7;return axios.post(endurl,objectData,{headers:{\"Content-Type\":\"application/json\"}}).then(function(response){console.log(response);result={isSuccess:\"true\",message:\"user loggedin\",dataprops:response.data};return result;}).catch(function(error){console.log(error);var errormessage=\"\";if(error.response){errormessage=error.response.data.message;}else{errormessage=JSON.stringify(error);}result={isSuccess:\"false\",message:errormessage,dataprops:{}};return result;});case 7:axiosresult=_context3.sent;result=axiosresult;console.log(result);return _context3.abrupt(\"return\",result);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return _createRecordAWS.apply(this,arguments);}export function updateRecordAWS(_x4){return _updateRecordAWS.apply(this,arguments);}function _updateRecordAWS(){_updateRecordAWS=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dataprops){var result,endurl,fieldProps,objectData,UpdateExpression,ExpressionAttributeNames,ExpressionAttributeValues,index,lastIndex,i,keyindex,valueindex,axiosresult;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log(dataprops);result={isSuccess:\"false\",message:\"\",dataprops:{}};endurl=createAPIUrl+\"/\"+dataprops.objectName+\"/update\";console.log(endurl);fieldProps=dataprops.objectData;objectData=dataprops.objectData;UpdateExpression=\"set \";ExpressionAttributeNames={};ExpressionAttributeValues={};index=0;lastIndex=Object.keys(fieldProps).length-1;for(i in fieldProps){console.log();keyindex=\"#a\"+index;ExpressionAttributeNames[keyindex]=i;valueindex=\":x\"+index;ExpressionAttributeValues[valueindex]=fieldProps[i];if(index<lastIndex){UpdateExpression=UpdateExpression+\"#a\"+index+\" = :\"+\"x\"+index+\" , \";}else{UpdateExpression=UpdateExpression+\"#a\"+index+\" = :\"+\"x\"+index+\" \";}index=index+1;}console.log(ExpressionAttributeValues);objectData={Key:dataprops.objectPrimaryKeyValue,UpdateExpression:UpdateExpression,ExpressionAttributeNames:ExpressionAttributeNames,ExpressionAttributeValues:ExpressionAttributeValues};_context4.next=16;return axios.post(endurl,objectData,{headers:{\"Content-Type\":\"application/json\"}}).then(function(response){console.log(response);result={isSuccess:\"true\",message:\"user loggedin\",dataprops:response.data};return result;}).catch(function(error){console.log(error.response);var errormessage=\"\";if(error.response){errormessage=error.response.data.message;}else{errormessage=JSON.stringify(error);}result={isSuccess:\"false\",message:errormessage,dataprops:{}};return result;});case 16:axiosresult=_context4.sent;result=axiosresult;console.log(result);return _context4.abrupt(\"return\",result);case 20:case\"end\":return _context4.stop();}}},_callee4);}));return _updateRecordAWS.apply(this,arguments);}export function deleteRecordAWS(_x5){return _deleteRecordAWS.apply(this,arguments);}function _deleteRecordAWS(){_deleteRecordAWS=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dataprops){var result,endurl,objectData,axiosresult;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:console.log(dataprops);result={isSuccess:\"false\",message:\"\",dataprops:{}};endurl=createAPIUrl+\"/\"+dataprops.objectName+\"/delete\";console.log(endurl);objectData={Key:dataprops.objectPrimaryKeyValue};_context5.next=7;return axios.post(endurl,objectData,{headers:{\"Content-Type\":\"application/json\"}}).then(function(response){console.log(response);result={isSuccess:\"true\",message:\"user loggedin\",dataprops:response.data};return result;}).catch(function(error){console.log(error.response);var errormessage=\"\";if(error.response){errormessage=error.response.data.message;}else{errormessage=JSON.stringify(error);}result={isSuccess:\"false\",message:errormessage,dataprops:{}};return result;});case 7:axiosresult=_context5.sent;result=axiosresult;console.log(result);return _context5.abrupt(\"return\",result);case 11:case\"end\":return _context5.stop();}}},_callee5);}));return _deleteRecordAWS.apply(this,arguments);}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/src/db/aws.js"],"names":["React","axios","createAPIUrl","getRecordsAWS","recArray","getRecordAWS","dataprops","console","log","result","isSuccess","message","endurl","objectName","keyConditions","filterConditions","KeyConditionExpression","filterConditionExpression","ExpressionAttributeNames","ExpressionAttributeValues","index","lastIndex","length","i","keyindex","field","valueindex","value","expression","filterindex","filterlastIndex","params","FilterExpression","PageSize","pageSize","Limit","limit","ExclusiveStartKey","exclusiveStartKey","post","headers","then","response","data","catch","error","errormessage","JSON","stringify","axiosresult","bulkcreateRecordAWS","objectListData","objectListDatatobeSent","objectData","push","PutRequest","Item","datatobesent","createRecordAWS","updateRecordAWS","fieldProps","UpdateExpression","Object","keys","Key","objectPrimaryKeyValue","deleteRecordAWS"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nlet createAPIUrl = \"https://1e4loh865h.execute-api.us-east-2.amazonaws.com/DEV\";\n\n{\n  /*\n////////get data\n let result = await getRecorddata({\n        objectName: \"student\",\n        objectData: {},\n        keyConditions: [\n          { field: \"startdate\", value: 1, expression: \">\" },\n          { field: \"class\", value: \"first\", expression: \"=\" },\n        ],\n        filterConditions: [\n          { field: \"rollnumber\", value: 1, expression: \"=\" },\n          { field: \"age\", value: \"first\", expression: \"=\" },\n        ],\n      });\n      console.log(result);\n      if (result.isSuccess === \"false\") {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: result.message,\n                  type: \"error\",\n                },\n              ],\n            })\n        );\n      } else {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: \"data retrieved\",\n                  type: \"info\",\n                },\n              ],\n            })\n        );\n      }\n      \n  //////////////insert record\nlet result = await createRecord({\n        objectName: \"product\",\n        objectData: {\n          Id: \"id2\",\n          name: \"pradeeprao\",\n          city: \"dallas\",\n          phone: \"1234\",\n          state: \"texas\",\n          zip: \"75206\",\n        },\n      });\n      if (result.isSuccess === \"false\") {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: result.message,\n                  type: \"error\",\n                },\n              ],\n            })\n        );\n      } else {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: \"data inserted\",\n                  type: \"info\",\n                },\n              ],\n            })\n        );\n      }\n\n//////////////update record\nlet result = await updateRecord({\n  objectName: \"product\",\n  objectPrimaryKeyValue: { Id: \"id1\" },\n  objectData: {\n    name: \"pradeeprao\",\n    city: \"dallas\",\n    phone: \"1234\",\n    state: \"texas\",\n    zip: \"75206\",\n  },\n});\nif (result.isSuccess === \"false\") {\n  this.setState(\n    {\n      showNotification: \"false\",\n      notificationMessages: [],\n    },\n\n    () =>\n      this.setState({\n        showNotification: \"true\",\n        notificationMessages: [\n          {\n            name: \"message1\",\n            message: result.message,\n            type: \"error\",\n          },\n        ],\n      })\n  );\n} else {\n  this.setState(\n    {\n      showNotification: \"false\",\n      notificationMessages: [],\n    },\n\n    () =>\n      this.setState({\n        showNotification: \"true\",\n        notificationMessages: [\n          {\n            name: \"message1\",\n            message: \"data updated\",\n            type: \"info\",\n          },\n        ],\n      })\n  );\n}\n\n///////////////delete item\n\n\n let result = await deleteRecord({\n        objectName: \"account\",\n        objectPrimaryKeyValue: { Id: \"id1\" },\n      });\n      if (result.isSuccess === \"false\") {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: result.message,\n                  type: \"error\",\n                },\n              ],\n            })\n        );\n      } else {\n        this.setState(\n          {\n            showNotification: \"false\",\n            notificationMessages: [],\n          },\n\n          () =>\n            this.setState({\n              showNotification: \"true\",\n              notificationMessages: [\n                {\n                  name: \"message1\",\n                  message: \"data deleted\",\n                  type: \"info\",\n                },\n              ],\n            })\n        );\n      }\n\n\n      ///////bulkcreated\n          let result = await bulkcreateRecord({\n          objectName: \"student\",\n          objectListData: [\n            { orgname: \"gouthama\", id: \"tsest\" },\n            { orgname: \"gouthama\", id: \"tsest2\" },\n          ],\n        });\n        if (result.isSuccess === \"false\") {\n          alert(result.message);\n        } else {\n          console.log(result);\n        }\n\n\n*/\n}\n\nexport function getRecordsAWS() {\n  let recArray = [\"test\", \"test2\"];\n  return recArray;\n}\n\nexport async function getRecordAWS(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/retrieve\";\n  console.log(endurl);\n\n  let keyConditions = dataprops.keyConditions;\n  let filterConditions = dataprops.filterConditions;\n\n  let KeyConditionExpression = \"\";\n  let filterConditionExpression = \"\";\n  let ExpressionAttributeNames = {};\n  let ExpressionAttributeValues = {};\n  let index = 0;\n  let lastIndex = keyConditions.length - 1;\n  for (let i in keyConditions) {\n    console.log(i);\n    let keyindex = \"#a\" + index;\n    ExpressionAttributeNames[keyindex] = keyConditions[i].field;\n    let valueindex = \":x\" + index;\n    ExpressionAttributeValues[valueindex] = keyConditions[i].value;\n    if (index < lastIndex) {\n      if (keyConditions[i].expression == \"beginswith\") {\n        KeyConditionExpression =\n          KeyConditionExpression +\n          \"begins_with (\" +\n          \"#a\" +\n          index +\n          \" \" +\n          \",\" +\n          \" :\" +\n          \"x\" +\n          index +\n          \") and \";\n      } else {\n        KeyConditionExpression =\n          KeyConditionExpression +\n          \"#a\" +\n          index +\n          \" \" +\n          keyConditions[i].expression +\n          \" :\" +\n          \"x\" +\n          index +\n          \" and \";\n      }\n    } else {\n      // KeyConditionExpression =\n      //   KeyConditionExpression +\n      //   \"#a\" +\n      //   index +\n      //   \" \" +\n      //   keyConditions[i].expression +\n      //   \" :\" +\n      //   \"x\" +\n      //   index +\n      //   \" \";\n\n      ///////\n      if (keyConditions[i].expression == \"beginswith\") {\n        KeyConditionExpression =\n          KeyConditionExpression +\n          \"begins_with (\" +\n          \"#a\" +\n          index +\n          \" \" +\n          \",\" +\n          \" :\" +\n          \"x\" +\n          index +\n          \")\";\n      } else {\n        KeyConditionExpression =\n          KeyConditionExpression +\n          \"#a\" +\n          index +\n          \" \" +\n          keyConditions[i].expression +\n          \" :\" +\n          \"x\" +\n          index +\n          \" \";\n      }\n      /////\n    }\n    index = index + 1;\n  }\n\n  let filterindex = 0;\n  let filterlastIndex = filterConditions.length - 1;\n  for (let i in filterConditions) {\n    console.log(i);\n    let keyindex = \"#b\" + filterindex;\n    ExpressionAttributeNames[keyindex] = filterConditions[i].field;\n    let valueindex = \":y\" + filterindex;\n    ExpressionAttributeValues[valueindex] = filterConditions[i].value;\n    if (filterindex < filterlastIndex) {\n      filterConditionExpression =\n        filterConditionExpression +\n        \"#b\" +\n        filterindex +\n        \" \" +\n        filterConditions[i].expression +\n        \" :\" +\n        \"y\" +\n        filterindex +\n        \" and \";\n    } else {\n      filterConditionExpression =\n        filterConditionExpression +\n        \"#b\" +\n        filterindex +\n        \" \" +\n        filterConditions[i].expression +\n        \" :\" +\n        \"y\" +\n        filterindex +\n        \" \";\n    }\n    filterindex = filterindex + 1;\n  }\n\n  console.log(KeyConditionExpression);\n  console.log(filterConditionExpression);\n  console.log(ExpressionAttributeNames);\n  console.log(ExpressionAttributeValues);\n\n  let params = {\n    FilterExpression: filterConditionExpression,\n    KeyConditionExpression: KeyConditionExpression,\n    ExpressionAttributeNames: ExpressionAttributeNames,\n    ExpressionAttributeValues: ExpressionAttributeValues,\n    PageSize: dataprops.pageSize,\n    Limit: dataprops.limit,\n    ExclusiveStartKey: dataprops.exclusiveStartKey,\n  };\n  console.log(params);\n  let axiosresult = await axios\n    .post(endurl, params, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => {\n      console.log(\"response on\" + dataprops.objectName);\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      console.log(error.response);\n      let errormessage = \"\";\n      if (error.response) {\n        errormessage = error.response.data.message;\n      } else {\n        errormessage = JSON.stringify(error);\n      }\n      result = {\n        isSuccess: \"false\",\n        message: errormessage,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function bulkcreateRecordAWS(dataprops) {\n  console.log(dataprops);\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/bulkcreate\";\n  console.log(endurl);\n  let objectListData = dataprops.objectListData;\n  let objectListDatatobeSent = [];\n  for (let objectData in objectListData) {\n    objectListDatatobeSent.push({\n      PutRequest: {\n        Item: objectListData[objectData],\n      },\n    });\n  }\n  let datatobesent = {};\n  datatobesent[dataprops.objectName] = objectListDatatobeSent;\n\n  let axiosresult = await axios\n    .post(endurl, datatobesent, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      console.log(error);\n      let errormessage = \"\";\n      if (error.response) {\n        errormessage = error.response.data.message;\n      } else {\n        errormessage = JSON.stringify(error);\n      }\n      result = {\n        isSuccess: \"false\",\n        message: errormessage,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function createRecordAWS(dataprops) {\n  console.log(dataprops);\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/create\";\n  console.log(endurl);\n  let objectData = dataprops.objectData;\n\n  let axiosresult = await axios\n    .post(endurl, objectData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      console.log(error);\n      let errormessage = \"\";\n      if (error.response) {\n        errormessage = error.response.data.message;\n      } else {\n        errormessage = JSON.stringify(error);\n      }\n      result = {\n        isSuccess: \"false\",\n        message: errormessage,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function updateRecordAWS(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/update\";\n  console.log(endurl);\n\n  let fieldProps = dataprops.objectData;\n\n  let objectData = dataprops.objectData;\n  let UpdateExpression = \"set \";\n  let ExpressionAttributeNames = {};\n  let ExpressionAttributeValues = {};\n  let index = 0;\n  let lastIndex = Object.keys(fieldProps).length - 1;\n  for (let i in fieldProps) {\n    console.log();\n    let keyindex = \"#a\" + index;\n    ExpressionAttributeNames[keyindex] = i;\n    let valueindex = \":x\" + index;\n    ExpressionAttributeValues[valueindex] = fieldProps[i];\n    if (index < lastIndex) {\n      UpdateExpression =\n        UpdateExpression + \"#a\" + index + \" = :\" + \"x\" + index + \" , \";\n    } else {\n      UpdateExpression =\n        UpdateExpression + \"#a\" + index + \" = :\" + \"x\" + index + \" \";\n    }\n    index = index + 1;\n  }\n\n  console.log(ExpressionAttributeValues);\n  objectData = {\n    Key: dataprops.objectPrimaryKeyValue,\n    UpdateExpression: UpdateExpression,\n    ExpressionAttributeNames: ExpressionAttributeNames,\n    ExpressionAttributeValues: ExpressionAttributeValues,\n  };\n  let axiosresult = await axios\n    .post(endurl, objectData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      console.log(error.response);\n      let errormessage = \"\";\n      if (error.response) {\n        errormessage = error.response.data.message;\n      } else {\n        errormessage = JSON.stringify(error);\n      }\n      result = {\n        isSuccess: \"false\",\n        message: errormessage,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function deleteRecordAWS(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/delete\";\n  console.log(endurl);\n\n  let objectData = {\n    Key: dataprops.objectPrimaryKeyValue,\n  };\n  let axiosresult = await axios\n    .post(endurl, objectData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      console.log(error.response);\n      let errormessage = \"\";\n      if (error.response) {\n        errormessage = error.response.data.message;\n      } else {\n        errormessage = JSON.stringify(error);\n      }\n      result = {\n        isSuccess: \"false\",\n        message: errormessage,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}
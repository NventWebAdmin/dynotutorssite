{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";//import { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var consoleLog=function consoleLog(isallowlogs,str){if(isallowlogs){console.log(str);}};export var showError=function showError(props){var htmlArray=document.getElementsByClassName(\"org-datainput\");var htmlErrorArray=document.getElementsByClassName(\"org-datainputerror\");for(var i=0;i<htmlErrorArray.length;i++){htmlErrorArray[i].style.display=\"none\";}for(var _i=0;_i<htmlArray.length;_i++){for(var j=0;j<props.length;j++){console.log(htmlArray[_i]);console.log(props);// console.log(props[htmlArray[i]);\nif(props&&props[j].name===htmlArray[_i].dataset.name){var error=\"<div style='color:red;' class='org-datainputerror'>\"+props[j].message+\"</div>\";htmlArray[_i].insertAdjacentHTML(\"afterend\",error);}}}};export var sortArray=function sortArray(items,orderby,typeofsortby){// sort by value\nif(typeofsortby===\"integer\"){return items.sort(function(a,b){return a[orderby]-b[orderby];});}// sort by name\nif(typeofsortby===\"string\"){return items.sort(function(a,b){var nameA=a[orderby].toUpperCase();// ignore upper and lowercase\nvar nameB=b[orderby].toUpperCase();// ignore upper and lowercase\nif(nameA<nameB){return-1;}if(nameA>nameB){return 1;}// names must be equal\nreturn 0;});}};export function GetAlphabetPanel(params){var alphabethtml=[];var letterOnclick=function letterOnclick(e){params.aplhabetOnClickjs(e.target.innerHTML);};alphabethtml.push(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"A\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"B\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"C\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"D\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"E\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"F\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"G\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"H\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"I\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"J\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"K\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"L\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"M\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"N\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"O\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"P\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"Q\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"R\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"S\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"T\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"U\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"V\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"W\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"X\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"Y\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"Z\"}),\"\\xA0|\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{padding:\"2px\"},className:\"org-cursor\",onClick:letterOnclick,children:\"All\"})]}));return alphabethtml;}export var fieldTypeHtmltoDBmapping=function fieldTypeHtmltoDBmapping(props){var fieldType=props.fieldType,inputOrOutput=props.inputOrOutput;console.log(fieldType);console.log(inputOrOutput);var output=\"\";if(fieldType===\"text\"){if(inputOrOutput===\"input\"){output=\"inputtext\";}else{output=\"outputtext\";}}if(fieldType===\"button\"){if(inputOrOutput===\"input\"){output=\"button\";}else{output=\"button\";}}if(fieldType===\"buttonpanel\"){if(inputOrOutput===\"input\"){output=\"buttonpanel\";}else{output=\"buttonpanel\";}}if(fieldType===\"email\"){if(inputOrOutput===\"input\"){output=\"inputemail\";}else{output=\"outputtext\";}}if(fieldType===\"number\"){if(inputOrOutput===\"input\"){output=\"inputnumber\";}else{output=\"outputtext\";}}if(fieldType===\"select\"){if(inputOrOutput===\"input\"){output=\"inputselect\";}else{output=\"outputtext\";}}if(fieldType===\"image\"){if(inputOrOutput===\"input\"){output=\"inputimage\";}else{output=\"outputimage\";}}return output;};export var serverButtonHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(props){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);}));return function serverButtonHandler(_x){return _ref.apply(this,arguments);};}();export var getMonthStringDisplay=function getMonthStringDisplay(props){var monthIndex=props.monthIndex;var monthStringDisplay=\"\";if(monthIndex===0){monthStringDisplay=\"JAN\";}if(monthIndex===1){monthStringDisplay=\"FEB\";}if(monthIndex===2){monthStringDisplay=\"MAR\";}if(monthIndex===3){monthStringDisplay=\"APR\";}if(monthIndex===4){monthStringDisplay=\"MAY\";}if(monthIndex===5){monthStringDisplay=\"JUN\";}if(monthIndex===6){monthStringDisplay=\"JUL\";}if(monthIndex===7){monthStringDisplay=\"AUG\";}if(monthIndex===8){monthStringDisplay=\"SEP\";}if(monthIndex===9){monthStringDisplay=\"OCT\";}if(monthIndex===10){monthStringDisplay=\"NOV\";}if(monthIndex===11){monthStringDisplay=\"DEC\";}return monthStringDisplay;};export var getMonthDigitalDisplay=function getMonthDigitalDisplay(props){var monthIndex=props.monthIndex;var monthDigitalDisplay=\"\";if(monthIndex<9){monthIndex=monthIndex+1;monthDigitalDisplay=\"0\"+monthIndex;}else{monthDigitalDisplay=parseInt(monthIndex)+1;}return monthDigitalDisplay;};export var getDateDigitalDisplay=function getDateDigitalDisplay(props){var dateIndex=props.dateIndex;var dateDigitalDisplay=\"\";if(dateIndex<10){dateDigitalDisplay=\"0\"+dateIndex;}else{dateDigitalDisplay=dateIndex;}return dateDigitalDisplay;};export var getDayStringDisplay=function getDayStringDisplay(props){var dayIndex=props.dayIndex;if(dayIndex===0){dayIndex=\"SUN\";}if(dayIndex===1){dayIndex=\"MON\";}if(dayIndex===2){dayIndex=\"TUES\";}if(dayIndex===3){dayIndex=\"WED\";}if(dayIndex===4){dayIndex=\"THURS\";}if(dayIndex===5){dayIndex=\"FRI\";}if(dayIndex===6){dayIndex=\"SAT\";}return dayIndex;};export var getUniqueArray=function getUniqueArray(props){var dataArray=props.dataArray,param=props.param;var uniqueDataArray=[];for(var i=0;i<dataArray.length;i++){var dataArrayVar=dataArray[i];var isExist=false;for(var j=0;j<uniqueDataArray.length;j++){var uniqueDataArrayVar=uniqueDataArray[j];if(dataArrayVar[param]===uniqueDataArrayVar[param]){isExist=true;}}if(isExist===false){uniqueDataArray.push(dataArrayVar);}}return uniqueDataArray;};export var getLocalData=function getLocalData(props){var routerpropsparams=props.routerprops.match.params;var urlsearchparams=new URLSearchParams(props.routerprops.location.search);var localdata={};var d=new Date();localdata[\"currenttimesting\"]=d.toISOString().toLowerCase();localdata[\"orgname\"]=\"gouthama\";localdata[\"userprofileid\"]=\"gouthama-admin\";localdata[\"userid\"]=\"pradeep\";localdata[\"orgname\"]=sessionStorage.getItem(\"orgname\");localdata[\"userprofileid\"]=sessionStorage.getItem(\"userprofileid\");localdata[\"userroleid\"]=sessionStorage.getItem(\"userroleid\");localdata[\"userid\"]=sessionStorage.getItem(\"orguserid\");localdata[\"appname\"]=routerpropsparams.appname?routerpropsparams.appname.toLowerCase():undefined;localdata[\"maintabname\"]=routerpropsparams.maintabname?routerpropsparams.maintabname.toLowerCase():undefined;localdata[\"sidetabname\"]=routerpropsparams.sidetabname?routerpropsparams.sidetabname.toLowerCase():undefined;localdata[\"actionname\"]=routerpropsparams.actionname?routerpropsparams.actionname.toLowerCase():undefined;localdata[\"urlsearchparams\"]=urlsearchparams;var recordId=urlsearchparams.get(\"id\");var viewname=urlsearchparams.get(\"viewname\");var relatedviewname=urlsearchparams.get(\"relatedviewname\");localdata[\"recordid\"]=recordId?recordId.toLowerCase():undefined;localdata[\"viewname\"]=viewname?viewname.toLowerCase():undefined;localdata[\"relatedviewname\"]=relatedviewname?relatedviewname.toLowerCase():undefined;return localdata;};// export function GetCreateEditRecordPagelayout(params) {\n//   console.log(params);\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\"\n//       }}\n//     >\n//       <div\n//         className=\"mediumfont greybg\"\n//         style={{\n//           textAlign: \"left\",\n//           width: \"80%\",\n//           padding: \"5px 0px\"\n//         }}\n//       >\n//         Basic Information\n//       </div>\n//       <div className=\"smallfont\" style={{ textAlign: \"left\", width: \"80%\" }}>\n//         Name\n//       </div>\n//       <input\n//         className=\"largeinput\"\n//         style={{ width: \"80%\", marginBottom: \"8px\" }}\n//       />\n//       <div className=\"smallfont\" style={{ textAlign: \"left\", width: \"80%\" }}>\n//         API\n//       </div>\n//       <input\n//         className=\"largeinput\"\n//         style={{ width: \"80%\", marginBottom: \"8px\" }}\n//       />\n//     </div>\n//   );\n// }\n// export function SortArrayObjectbyField(params) {\n//   let dataObjectjsarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataObjectjsarray.push(params.dataObjectjs[key].fields);\n//   }\n//   function compare(a, b) {\n//     // Use toUpperCase() to ignore character casing\n//     let afieldvalue = a[params.fieldname];\n//     let bfieldvalue = b[params.fieldname];\n//     let comparison = 0;\n//     if (afieldvalue === null || afieldvalue === undefined) {\n//       comparison = -1;\n//     } else if (bfieldvalue === null || bfieldvalue === undefined) {\n//       comparison = 1;\n//     } else {\n//       const valueA = afieldvalue.toUpperCase();\n//       const valueB = bfieldvalue.toUpperCase();\n//       if (valueA > valueB) {\n//         comparison = 1;\n//       } else if (valueA < valueB) {\n//         comparison = -1;\n//       }\n//     }\n//     return comparison;\n//   }\n//   dataObjectjsarray.sort(compare);\n//   let dataObjectjssorted = {};\n//   for (let key in dataObjectjsarray) {\n//     let fieldsjs = {};\n//     fieldsjs.fields = dataObjectjsarray[key];\n//     dataObjectjssorted[dataObjectjsarray[key].Name] = fieldsjs;\n//   }\n//   return dataObjectjssorted;\n// }\n// export function GetTablefromObjects(params) {}\n// export function GetFirstkeyfromObject(params) {\n//   let dataarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   let firstkey = \"\";\n//   if (dataarray.length > 0) {\n//     firstkey = dataarray[0].label;\n//   }\n//   return firstkey;\n// }\n// export function GetHtmlArrayfromObject(params) {\n//   // get repeatedhtml from objectarray based on label, name field value like <div>test1</div><div>test2</div> from {{name:\"test1\",label:\"test1\"},{name:\"test2\",label:\"test2\"}}\n//   let htmlarray = [];\n//   let propvalues = {};\n//   let dataarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   if (params.classNamejs) {\n//     propvalues[\"className\"] = params.classNamejs;\n//   }\n//   if (params.stylejs) {\n//     propvalues[\"style\"] = params.stylejs;\n//   }\n//   for (let key in dataarray) {\n//     let dataarrayvar = dataarray[key];\n//     if (params.idjs) {\n//       propvalues[\"id\"] = params.idjs + dataarrayvar.name;\n//       propvalues[\"data-name\"] = dataarrayvar.name;\n//     }\n//     if (params.onClickjs) {\n//       let onclickfunction = e => {\n//         params.onClickjs(e.target.id);\n//       };\n//       propvalues[\"onClick\"] = onclickfunction;\n//     }\n//     let newelement = React.createElement(\n//       params.tagnamejs,\n//       propvalues,\n//       dataarrayvar.label\n//     );\n//     if (params.parenttagnamejs) {\n//       let parentpropvalues = {};\n//       if (params.parentclassNamejs) {\n//         parentpropvalues.className = params.parentclassNamejs;\n//       }\n//       if (params.parentstylejs) {\n//         parentpropvalues.style = params.parentstylejs;\n//       }\n//       let siblingsparentpropvalues = {};\n//       if (params.siblingsparentclassNamejs) {\n//         siblingsparentpropvalues.className = params.siblingsparentclassNamejs;\n//       }\n//       if (params.siblingsparentidjs) {\n//         siblingsparentpropvalues.id =\n//           params.siblingsparentidjs + dataarrayvar.name;\n//         siblingsparentpropvalues[\"data-name\"] = dataarrayvar.name;\n//       }\n//       if (params.siblingsparentonClickjs) {\n//         let onclickfunction = e => {\n//           params.siblingsparentonClickjs(e.target.id);\n//         };\n//         siblingsparentpropvalues[\"onClick\"] = onclickfunction;\n//       }\n//       let childhtml = [];\n//       childhtml.push(dataarrayvar.label);\n//       if (params.statichtmlsibiling) {\n//         childhtml.push(params.statichtmlsibiling);\n//       }\n//       let siblingsparentelement = React.createElement(\n//         params.siblingsparenttagnamejs,\n//         siblingsparentpropvalues,\n//         childhtml\n//       );\n//       newelement = React.createElement(\n//         params.parenttagnamejs,\n//         parentpropvalues,\n//         siblingsparentelement\n//       );\n//     }\n//     htmlarray.push(newelement);\n//   }\n//   return htmlarray;\n// }\n// export function gethtmlbasedonotherobject(params) {\n//   // get repeatedhtml from objectarray based on other object label, name field value like <div>test1</div><div>test2</div> from {{name:\"test1\",label:\"test1\"},{name:\"test2\",label:\"test2\"}}\n//   // params.dataObjectjs\n//   // params.datalabelObjectjs\n//   // params.datacolumnObjectjs\n//   // params.datarowObjectjs\n//   let dataobjectarrayhtml = [];\n//   let labelarrayhtml = [];\n//   let columnarrayhtml = [];\n//   let rowarrayhtml = [];\n//   let tablearrayhtml = [];\n//   let dataobjectpropvalues = {};\n//   let labelpropvalues = {};\n//   let columnpropvalues = {};\n//   let rowpropvalues = {};\n//   let tablepropvalues = {};\n//   let dataarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   let labelarray = [];\n//   for (let key in params.labeldataObjectjs) {\n//     labelarray.push(params.labeldataObjectjs[key]);\n//   }\n//   labelarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   if (params.classNamejs) {\n//     dataobjectpropvalues[\"className\"] = params.classNamejs;\n//   }\n//   if (params.stylejs) {\n//     dataobjectpropvalues[\"style\"] = params.stylejs;\n//   }\n//   if (params.labelclassNamejs) {\n//     labelpropvalues[\"className\"] = params.labelclassNamejs;\n//   }\n//   if (params.labelstylejs) {\n//     labelpropvalues[\"style\"] = params.labelstylejs;\n//   }\n//   if (params.columnclassNamejs) {\n//     columnpropvalues[\"className\"] = params.columnclassNamejs;\n//   }\n//   if (params.columnstylejs) {\n//     columnpropvalues[\"style\"] = params.columnstylejs;\n//   }\n//   if (params.rowclassNamejs) {\n//     rowpropvalues[\"className\"] = params.rowclassNamejs;\n//   }\n//   if (params.rowstylejs) {\n//     rowpropvalues[\"style\"] = params.rowstylejs;\n//   }\n//   if (params.tableclassNamejs) {\n//     tablepropvalues[\"className\"] = params.tableclassNamejs;\n//   }\n//   if (params.tablestylejs) {\n//     tablepropvalues[\"style\"] = params.tablestylejs;\n//   }\n//   if (params.tableidjs) {\n//     tablepropvalues[\"id\"] = params.tableidjs;\n//     tablepropvalues[\"data-name\"] = params.tableidjs;\n//   }\n//   if (params.tableonClickjs) {\n//     let onclickfunction = e => {\n//       params.tableonClickjs(e.target.id);\n//     };\n//     tablepropvalues[\"onClick\"] = onclickfunction;\n//   }\n//   rowarrayhtml = [];\n//   for (let key in dataarray) {\n//     let dataarrayvar = dataarray[key].fields;\n//     columnarrayhtml = [];\n//     if (params.rowidjs) {\n//       rowpropvalues[\"id\"] = params.rowidjs + dataarrayvar.Name;\n//       rowpropvalues[\"data-name\"] = dataarrayvar.Name;\n//     }\n//     if (params.rowonClickjs) {\n//       let onclickfunction = e => {\n//         params.rowonClickjs(e.target.id);\n//       };\n//       rowpropvalues[\"onClick\"] = onclickfunction;\n//     }\n//     if (params.columnidjs) {\n//       columnpropvalues[\"id\"] = params.columnidjs + dataarrayvar.Name;\n//       columnpropvalues[\"data-name\"] = dataarrayvar.Name;\n//     }\n//     if (params.columnonClickjs) {\n//       let onclickfunction = e => {\n//         params.columnonClickjs(e.target.id);\n//       };\n//       columnpropvalues[\"onClick\"] = onclickfunction;\n//     }\n//     let mainobjectfieldhtml = [];\n//     if (labelarray) {\n//       for (let labelkey in labelarray) {\n//         let labelarrayvar = labelarray[labelkey];\n//         if (params.idjs) {\n//           dataobjectpropvalues[\"id\"] = params.idjs + dataarrayvar.Name;\n//           dataobjectpropvalues[\"data-name\"] = dataarrayvar.Name;\n//         }\n//         if (params.onClickjs) {\n//           let onclickfunction = e => {\n//             params.onClickjs(e.target.id);\n//           };\n//           dataobjectpropvalues[\"onClick\"] = onclickfunction;\n//         }\n//         if (params.labelidjs) {\n//           labelpropvalues[\"id\"] = params.labelidjs + labelarrayvar.name;\n//           labelpropvalues[\"data-name\"] = labelarrayvar.name;\n//         }\n//         if (params.labelonClickjs) {\n//           let onclickfunction = e => {\n//             params.labelonClickjs(e.target.id);\n//           };\n//           labelpropvalues[\"onClick\"] = onclickfunction;\n//         }\n//         let labelelement = React.createElement(\n//           params.labeltagnamejs,\n//           labelpropvalues,\n//           labelarrayvar.label\n//         );\n//         let fieldelement = React.createElement(\n//           params.tagnamejs,\n//           dataobjectpropvalues,\n//           dataarrayvar[labelarrayvar.name]\n//         );\n//         let columnelement = [];\n//         if (params.isshowlabel) {\n//           columnelement.push(labelelement);\n//         }\n//         columnelement.push(fieldelement);\n//         columnarrayhtml.push(\n//           React.createElement(\n//             params.columntagnamejs,\n//             columnpropvalues,\n//             columnelement\n//           )\n//         );\n//       }\n//     }\n//     rowarrayhtml.push(\n//       React.createElement(params.rowtagnamejs, rowpropvalues, columnarrayhtml)\n//     );\n//   }\n//   if (params.tabletagnamejs) {\n//     tablearrayhtml.push(\n//       React.createElement(params.tabletagnamejs, tablepropvalues, rowarrayhtml)\n//     );\n//     return tablearrayhtml;\n//   }\n//   return rowarrayhtml;\n// }\n// export function GettableHtmlfromObject(params) {\n//   let thobject = params.thobjectjs;\n//   let tdobject = params.tdobjectjs;\n//   let orderby = \"name\";\n//   let thparams = {};\n//   thparams.tagnamejs = \"th\";\n//   let thonclick = () => {\n//     alert();\n//   };\n//   thparams.onClickjs = thonclick;\n//   thparams.dataObjectjs = thobject;\n//   thparams.stylejs = { fontSize: \"40px\" };\n//   thparams.idjs = \"listpage-objectsetupicon-\";\n//   thparams.classNamejs = \"bluefont  \";\n//   thparams.statichtmlsibiling = [];\n//   thparams.statichtmlsibiling.push(\n//     <i class=\"material-icons smallleftpadding org-cursor\">\n//       keyboard_arrow_down\n//     </i>\n//   );\n//   thparams.siblingsparentclassNamejs = \"spacebetween\";\n//   thparams.siblingsparenttagnamejs = \"span\";\n//   //thparams.parentclassNamejs = \"spacebetween\";\n//   thparams.parenttagnamejs = \"th\";\n//   thparams.parentstylejs = {\n//     width: \"50%\"\n//   };\n//   let thhtml = GetHtmlArrayfromObject(thparams);\n//   let throwhtml = React.createElement(\"tr\", {}, thhtml);\n//   //return thhtml;\n//   let tdparams = {};\n//   tdparams.dataObjectjs = tdobject;\n//   tdparams.tagnamejs = \"span\";\n//   let onclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.onClickjs = onclickfunction;\n//   tdparams.stylejs = { fontSize: \"30px\" };\n//   tdparams.idjs = \"listpage-objectsetupicon-\";\n//   tdparams.classNamejs = \" bluefont  \";\n//   tdparams.labeldataObjectjs = thobject;\n//   tdparams.labeltagnamejs = \"th\";\n//   let labelonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.labelonClickjs = labelonclickfunction;\n//   tdparams.labelstylejs = { fontSize: \"30px\" };\n//   tdparams.labelidjs = \"listpage-objectsetupicon-\";\n//   tdparams.labelclassNamejs = \" bluefont  \";\n//   tdparams.columntagnamejs = \"td\";\n//   let columnonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.columnonClickjs = columnonclickfunction;\n//   tdparams.columnstylejs = { fontSize: \"30px\" };\n//   tdparams.columnidjs = \"listpage-objectsetupicon-\";\n//   tdparams.columnclassNamejs = \" bluefont   \";\n//   tdparams.rowtagnamejs = \"tr\";\n//   let rowonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.rowonClickjs = rowonclickfunction;\n//   tdparams.rowstylejs = { fontSize: \"30px\" };\n//   tdparams.rowidjs = \"listpage-objectsetupicon-\";\n//   tdparams.rowclassNamejs = \" bluefont   \";\n//   tdparams.isshowlabel = false;\n//   let tdhtml = gethtmlbasedonotherobject(tdparams);\n//   //return tdhtml;\n//   let tableelement = [];\n//   tableelement.push(throwhtml);\n//   tableelement.push(tdhtml);\n//   let tablehtml = React.createElement(\n//     \"table\",\n//     { border: \"1px\", className: \"col-12 table tableclass\" },\n//     tableelement\n//   );\n//   return tablehtml;\n// }","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/src/js/index.js"],"names":["React","consoleLog","isallowlogs","str","console","log","showError","props","htmlArray","document","getElementsByClassName","htmlErrorArray","i","length","style","display","j","name","dataset","error","message","insertAdjacentHTML","sortArray","items","orderby","typeofsortby","sort","a","b","nameA","toUpperCase","nameB","GetAlphabetPanel","params","alphabethtml","letterOnclick","e","aplhabetOnClickjs","target","innerHTML","push","padding","fieldTypeHtmltoDBmapping","fieldType","inputOrOutput","output","serverButtonHandler","getMonthStringDisplay","monthIndex","monthStringDisplay","getMonthDigitalDisplay","monthDigitalDisplay","parseInt","getDateDigitalDisplay","dateIndex","dateDigitalDisplay","getDayStringDisplay","dayIndex","getUniqueArray","dataArray","param","uniqueDataArray","dataArrayVar","isExist","uniqueDataArrayVar","getLocalData","routerpropsparams","routerprops","match","urlsearchparams","URLSearchParams","location","search","localdata","d","Date","toISOString","toLowerCase","sessionStorage","getItem","appname","undefined","maintabname","sidetabname","actionname","recordId","get","viewname","relatedviewname"],"mappings":"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EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n//import { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\n\nexport const consoleLog = (isallowlogs, str) => {\n  if (isallowlogs) {\n    console.log(str);\n  }\n};\n\nexport const showError = (props) => {\n  let htmlArray = document.getElementsByClassName(\"org-datainput\");\n  let htmlErrorArray = document.getElementsByClassName(\"org-datainputerror\");\n  for (let i = 0; i < htmlErrorArray.length; i++) {\n    htmlErrorArray[i].style.display = \"none\";\n  }\n  for (let i = 0; i < htmlArray.length; i++) {\n    for (let j = 0; j < props.length; j++) {\n      console.log(htmlArray[i]);\n      console.log(props);\n      // console.log(props[htmlArray[i]);\n      if (props && props[j].name === htmlArray[i].dataset.name) {\n        let error =\n          \"<div style='color:red;' class='org-datainputerror'>\" +\n          props[j].message +\n          \"</div>\";\n        htmlArray[i].insertAdjacentHTML(\"afterend\", error);\n      }\n    }\n  }\n};\n\nexport const sortArray = (items, orderby, typeofsortby) => {\n  // sort by value\n  if (typeofsortby === \"integer\") {\n    return items.sort(function (a, b) {\n      return a[orderby] - b[orderby];\n    });\n  }\n\n  // sort by name\n  if (typeofsortby === \"string\") {\n    return items.sort(function (a, b) {\n      var nameA = a[orderby].toUpperCase(); // ignore upper and lowercase\n      var nameB = b[orderby].toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      // names must be equal\n      return 0;\n    });\n  }\n};\nexport function GetAlphabetPanel(params) {\n  let alphabethtml = [];\n\n  let letterOnclick = (e) => {\n    params.aplhabetOnClickjs(e.target.innerHTML);\n  };\n\n  alphabethtml.push(\n    <div>\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        A\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        B\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        C\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        D\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        E\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        F\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        G\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        H\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        I\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        J\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        K\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        L\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        M\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        N\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        O\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        P\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        Q\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        R\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        S\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        T\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        U\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        V\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        W\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        X\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        Y\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        Z\n      </span>\n      &nbsp;|&nbsp;\n      <span\n        style={{ padding: \"2px\" }}\n        className=\"org-cursor\"\n        onClick={letterOnclick}\n      >\n        All\n      </span>\n    </div>\n  );\n  return alphabethtml;\n}\n\nexport const fieldTypeHtmltoDBmapping = (props) => {\n  let { fieldType, inputOrOutput } = props;\n  console.log(fieldType);\n  console.log(inputOrOutput);\n  let output = \"\";\n  if (fieldType === \"text\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputtext\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n  if (fieldType === \"button\") {\n    if (inputOrOutput === \"input\") {\n      output = \"button\";\n    } else {\n      output = \"button\";\n    }\n  }\n  if (fieldType === \"buttonpanel\") {\n    if (inputOrOutput === \"input\") {\n      output = \"buttonpanel\";\n    } else {\n      output = \"buttonpanel\";\n    }\n  }\n  if (fieldType === \"email\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputemail\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n  if (fieldType === \"number\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputnumber\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n  if (fieldType === \"select\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputselect\";\n    } else {\n      output = \"outputtext\";\n    }\n  }\n\n  if (fieldType === \"image\") {\n    if (inputOrOutput === \"input\") {\n      output = \"inputimage\";\n    } else {\n      output = \"outputimage\";\n    }\n  }\n\n  return output;\n};\n\nexport const serverButtonHandler = async (props) => {\n  // let { clickprops, localdata, recorddata } = props;\n  // console.log(clickprops);\n  // let metadataParams = {\n  //   objectName: \"layoutactions\",\n  //   objectData: {},\n  //   keyConditions: [\n  //     {\n  //       field: \"orgname\",\n  //       value: localdata.orgname,\n  //       expression: \"=\",\n  //     },\n  //     {\n  //       field: \"id\",\n  //       value: clickprops.actionid,\n  //       expression: \"=\",\n  //     },\n  //   ],\n  //   filterConditions: [],\n  //   pageSize: \"\",\n  //   limit: \"\",\n  //   exclusiveStartKey: \"\",\n  // };\n  // console.log(\"metadataParams\" + JSON.stringify(metadataParams));\n  // let metadataresult = await getRecorddata(metadataParams);\n  // if (metadataresult.isSuccess === \"false\") {\n  //   alert(\"metadata\" + metadataresult.message);\n  // } else {\n  //   if (metadataresult.dataprops.Items[0]) {\n  //     console.log(metadataresult);\n  //     let action = metadataresult.dataprops.Items[0].action;\n  //     if (action.type === \"redirect\") {\n  //       if (action.nexturl.type === \"new\") {\n  //         let nexturl = action.nexturl;\n  //         let replacetext = nexturl.replacetext;\n  //         for (let replaceparamI in nexturl.replaceparams) {\n  //           let replaceparam = nexturl.replaceparams[replaceparamI];\n  //           if (replaceparam.type === \"localdata\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               localdata[replaceparam.name]\n  //             );\n  //           }\n  //           if (replaceparam.type === \"clickprops\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               clickprops[replaceparam.name]\n  //             );\n  //           }\n  //           if (replaceparam.type === \"recorddata\") {\n  //             replacetext = replacetext.replace(\n  //               replaceparamI,\n  //               recorddata[replaceparam.name]\n  //             );\n  //           }\n  //         }\n  //         console.log(replacetext);\n  //         window.location.assign(replacetext);\n  //       }\n  //       if (action.nexturl.type === \"old\") {\n  //         window.history.back();\n  //       }\n  //     }\n  //     if (action.type === \"dataupdateandredirect\") {\n  //       if (action.nexturl.type === \"new\") {\n  //         console.log(action);\n  //         //dataupdate\n  //         for (let objectvar in action.dataupdate) {\n  //           let object = action.dataupdate[objectvar];\n  //           let objectTableName = object.tablename;\n  //           let objectfields = object.fields;\n  //           for (let objectfield in objectfields) {\n  //             let objectfieldvaluereplacetext =\n  //               objectfields[objectfield].replacetext;\n  //             console.log(objectfieldvaluereplacetext);\n  //             for (let replaceparam in objectfields[objectfield]\n  //               .replaceparams) {\n  //               let replaceparamvalue =\n  //                 objectfields[objectfield].replaceparams[replaceparam];\n  //               console.log(replaceparamvalue);\n  //               if (replaceparamvalue.type === \"recorddata\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   recorddata[replaceparamvalue.name]\n  //                 );\n  //               }\n  //               if (replaceparamvalue.type === \"localdata\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   localdata[replaceparamvalue.name]\n  //                 );\n  //               }\n  //               if (replaceparamvalue.type === \"clickprops\") {\n  //                 objectfieldvaluereplacetext = objectfieldvaluereplacetext.replace(\n  //                   replaceparam,\n  //                   clickprops[replaceparamvalue.name]\n  //                 );\n  //               }\n  //             }\n  //             console.log(objectfieldvaluereplacetext);\n  //             recorddata[objectfield] = objectfieldvaluereplacetext;\n  //           }\n  //           console.log(recorddata);\n  //           let result = await createRecord({\n  //             objectName: objectTableName,\n  //             objectData: recorddata,\n  //           });\n  //           if (result.isSuccess === \"false\") {\n  //             alert(result.message);\n  //           } else {\n  //             ////////// redirection\n  //             let nexturl = action.nexturl;\n  //             if (nexturl) {\n  //               let replacetext = nexturl.replacetext;\n  //               for (let replaceparamI in nexturl.replaceparams) {\n  //                 let replaceparam = nexturl.replaceparams[replaceparamI];\n  //                 if (replaceparam.type === \"localdata\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     localdata[replaceparam.name]\n  //                   );\n  //                 }\n  //                 if (replaceparam.type === \"recorddata\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     recorddata[replaceparam.name]\n  //                   );\n  //                 }\n  //                 if (replaceparam.type === \"clickprops\") {\n  //                   replacetext = replacetext.replace(\n  //                     replaceparamI,\n  //                     clickprops[replaceparam.name]\n  //                   );\n  //                 }\n  //               }\n  //               console.log(replacetext);\n  //               window.location.assign(replacetext);\n  //             }\n  //             ////////\n  //           }\n  //         }\n  //       }\n  //       if (action.nexturl.type === \"old\") {\n  //         window.history.back();\n  //       }\n  //     }\n  //   }\n  // }\n};\nexport const getMonthStringDisplay = (props) => {\n  let { monthIndex } = props;\n  let monthStringDisplay = \"\";\n  if (monthIndex === 0) {\n    monthStringDisplay = \"JAN\";\n  }\n  if (monthIndex === 1) {\n    monthStringDisplay = \"FEB\";\n  }\n  if (monthIndex === 2) {\n    monthStringDisplay = \"MAR\";\n  }\n  if (monthIndex === 3) {\n    monthStringDisplay = \"APR\";\n  }\n  if (monthIndex === 4) {\n    monthStringDisplay = \"MAY\";\n  }\n  if (monthIndex === 5) {\n    monthStringDisplay = \"JUN\";\n  }\n  if (monthIndex === 6) {\n    monthStringDisplay = \"JUL\";\n  }\n  if (monthIndex === 7) {\n    monthStringDisplay = \"AUG\";\n  }\n  if (monthIndex === 8) {\n    monthStringDisplay = \"SEP\";\n  }\n  if (monthIndex === 9) {\n    monthStringDisplay = \"OCT\";\n  }\n  if (monthIndex === 10) {\n    monthStringDisplay = \"NOV\";\n  }\n  if (monthIndex === 11) {\n    monthStringDisplay = \"DEC\";\n  }\n  return monthStringDisplay;\n};\nexport const getMonthDigitalDisplay = (props) => {\n  let { monthIndex } = props;\n  let monthDigitalDisplay = \"\";\n  if (monthIndex < 9) {\n    monthIndex = monthIndex + 1;\n    monthDigitalDisplay = \"0\" + monthIndex;\n  } else {\n    monthDigitalDisplay = parseInt(monthIndex) + 1;\n  }\n\n  return monthDigitalDisplay;\n};\n\nexport const getDateDigitalDisplay = (props) => {\n  let { dateIndex } = props;\n  let dateDigitalDisplay = \"\";\n  if (dateIndex < 10) {\n    dateDigitalDisplay = \"0\" + dateIndex;\n  } else {\n    dateDigitalDisplay = dateIndex;\n  }\n\n  return dateDigitalDisplay;\n};\n\nexport const getDayStringDisplay = (props) => {\n  let { dayIndex } = props;\n  if (dayIndex === 0) {\n    dayIndex = \"SUN\";\n  }\n  if (dayIndex === 1) {\n    dayIndex = \"MON\";\n  }\n  if (dayIndex === 2) {\n    dayIndex = \"TUES\";\n  }\n  if (dayIndex === 3) {\n    dayIndex = \"WED\";\n  }\n  if (dayIndex === 4) {\n    dayIndex = \"THURS\";\n  }\n  if (dayIndex === 5) {\n    dayIndex = \"FRI\";\n  }\n  if (dayIndex === 6) {\n    dayIndex = \"SAT\";\n  }\n\n  return dayIndex;\n};\n\nexport const getUniqueArray = (props) => {\n  let { dataArray, param } = props;\n  let uniqueDataArray = [];\n  for (let i = 0; i < dataArray.length; i++) {\n    let dataArrayVar = dataArray[i];\n    let isExist = false;\n    for (let j = 0; j < uniqueDataArray.length; j++) {\n      let uniqueDataArrayVar = uniqueDataArray[j];\n      if (dataArrayVar[param] === uniqueDataArrayVar[param]) {\n        isExist = true;\n      }\n    }\n    if (isExist === false) {\n      uniqueDataArray.push(dataArrayVar);\n    }\n  }\n  return uniqueDataArray;\n};\nexport const getLocalData = (props) => {\n  let routerpropsparams = props.routerprops.match.params;\n  let urlsearchparams = new URLSearchParams(props.routerprops.location.search);\n\n  let localdata = {};\n  let d = new Date();\n\n  localdata[\"currenttimesting\"] = d.toISOString().toLowerCase();\n  localdata[\"orgname\"] = \"gouthama\";\n  localdata[\"userprofileid\"] = \"gouthama-admin\";\n  localdata[\"userid\"] = \"pradeep\";\n  localdata[\"orgname\"] = sessionStorage.getItem(\"orgname\");\n  localdata[\"userprofileid\"] = sessionStorage.getItem(\"userprofileid\");\n  localdata[\"userroleid\"] = sessionStorage.getItem(\"userroleid\");\n  localdata[\"userid\"] = sessionStorage.getItem(\"orguserid\");\n\n  localdata[\"appname\"] = routerpropsparams.appname\n    ? routerpropsparams.appname.toLowerCase()\n    : undefined;\n\n  localdata[\"maintabname\"] = routerpropsparams.maintabname\n    ? routerpropsparams.maintabname.toLowerCase()\n    : undefined;\n\n  localdata[\"sidetabname\"] = routerpropsparams.sidetabname\n    ? routerpropsparams.sidetabname.toLowerCase()\n    : undefined;\n\n  localdata[\"actionname\"] = routerpropsparams.actionname\n    ? routerpropsparams.actionname.toLowerCase()\n    : undefined;\n\n  localdata[\"urlsearchparams\"] = urlsearchparams;\n  let recordId = urlsearchparams.get(\"id\");\n  let viewname = urlsearchparams.get(\"viewname\");\n  let relatedviewname = urlsearchparams.get(\"relatedviewname\");\n  localdata[\"recordid\"] = recordId ? recordId.toLowerCase() : undefined;\n  localdata[\"viewname\"] = viewname ? viewname.toLowerCase() : undefined;\n  localdata[\"relatedviewname\"] = relatedviewname\n    ? relatedviewname.toLowerCase()\n    : undefined;\n\n  return localdata;\n};\n\n// export function GetCreateEditRecordPagelayout(params) {\n//   console.log(params);\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\"\n//       }}\n//     >\n//       <div\n//         className=\"mediumfont greybg\"\n//         style={{\n//           textAlign: \"left\",\n//           width: \"80%\",\n//           padding: \"5px 0px\"\n//         }}\n//       >\n//         Basic Information\n//       </div>\n//       <div className=\"smallfont\" style={{ textAlign: \"left\", width: \"80%\" }}>\n//         Name\n//       </div>\n//       <input\n//         className=\"largeinput\"\n//         style={{ width: \"80%\", marginBottom: \"8px\" }}\n//       />\n//       <div className=\"smallfont\" style={{ textAlign: \"left\", width: \"80%\" }}>\n//         API\n//       </div>\n//       <input\n//         className=\"largeinput\"\n//         style={{ width: \"80%\", marginBottom: \"8px\" }}\n//       />\n//     </div>\n//   );\n// }\n\n// export function SortArrayObjectbyField(params) {\n//   let dataObjectjsarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataObjectjsarray.push(params.dataObjectjs[key].fields);\n//   }\n//   function compare(a, b) {\n//     // Use toUpperCase() to ignore character casing\n//     let afieldvalue = a[params.fieldname];\n//     let bfieldvalue = b[params.fieldname];\n//     let comparison = 0;\n//     if (afieldvalue === null || afieldvalue === undefined) {\n//       comparison = -1;\n//     } else if (bfieldvalue === null || bfieldvalue === undefined) {\n//       comparison = 1;\n//     } else {\n//       const valueA = afieldvalue.toUpperCase();\n//       const valueB = bfieldvalue.toUpperCase();\n\n//       if (valueA > valueB) {\n//         comparison = 1;\n//       } else if (valueA < valueB) {\n//         comparison = -1;\n//       }\n//     }\n//     return comparison;\n//   }\n\n//   dataObjectjsarray.sort(compare);\n\n//   let dataObjectjssorted = {};\n//   for (let key in dataObjectjsarray) {\n//     let fieldsjs = {};\n//     fieldsjs.fields = dataObjectjsarray[key];\n//     dataObjectjssorted[dataObjectjsarray[key].Name] = fieldsjs;\n//   }\n//   return dataObjectjssorted;\n// }\n// export function GetTablefromObjects(params) {}\n// export function GetFirstkeyfromObject(params) {\n//   let dataarray = [];\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n//   let firstkey = \"\";\n//   if (dataarray.length > 0) {\n//     firstkey = dataarray[0].label;\n//   }\n//   return firstkey;\n// }\n// export function GetHtmlArrayfromObject(params) {\n//   // get repeatedhtml from objectarray based on label, name field value like <div>test1</div><div>test2</div> from {{name:\"test1\",label:\"test1\"},{name:\"test2\",label:\"test2\"}}\n//   let htmlarray = [];\n//   let propvalues = {};\n//   let dataarray = [];\n\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n\n//   if (params.classNamejs) {\n//     propvalues[\"className\"] = params.classNamejs;\n//   }\n\n//   if (params.stylejs) {\n//     propvalues[\"style\"] = params.stylejs;\n//   }\n\n//   for (let key in dataarray) {\n//     let dataarrayvar = dataarray[key];\n\n//     if (params.idjs) {\n//       propvalues[\"id\"] = params.idjs + dataarrayvar.name;\n//       propvalues[\"data-name\"] = dataarrayvar.name;\n//     }\n\n//     if (params.onClickjs) {\n//       let onclickfunction = e => {\n//         params.onClickjs(e.target.id);\n//       };\n//       propvalues[\"onClick\"] = onclickfunction;\n//     }\n\n//     let newelement = React.createElement(\n//       params.tagnamejs,\n//       propvalues,\n//       dataarrayvar.label\n//     );\n//     if (params.parenttagnamejs) {\n//       let parentpropvalues = {};\n//       if (params.parentclassNamejs) {\n//         parentpropvalues.className = params.parentclassNamejs;\n//       }\n//       if (params.parentstylejs) {\n//         parentpropvalues.style = params.parentstylejs;\n//       }\n\n//       let siblingsparentpropvalues = {};\n//       if (params.siblingsparentclassNamejs) {\n//         siblingsparentpropvalues.className = params.siblingsparentclassNamejs;\n//       }\n\n//       if (params.siblingsparentidjs) {\n//         siblingsparentpropvalues.id =\n//           params.siblingsparentidjs + dataarrayvar.name;\n//         siblingsparentpropvalues[\"data-name\"] = dataarrayvar.name;\n//       }\n\n//       if (params.siblingsparentonClickjs) {\n//         let onclickfunction = e => {\n//           params.siblingsparentonClickjs(e.target.id);\n//         };\n//         siblingsparentpropvalues[\"onClick\"] = onclickfunction;\n//       }\n\n//       let childhtml = [];\n//       childhtml.push(dataarrayvar.label);\n\n//       if (params.statichtmlsibiling) {\n//         childhtml.push(params.statichtmlsibiling);\n//       }\n//       let siblingsparentelement = React.createElement(\n//         params.siblingsparenttagnamejs,\n//         siblingsparentpropvalues,\n//         childhtml\n//       );\n//       newelement = React.createElement(\n//         params.parenttagnamejs,\n//         parentpropvalues,\n//         siblingsparentelement\n//       );\n//     }\n//     htmlarray.push(newelement);\n//   }\n\n//   return htmlarray;\n// }\n// export function gethtmlbasedonotherobject(params) {\n//   // get repeatedhtml from objectarray based on other object label, name field value like <div>test1</div><div>test2</div> from {{name:\"test1\",label:\"test1\"},{name:\"test2\",label:\"test2\"}}\n\n//   // params.dataObjectjs\n//   // params.datalabelObjectjs\n//   // params.datacolumnObjectjs\n//   // params.datarowObjectjs\n\n//   let dataobjectarrayhtml = [];\n//   let labelarrayhtml = [];\n//   let columnarrayhtml = [];\n//   let rowarrayhtml = [];\n//   let tablearrayhtml = [];\n\n//   let dataobjectpropvalues = {};\n//   let labelpropvalues = {};\n//   let columnpropvalues = {};\n//   let rowpropvalues = {};\n//   let tablepropvalues = {};\n//   let dataarray = [];\n\n//   for (let key in params.dataObjectjs) {\n//     dataarray.push(params.dataObjectjs[key]);\n//   }\n\n//   dataarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n\n//   let labelarray = [];\n//   for (let key in params.labeldataObjectjs) {\n//     labelarray.push(params.labeldataObjectjs[key]);\n//   }\n//   labelarray.sort(function(a, b) {\n//     return a.order - b.order;\n//   });\n\n//   if (params.classNamejs) {\n//     dataobjectpropvalues[\"className\"] = params.classNamejs;\n//   }\n\n//   if (params.stylejs) {\n//     dataobjectpropvalues[\"style\"] = params.stylejs;\n//   }\n\n//   if (params.labelclassNamejs) {\n//     labelpropvalues[\"className\"] = params.labelclassNamejs;\n//   }\n\n//   if (params.labelstylejs) {\n//     labelpropvalues[\"style\"] = params.labelstylejs;\n//   }\n\n//   if (params.columnclassNamejs) {\n//     columnpropvalues[\"className\"] = params.columnclassNamejs;\n//   }\n\n//   if (params.columnstylejs) {\n//     columnpropvalues[\"style\"] = params.columnstylejs;\n//   }\n\n//   if (params.rowclassNamejs) {\n//     rowpropvalues[\"className\"] = params.rowclassNamejs;\n//   }\n\n//   if (params.rowstylejs) {\n//     rowpropvalues[\"style\"] = params.rowstylejs;\n//   }\n\n//   if (params.tableclassNamejs) {\n//     tablepropvalues[\"className\"] = params.tableclassNamejs;\n//   }\n\n//   if (params.tablestylejs) {\n//     tablepropvalues[\"style\"] = params.tablestylejs;\n//   }\n\n//   if (params.tableidjs) {\n//     tablepropvalues[\"id\"] = params.tableidjs;\n//     tablepropvalues[\"data-name\"] = params.tableidjs;\n//   }\n//   if (params.tableonClickjs) {\n//     let onclickfunction = e => {\n//       params.tableonClickjs(e.target.id);\n//     };\n//     tablepropvalues[\"onClick\"] = onclickfunction;\n//   }\n//   rowarrayhtml = [];\n//   for (let key in dataarray) {\n//     let dataarrayvar = dataarray[key].fields;\n\n//     columnarrayhtml = [];\n\n//     if (params.rowidjs) {\n//       rowpropvalues[\"id\"] = params.rowidjs + dataarrayvar.Name;\n\n//       rowpropvalues[\"data-name\"] = dataarrayvar.Name;\n//     }\n//     if (params.rowonClickjs) {\n//       let onclickfunction = e => {\n//         params.rowonClickjs(e.target.id);\n//       };\n//       rowpropvalues[\"onClick\"] = onclickfunction;\n//     }\n\n//     if (params.columnidjs) {\n//       columnpropvalues[\"id\"] = params.columnidjs + dataarrayvar.Name;\n//       columnpropvalues[\"data-name\"] = dataarrayvar.Name;\n//     }\n//     if (params.columnonClickjs) {\n//       let onclickfunction = e => {\n//         params.columnonClickjs(e.target.id);\n//       };\n//       columnpropvalues[\"onClick\"] = onclickfunction;\n//     }\n\n//     let mainobjectfieldhtml = [];\n//     if (labelarray) {\n//       for (let labelkey in labelarray) {\n//         let labelarrayvar = labelarray[labelkey];\n\n//         if (params.idjs) {\n//           dataobjectpropvalues[\"id\"] = params.idjs + dataarrayvar.Name;\n//           dataobjectpropvalues[\"data-name\"] = dataarrayvar.Name;\n//         }\n//         if (params.onClickjs) {\n//           let onclickfunction = e => {\n//             params.onClickjs(e.target.id);\n//           };\n//           dataobjectpropvalues[\"onClick\"] = onclickfunction;\n//         }\n\n//         if (params.labelidjs) {\n//           labelpropvalues[\"id\"] = params.labelidjs + labelarrayvar.name;\n//           labelpropvalues[\"data-name\"] = labelarrayvar.name;\n//         }\n//         if (params.labelonClickjs) {\n//           let onclickfunction = e => {\n//             params.labelonClickjs(e.target.id);\n//           };\n//           labelpropvalues[\"onClick\"] = onclickfunction;\n//         }\n\n//         let labelelement = React.createElement(\n//           params.labeltagnamejs,\n//           labelpropvalues,\n//           labelarrayvar.label\n//         );\n\n//         let fieldelement = React.createElement(\n//           params.tagnamejs,\n//           dataobjectpropvalues,\n//           dataarrayvar[labelarrayvar.name]\n//         );\n//         let columnelement = [];\n//         if (params.isshowlabel) {\n//           columnelement.push(labelelement);\n//         }\n\n//         columnelement.push(fieldelement);\n\n//         columnarrayhtml.push(\n//           React.createElement(\n//             params.columntagnamejs,\n//             columnpropvalues,\n//             columnelement\n//           )\n//         );\n//       }\n//     }\n//     rowarrayhtml.push(\n//       React.createElement(params.rowtagnamejs, rowpropvalues, columnarrayhtml)\n//     );\n//   }\n//   if (params.tabletagnamejs) {\n//     tablearrayhtml.push(\n//       React.createElement(params.tabletagnamejs, tablepropvalues, rowarrayhtml)\n//     );\n//     return tablearrayhtml;\n//   }\n//   return rowarrayhtml;\n// }\n// export function GettableHtmlfromObject(params) {\n//   let thobject = params.thobjectjs;\n//   let tdobject = params.tdobjectjs;\n//   let orderby = \"name\";\n\n//   let thparams = {};\n\n//   thparams.tagnamejs = \"th\";\n//   let thonclick = () => {\n//     alert();\n//   };\n//   thparams.onClickjs = thonclick;\n//   thparams.dataObjectjs = thobject;\n//   thparams.stylejs = { fontSize: \"40px\" };\n//   thparams.idjs = \"listpage-objectsetupicon-\";\n//   thparams.classNamejs = \"bluefont  \";\n\n//   thparams.statichtmlsibiling = [];\n//   thparams.statichtmlsibiling.push(\n//     <i class=\"material-icons smallleftpadding org-cursor\">\n//       keyboard_arrow_down\n//     </i>\n//   );\n//   thparams.siblingsparentclassNamejs = \"spacebetween\";\n//   thparams.siblingsparenttagnamejs = \"span\";\n\n//   //thparams.parentclassNamejs = \"spacebetween\";\n//   thparams.parenttagnamejs = \"th\";\n//   thparams.parentstylejs = {\n//     width: \"50%\"\n//   };\n\n//   let thhtml = GetHtmlArrayfromObject(thparams);\n\n//   let throwhtml = React.createElement(\"tr\", {}, thhtml);\n//   //return thhtml;\n\n//   let tdparams = {};\n\n//   tdparams.dataObjectjs = tdobject;\n//   tdparams.tagnamejs = \"span\";\n//   let onclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.onClickjs = onclickfunction;\n//   tdparams.stylejs = { fontSize: \"30px\" };\n//   tdparams.idjs = \"listpage-objectsetupicon-\";\n//   tdparams.classNamejs = \" bluefont  \";\n\n//   tdparams.labeldataObjectjs = thobject;\n//   tdparams.labeltagnamejs = \"th\";\n//   let labelonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.labelonClickjs = labelonclickfunction;\n//   tdparams.labelstylejs = { fontSize: \"30px\" };\n//   tdparams.labelidjs = \"listpage-objectsetupicon-\";\n//   tdparams.labelclassNamejs = \" bluefont  \";\n\n//   tdparams.columntagnamejs = \"td\";\n//   let columnonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.columnonClickjs = columnonclickfunction;\n//   tdparams.columnstylejs = { fontSize: \"30px\" };\n//   tdparams.columnidjs = \"listpage-objectsetupicon-\";\n//   tdparams.columnclassNamejs = \" bluefont   \";\n\n//   tdparams.rowtagnamejs = \"tr\";\n//   let rowonclickfunction = () => {\n//     alert();\n//   };\n//   tdparams.rowonClickjs = rowonclickfunction;\n//   tdparams.rowstylejs = { fontSize: \"30px\" };\n//   tdparams.rowidjs = \"listpage-objectsetupicon-\";\n//   tdparams.rowclassNamejs = \" bluefont   \";\n\n//   tdparams.isshowlabel = false;\n\n//   let tdhtml = gethtmlbasedonotherobject(tdparams);\n\n//   //return tdhtml;\n//   let tableelement = [];\n//   tableelement.push(throwhtml);\n//   tableelement.push(tdhtml);\n//   let tablehtml = React.createElement(\n//     \"table\",\n//     { border: \"1px\", className: \"col-12 table tableclass\" },\n//     tableelement\n//   );\n//   return tablehtml;\n// }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/src/components/calender.js\";\nimport React, { Component } from \"react\";\nimport { GetLocalIcon, GetGoogleIcon } from \"./icons\"; //import { getRecorddata } from \"../db/index\";\n//import Calendernewaction from \"./calendernewaction\";\n\nimport Calenderviewaction from \"./calenderviewaction\";\nimport { getMonthStringDisplay, getMonthDigitalDisplay, getDateDigitalDisplay, getDayStringDisplay // getUniqueArray,\n} from \"../js/index\";\nimport localdbdata from \"../db/localdbdata.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.filterbydefault = props => {\n      let {\n        data\n      } = props;\n      let defaultfiltereddata = [];\n      let {\n        defaultdatafilter\n      } = this.props.compprops;\n\n      for (let i = 0; i < data.length; i++) {\n        let localdbdatavar = data[i];\n        console.log(defaultdatafilter);\n        console.log(localdbdatavar);\n\n        if (localdbdatavar.defaultdatafilter) {\n          let isequal = true;\n\n          for (let j in defaultdatafilter) {\n            if (defaultdatafilter[j] !== localdbdatavar.defaultdatafilter[j]) {\n              isequal = false;\n            }\n          }\n\n          if (isequal === true) {\n            defaultfiltereddata.push(localdbdatavar);\n          }\n        }\n      }\n\n      console.log(defaultfiltereddata);\n      return defaultfiltereddata;\n    };\n\n    this.changetoView = async viewtype => {\n      let {\n        currentdate,\n        currentmonth,\n        currentyear,\n        activedate,\n        activemonth,\n        activeyear,\n        viewStartDate,\n        viewEndDate //  viewTypeMonthRetrievalStartDate1,\n        //  viewTypeMonthRetrievalStartDate2,\n        //  viewTypeWeekRetrievalStartDate1,\n        //  viewTypeWeekRetrievalStartDate2,\n\n      } = this.state;\n\n      if (viewtype === \"today\") {\n        console.log(this.state);\n        this.reloaddata({\n          activedate: currentdate,\n          activemonth: currentmonth,\n          activeyear: currentyear,\n          viewtype: \"day\"\n        });\n      } else {\n        if (viewtype === \"left\" || viewtype === \"right\") {\n          if (this.state.viewtype === \"day\") {\n            let d;\n\n            if (viewtype === \"left\") {\n              d = new Date(activeyear + \"-\" + activemonth + \"-\" + activedate + \"T00:00:00\");\n              d.setDate(d.getDate() - 1);\n            } else if (viewtype === \"right\") {\n              d = new Date(activeyear + \"-\" + activemonth + \"-\" + activedate + \"T00:00:00\");\n              d.setDate(d.getDate() + 1);\n            }\n\n            activemonth = (d.getMonth() + 1).toString();\n\n            if (activemonth.length === 1) {\n              activemonth = \"0\" + activemonth;\n            }\n\n            activedate = d.getDate().toString();\n\n            if (activedate.length === 1) {\n              activedate = \"0\" + activedate;\n            }\n\n            activeyear = d.getFullYear();\n            this.reloaddata({\n              activedate: activedate,\n              activemonth: activemonth,\n              activeyear: activeyear,\n              viewtype: \"day\"\n            });\n          }\n\n          if (this.state.viewtype === \"week\" && viewtype === \"left\") {\n            let d = new Date(viewStartDate.getTime());\n            console.log(d);\n            let ddate = d.getDate();\n            d.setDate(ddate - 7);\n            console.log(d);\n            let d2 = new Date(viewEndDate.getTime());\n            let d2date = d2.getDate();\n            d2.setDate(d2date - 7);\n            console.log(d2);\n            this.reloaddata({\n              viewStartDate: d,\n              viewEndDate: d2,\n              viewtype: \"week\",\n              viewTypeWeekRetrievalStartDate1: d,\n              viewTypeWeekRetrievalStartDate2: d2\n            });\n          }\n\n          if (this.state.viewtype === \"week\" && viewtype === \"right\") {\n            let d = new Date(viewStartDate.getTime());\n            console.log(d);\n            let ddate = d.getDate();\n            d.setDate(ddate + 7);\n            console.log(d);\n            let d2 = new Date(viewEndDate.getTime());\n            let d2date = d2.getDate();\n            d2.setDate(d2date + 7);\n            console.log(d2);\n            this.reloaddata({\n              viewStartDate: d,\n              viewEndDate: d2,\n              viewtype: \"week\",\n              viewTypeWeekRetrievalStartDate1: d,\n              viewTypeWeekRetrievalStartDate2: d2\n            });\n          }\n\n          if (this.state.viewtype === \"month\" && viewtype === \"left\") {\n            console.log(this.state);\n            let d = new Date(viewStartDate.getTime());\n            console.log(d);\n            d.setDate(0);\n            console.log(d);\n            d.setDate(1);\n            console.log(d);\n            let d2 = new Date(viewEndDate.getTime());\n            d2.setDate(1);\n            d2.setDate(0);\n            console.log(d);\n            let d1 = new Date(d.getTime());\n            d1.setDate(0);\n            d1.setDate(1);\n            console.log(d1);\n            this.reloaddata({\n              viewStartDate: d,\n              viewEndDate: d2,\n              viewtype: \"month\",\n              viewTypeMonthRetrievalStartDate1: d,\n              viewTypeMonthRetrievalStartDate2: d1\n            });\n          }\n\n          if (this.state.viewtype === \"month\" && viewtype === \"right\") {\n            console.log(this.state);\n            let d = new Date(viewStartDate.getTime());\n            let dmonth = d.getMonth();\n            console.log(d);\n            d.setMonth(dmonth + 1);\n            console.log(d);\n            let d2 = new Date(viewEndDate.getTime());\n            let d2month = d2.getMonth();\n            console.log(d2);\n            d2.setMonth(d2month + 1);\n            console.log(d2);\n            let d1 = new Date(viewStartDate.getTime());\n            console.log(d1);\n            this.reloaddata({\n              viewStartDate: d,\n              viewEndDate: d2,\n              viewtype: \"month\",\n              viewTypeMonthRetrievalStartDate1: d1,\n              viewTypeMonthRetrievalStartDate2: d\n            });\n          }\n        } else if (viewtype === \"weekk\") {\n          let d;\n          d = new Date(currentyear + \"-\" + currentmonth + \"-\" + currentdate + \"T00:00:00\");\n          let day = d.getDay();\n          console.log(d);\n          console.log(day);\n          let viewStartDate = d.setDate(d.getDate() - day);\n          let remWeekDays = 6 - day;\n          let viewEndDate = d.setDate(d.getDate() + remWeekDays);\n          this.reloaddata({\n            viewStartDate: viewStartDate,\n            viewEndDate: viewEndDate\n          });\n        } else if (viewtype === \"month\") {\n          let d = new Date();\n          d.setDate(1);\n          console.log(d);\n          let d1 = new Date();\n          d1.setDate(0);\n          console.log(d1);\n          d1.setDate(1);\n          console.log(d1);\n          let d2 = new Date();\n          d2.setDate(1);\n          console.log(d2);\n          let d3 = new Date();\n          let d3month = d3.getMonth();\n          d3month = d3month + 1;\n          d3.setMonth(d3month);\n          d3.setDate(0);\n          console.log(d3);\n          this.reloaddata({\n            viewStartDate: d2,\n            viewEndDate: d3,\n            viewtype: viewtype,\n            viewTypeMonthRetrievalStartDate1: d1,\n            viewTypeMonthRetrievalStartDate2: d\n          });\n        } else if (viewtype === \"week\") {\n          let d2 = new Date();\n          console.log(d2);\n          let d2day = d2.getDay();\n          console.log(d2day);\n          let d2date = d2.getDate();\n          console.log(d2date);\n          d2.setDate(d2date - d2day);\n          console.log(d2);\n          let d3 = new Date();\n          console.log(d3);\n          let d3day = d3.getDay();\n          console.log(d3day);\n          let d3date = d3.getDate();\n          console.log(d3date);\n          d3.setDate(d3date + 6 - d3day);\n          console.log(d3);\n          this.reloaddata({\n            viewStartDate: d2,\n            viewEndDate: d3,\n            viewtype: viewtype,\n            viewTypeWeekRetrievalStartDate1: d2,\n            viewTypeWeekRetrievalStartDate2: d3\n          });\n        } else if (viewtype === \"day\") {\n          console.log(this.state);\n          this.reloaddata({\n            activedate: currentdate,\n            activemonth: currentmonth,\n            activeyear: currentyear,\n            viewtype: \"day\"\n          });\n        } else {\n          this.setState({\n            viewtype: viewtype\n          });\n        }\n      }\n    };\n\n    this.newMeeting = async props => {\n      let {\n        date,\n        time\n      } = props;\n      let {\n        activedate,\n        activemonth,\n        activeyear\n      } = this.state;\n\n      if (time !== undefined && date === undefined) {\n        date = activeyear + \"-\" + activemonth + \"-\" + activedate;\n      }\n\n      console.log(date);\n      console.log(time);\n      this.setState({\n        compType: \"new\",\n        defaultNewMeetingDate: date,\n        defaultNewMeetingHour: time\n      });\n    };\n\n    this.viewMeeting = async props => {\n      let {\n        eventdata\n      } = props;\n      this.setState({\n        compType: \"view\",\n        viewMeetingData: eventdata\n      });\n    };\n\n    this.onmailsent = props => {\n      let {\n        //activedate,\n        // activemonth,\n        // activeyear,\n        viewtype\n      } = this.state;\n      this.changetoView(viewtype);\n      this.setState({\n        compType: \"list\"\n      });\n    };\n\n    this.halfHourBlockClick = props => {\n      let {\n        e,\n        eventdata,\n        datetime,\n        hour\n      } = props;\n      console.log(eventdata);\n      console.log(datetime);\n      console.log(hour);\n\n      if (e && e.target) {\n        console.log(e.target.dataset.name);\n        e.stopPropagation();\n        this.viewMeeting({\n          eventdata: eventdata\n        });\n      } else {\n        let d = new Date(datetime);\n        let dmonth = d.getMonth() + 1;\n\n        if (dmonth < 10) {\n          dmonth = \"0\" + dmonth;\n        }\n\n        let ddate = d.getDate();\n\n        if (ddate < 10) {\n          ddate = \"0\" + ddate;\n        }\n\n        console.log(d.getFullYear() + \"-\" + dmonth + \"-\" + ddate);\n        console.log(hour);\n        this.newMeeting({\n          date: d.getFullYear() + \"-\" + dmonth + \"-\" + ddate,\n          time: hour\n        });\n      }\n    };\n\n    this.getHalfhourHtml = props => {\n      let {\n        firsthalfhourevent,\n        secondhalfhourevent,\n        zedIndex\n      } = props;\n      console.log(\"abcd\");\n      console.log(firsthalfhourevent);\n      console.log(secondhalfhourevent);\n      console.log(zedIndex);\n      let colorindex = 1;\n      let halfhoureventHtml = [];\n      let halfhourevent = [];\n\n      for (let j = 0; j < firsthalfhourevent.length; j++) {\n        halfhourevent.push(firsthalfhourevent[j]);\n      }\n\n      for (let j = 0; j < secondhalfhourevent.length; j++) {\n        halfhourevent.push(secondhalfhourevent[j]);\n      }\n\n      for (let j = 0; j < halfhourevent.length; j++) {\n        let startdate = new Date(halfhourevent[j].startdate);\n        let enddate = new Date(halfhourevent[j].enddate);\n        let duration = enddate.getTime() - startdate.getTime();\n        let startmin = startdate.getMinutes();\n        let startminppercentage = parseInt(startmin) * 10 / 3;\n\n        if (secondhalfhourevent.length > 0) {\n          startminppercentage = startminppercentage - 100;\n        }\n\n        startminppercentage = startminppercentage.toString() + \"%\";\n        duration = duration / 60000;\n        let durationhourppercentage = parseInt(duration) * 10 / 3;\n        durationhourppercentage = durationhourppercentage.toString() + \"%\";\n        let colortext = \"\";\n\n        if (colorindex === 1) {\n          colortext = \"#00B2A5\";\n        }\n\n        if (colorindex === 2) {\n          colortext = \"#99B2A5\";\n        }\n\n        if (colorindex === 3) {\n          colortext = \"#CCB2A5\";\n        }\n\n        let halfhoureventwidth = parseInt(100 / halfhourevent.length) + \"%\";\n        let evtDisplay = halfhourevent[j].id + \"-\" + halfhourevent[j].startdate + \"-\" + halfhourevent[j].enddate;\n        halfhoureventHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\",\n            width: halfhoureventwidth\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"1px solid black\",\n              position: \"absolute\",\n              top: startminppercentage,\n              width: \"100%\",\n              height: durationhourppercentage,\n              backgroundColor: colortext,\n              zIndex: zedIndex\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"50%\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                margin: \"auto\"\n              },\n              \"data-name\": \"event\",\n              onClick: e => this.halfHourBlockClick({\n                e: e,\n                eventdata: halfhourevent[j],\n                datetime: \"\",\n                hour: \"\"\n              }),\n              title: evtDisplay,\n              children: evtDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 11\n          }, this)\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 9\n        }, this));\n        zedIndex = zedIndex + 1;\n        colorindex = colorindex + 1;\n\n        if (colorindex === 4) {\n          colorindex = 1;\n        }\n      }\n\n      console.log(halfhoureventHtml);\n      return halfhoureventHtml;\n    };\n\n    this.getDayHtml = () => {\n      let hourrowHtml = [];\n      let maincomp = [];\n      let {\n        eventdata,\n        activedate,\n        activemonth,\n        activeyear\n      } = this.state;\n      console.log(eventdata);\n      let zedIndex = 2; //   let spacing = 0;\n      // let colorindex = 1;\n\n      for (let i = 0; i < 24; i++) {\n        //   spacing = 0;\n        //  colorindex = 1;\n        let hourContentArrayHtml = [];\n        let firsthalfhourevent = [];\n        let secondhalfhourevent = [];\n\n        for (let j = 0; j < eventdata.length; j++) {\n          let startdate = new Date(eventdata[j].startdate);\n          let activedatevar = new Date(activeyear + \"-\" + activemonth + \"-\" + activedate + \"T00:00:00\");\n          let startmin = startdate.getMinutes();\n          let starthour = startdate.getHours();\n\n          if (startdate.getDate() === activedatevar.getDate() && startdate.getMonth() === activedatevar.getMonth() && startdate.getFullYear() === activedatevar.getFullYear()) {\n            if (i === parseInt(starthour) && parseInt(startmin) < 30) {\n              firsthalfhourevent.push(eventdata[j]);\n            }\n\n            if (i === parseInt(starthour) && parseInt(startmin) >= 30) {\n              secondhalfhourevent.push(eventdata[j]);\n            }\n          }\n        }\n\n        let firsthalfhoureventHtml = [];\n\n        if (firsthalfhourevent.length > 0) {\n          firsthalfhoureventHtml = this.getHalfhourHtml({\n            firsthalfhourevent,\n            secondhalfhourevent: [],\n            zedIndex\n          });\n        }\n\n        zedIndex = firsthalfhourevent.length + 1;\n        let secondthalfhoureventHtml = []; //     colorindex = 1;\n\n        if (secondhalfhourevent.length > 0) {\n          secondthalfhoureventHtml = this.getHalfhourHtml({\n            firsthalfhourevent: [],\n            secondhalfhourevent,\n            zedIndex\n          });\n        }\n\n        hourContentArrayHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr\",\n          style: {\n            height: \"50%\"\n          },\n          children: firsthalfhoureventHtml\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 9\n        }, this));\n        hourContentArrayHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr\",\n          style: {\n            height: \"50%\"\n          },\n          children: secondthalfhoureventHtml\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 9\n        }, this));\n        hourrowHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr\",\n          style: {\n            height: \"20%\",\n            backgroundColor: \"green\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"10%\",\n              height: \"100%\"\n            },\n            onClick: () => {\n              this.newMeeting({\n                time: i\n              });\n            },\n            children: [i, \":00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"90%\",\n              borderTop: \"1px solid black\",\n              borderRight: \"1px solid black\",\n              height: \"100%\"\n            },\n            children: hourContentArrayHtml\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 11\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 9\n        }, this));\n      }\n\n      maincomp.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"70vh\",\n          border: \"1px solid black\",\n          width: \"100%\",\n          overflow: \"auto\"\n        },\n        className: \"org-fr\",\n        children: hourrowHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 7\n      }, this));\n      return maincomp;\n    };\n\n    this.getWeekHtml = () => {\n      let hourrowHtml = [];\n      let maincomp = [];\n      let {\n        viewStartDate,\n        viewEndDate,\n        eventdata\n      } = this.state;\n      console.log(eventdata);\n      let zedIndex = 2; //  let spacing = 0;\n      //  let colorindex = 1;\n\n      let dayContentArrayHtml = [];\n\n      if (viewStartDate) {\n        let startdateOfMonth = new Date(viewStartDate.getTime());\n        let enddatetime = viewEndDate.getTime();\n        hourrowHtml = [];\n\n        for (let i = 0; i < 24; i++) {\n          let hourContentArrayHtml = []; //      let firsthalfhourevent = [];\n          //     let secondhalfhourevent = [];\n\n          hourContentArrayHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"50%\",\n              textAlign: \"center\"\n            },\n            children: [i, \":00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 11\n          }, this));\n          hourrowHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-fr\",\n            style: {\n              height: \"20%\",\n              backgroundColor: \"green\",\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"100%\",\n                borderRight: \"1px solid black\",\n                height: \"100%\"\n              },\n              children: hourContentArrayHtml\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 11\n          }, this));\n        }\n\n        dayContentArrayHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"9%\",\n            height: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\",\n                visibility: \"hidden\"\n              },\n              children: \"tse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\",\n                visibility: \"hidden\"\n              },\n              children: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1109,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 11\n          }, this), hourrowHtml]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 9\n        }, this)); // for (let k = 17; k < 24; k++) {\n\n        while (startdateOfMonth.getTime() <= enddatetime) {\n          hourrowHtml = [];\n\n          for (let i = 0; i < 24; i++) {\n            //  spacing = 0;\n            //  colorindex = 1;\n            let hourContentArrayHtml = [];\n            let firsthalfhourevent = [];\n            let secondhalfhourevent = [];\n\n            for (let j = 0; j < eventdata.length; j++) {\n              let startdate = new Date(eventdata[j].startdate);\n              let startyear = startdate.getFullYear();\n              let startmonth = startdate.getMonth();\n              let startdatevalue = startdate.getDate();\n              let startmin = startdate.getMinutes();\n              let starthour = startdate.getHours();\n\n              if (startdateOfMonth.getFullYear() === startyear && startdateOfMonth.getMonth() === startmonth && startdateOfMonth.getDate() === startdatevalue && i === parseInt(starthour) && parseInt(startmin) < 30) {\n                firsthalfhourevent.push(eventdata[j]);\n              }\n\n              if (startdateOfMonth.getFullYear() === startyear && startdateOfMonth.getMonth() === startmonth && startdateOfMonth.getDate() === startdatevalue && i === parseInt(starthour) && parseInt(startmin) >= 30) {\n                secondhalfhourevent.push(eventdata[j]);\n              }\n            }\n\n            let firsthalfhoureventHtml = [];\n\n            if (firsthalfhourevent.length > 0) {\n              firsthalfhoureventHtml = this.getHalfhourHtml({\n                firsthalfhourevent,\n                secondhalfhourevent: [],\n                zedIndex\n              });\n            }\n\n            zedIndex = firsthalfhourevent.length + 1;\n            let secondthalfhoureventHtml = []; //   colorindex = 1;\n\n            if (secondhalfhourevent.length > 0) {\n              secondthalfhoureventHtml = this.getHalfhourHtml({\n                firsthalfhourevent: [],\n                secondhalfhourevent,\n                zedIndex\n              });\n            }\n\n            hourContentArrayHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"org-fr\",\n              style: {\n                height: \"50%\"\n              },\n              children: firsthalfhoureventHtml\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1172,\n              columnNumber: 13\n            }, this));\n            hourContentArrayHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"org-fr\",\n              style: {\n                height: \"50%\"\n              },\n              children: secondthalfhoureventHtml\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 13\n            }, this));\n            let hourblockdatetime = startdateOfMonth.getTime();\n            hourrowHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"org-fr\",\n              style: {\n                height: \"20%\",\n                backgroundColor: \"green\",\n                width: \"100%\"\n              },\n              \"data-name\": \"eventblank\",\n              onClick: () => {\n                this.halfHourBlockClick({\n                  e: \"\",\n                  eventdata: \"\",\n                  datetime: hourblockdatetime,\n                  hour: i\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  borderTop: \"1px solid black\",\n                  borderRight: \"1px solid black\",\n                  height: \"100%\"\n                },\n                children: hourContentArrayHtml\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 13\n            }, this));\n          }\n\n          let viewStartDateMonthDigitalDisplay = getMonthDigitalDisplay({\n            monthIndex: startdateOfMonth.getMonth()\n          });\n          let viewStartDateDayDigitalDisplay = getDateDigitalDisplay({\n            dateIndex: startdateOfMonth.getDate()\n          });\n          let dayString = getDayStringDisplay({\n            dayIndex: startdateOfMonth.getDay()\n          });\n          dayContentArrayHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"13%\",\n              height: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: dayString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1234,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: [startdateOfMonth.getFullYear(), \"-\", \" \", viewStartDateMonthDigitalDisplay, \"-\", viewStartDateDayDigitalDisplay]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1233,\n              columnNumber: 13\n            }, this), hourrowHtml]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 11\n          }, this));\n          let startdateOfMonthDate = startdateOfMonth.getDate() + 1;\n          startdateOfMonth.setDate(startdateOfMonthDate);\n        }\n\n        maincomp.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"70vh\",\n            border: \"1px solid black\",\n            width: \"100%\",\n            overflow: \"auto\"\n          },\n          className: \"org-fr\",\n          children: dayContentArrayHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 9\n        }, this));\n      }\n\n      return maincomp;\n    };\n\n    this.getMonthHtml = () => {\n      let {\n        viewStartDate,\n        eventdata\n      } = this.state;\n      let monthHtml = [];\n      let datecompHtml = [];\n\n      if (viewStartDate) {\n        let startdateOfMonth = new Date(viewStartDate.getTime());\n        let viewStartDateMonth = viewStartDate.getMonth();\n        let viewStartDateMonthDisplay = getMonthStringDisplay({\n          monthIndex: viewStartDateMonth\n        });\n        let viewStartDateMonthDigitalDisplay = getMonthDigitalDisplay({\n          monthIndex: viewStartDateMonth\n        });\n\n        for (let k = 0; k < viewStartDate.getDay(); k++) {\n          datecompHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"14.28%\",\n              height: \"130px\",\n              backgroundColor: \"grey\",\n              color: \"black\",\n              border: \"1px solid grey\",\n              display: \"inline-block\",\n              overflow: \"auto\"\n            },\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 11\n          }, this));\n        }\n\n        let todaydate = new Date();\n\n        for (let i = 0; i < 35; i++) {\n          let startday;\n          let istodaydate = false;\n\n          if (startdateOfMonth.getDate() === todaydate.getDate() && startdateOfMonth.getMonth() === todaydate.getMonth() && startdateOfMonth.getFullYear() === todaydate.getFullYear()) {\n            istodaydate = true;\n          }\n\n          startday = startdateOfMonth.getDay();\n          startday = getDayStringDisplay({\n            dayIndex: startday\n          });\n          let eventcomp = []; // update 1:03/17, if event is recurring defect fix\n\n          for (let j = 0; j < eventdata.length; j++) {\n            let startdate = new Date(eventdata[j].startdate);\n            let startdatevalue = startdate.getDate();\n            let startmonth = startdate.getMonth();\n\n            if (eventdata[j].recurrency.isrecurring === \"true\") {\n              let recurrencystartdate = new Date(eventdata[j].recurrency.startdate);\n              let recurrencyenddate = new Date(eventdata[j].recurrency.enddate);\n\n              if (todaydate.getTime() > recurrencystartdate.getTime() && todaydate.getTime() < recurrencyenddate.getTime() && startmonth === startdateOfMonth.getMonth()) {\n                eventcomp.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    backgroundColor: \"lightblue\",\n                    marginTop: \"5px\",\n                    //  whiteSpace: \"nowrap\",\n                    overflow: \"scroll\"\n                  },\n                  onClick: () => {\n                    this.viewMeeting({\n                      eventdata: eventdata[j]\n                    });\n                  },\n                  children: eventdata[j].subject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 17\n                }, this));\n              }\n            } else if (startdatevalue === startdateOfMonth.getDate() && startmonth === startdateOfMonth.getMonth()) {\n              eventcomp.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"lightblue\",\n                  marginTop: \"5px\",\n                  //  whiteSpace: \"nowrap\",\n                  overflow: \"scroll\"\n                },\n                onClick: () => {\n                  this.viewMeeting({\n                    eventdata: eventdata[j]\n                  });\n                },\n                children: eventdata[j].subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1346,\n                columnNumber: 15\n              }, this));\n            }\n          }\n\n          if (viewStartDateMonth === startdateOfMonth.getMonth()) {\n            let dataid = startdateOfMonth.getFullYear() + \"-\" + viewStartDateMonthDigitalDisplay + \"-\" + getDateDigitalDisplay({\n              dateIndex: startdateOfMonth.getDate()\n            });\n            datecompHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"14.28%\",\n                height: \"130px\",\n                backgroundColor: \"white\",\n                color: \"black\",\n                border: \"1px solid grey\",\n                display: \"inline-block\",\n                overflow: \"auto\"\n              },\n              children: [istodaydate === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\",\n                  backgroundColor: \"lightblue\"\n                },\n                children: startday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1385,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: startday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1391,\n                columnNumber: 17\n              }, this), istodaydate === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\",\n                  backgroundColor: \"lightblue\"\n                },\n                \"data-meetingdate\": dataid,\n                onClick: () => {\n                  this.newMeeting({\n                    date: dataid\n                  });\n                },\n                children: [startdateOfMonth.getFullYear(), \"-\", \" \", viewStartDateMonthDigitalDisplay, \"-\", getDateDigitalDisplay({\n                  dateIndex: startdateOfMonth.getDate()\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1395,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                \"data-meetingdate\": dataid,\n                onClick: () => {\n                  this.newMeeting({\n                    date: dataid\n                  });\n                },\n                children: [startdateOfMonth.getFullYear(), \"-\", \" \", viewStartDateMonthDigitalDisplay, \"-\", getDateDigitalDisplay({\n                  dateIndex: startdateOfMonth.getDate()\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: eventcomp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1427,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1373,\n              columnNumber: 13\n            }, this));\n          }\n\n          let startdateOfMonthDate = startdateOfMonth.getDate() + 1;\n          startdateOfMonth.setDate(startdateOfMonthDate);\n        }\n\n        monthHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr org-fjc-c\",\n          children: [viewStartDate.getFullYear(), \"-\", viewStartDateMonthDisplay]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 9\n        }, this));\n        monthHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr\",\n          children: datecompHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1439,\n          columnNumber: 22\n        }, this));\n      }\n\n      return monthHtml;\n    };\n\n    this.reloaddata = props => {\n      let {\n        orgname,\n        userprofileid,\n        userid,\n        tablename,\n        datadisplaytype,\n        evtdefaultsortparam,\n        hidesidebar,\n        hidedisplaytypepanel,\n        defaultdatafilter,\n        enablelocaldbdata\n      } = this.props.compprops;\n      let {\n        activedate,\n        activemonth,\n        activeyear,\n        viewStartDate,\n        viewEndDate,\n        viewtype,\n        viewTypeMonthRetrievalStartDate1,\n        viewTypeMonthRetrievalStartDate2,\n        viewTypeWeekRetrievalStartDate1,\n        viewTypeWeekRetrievalStartDate2\n      } = props;\n      this.getRecordListMetadataAndDatafromServer({\n        orgname: orgname,\n        userProfileId: userprofileid,\n        userId: userid,\n        tableName: tablename,\n        datasortparambeginswith: \"\",\n        datasortparamequalsto: \"\",\n        action: \"\",\n        viewtype: viewtype,\n        datadisplaytype: datadisplaytype,\n        evtdefaultsortparam: evtdefaultsortparam,\n        targetdate: activedate,\n        targetmonth: activemonth,\n        targetyear: activeyear,\n        viewStartDate: viewStartDate,\n        viewEndDate: viewEndDate,\n        viewTypeMonthRetrievalStartDate1: viewTypeMonthRetrievalStartDate1,\n        viewTypeMonthRetrievalStartDate2: viewTypeMonthRetrievalStartDate2,\n        viewTypeWeekRetrievalStartDate1: viewTypeWeekRetrievalStartDate1,\n        viewTypeWeekRetrievalStartDate2: viewTypeWeekRetrievalStartDate2,\n        hidesidebar: hidesidebar,\n        hidedisplaytypepanel: hidedisplaytypepanel,\n        defaultdatafilter: defaultdatafilter,\n        enablelocaldbdata: enablelocaldbdata\n      });\n    };\n\n    let _d = new Date();\n\n    let month = (_d.getMonth() + 1).toString();\n\n    if (month.length === 1) {\n      month = \"0\" + month;\n    }\n\n    let _date = _d.getDate().toString();\n\n    if (_date.length === 1) {\n      _date = \"0\" + _date;\n    }\n\n    let year = _d.getFullYear();\n\n    this.state = {\n      compType: \"list\",\n      viewMeetingData: \"\",\n      viewtype: \"month\",\n      currentdate: _date,\n      currentmonth: month,\n      currentyear: year,\n      activedate: _date,\n      activemonth: month,\n      activeyear: year,\n      eventdata: [],\n      viewStartDate: \"\",\n      viewEndDate: \"\",\n      viewTypeMonthRetrievalStartDate1: \"\",\n      viewTypeMonthRetrievalStartDate2: \"\",\n      viewTypeWeekRetrievalStartDate1: \"\",\n      viewTypeWeekRetrievalStartDate2: \"\",\n      defaultNewMeetingDate: \"\",\n      defaultNewMeetingHour: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props);\n    let {\n      orgname,\n      userprofileid,\n      userid,\n      tablename,\n      datadisplaytype,\n      viewname,\n      evtdefaultsortparam,\n      hidesidebar,\n      hidedisplaytypepanel,\n      defaultdatafilter,\n      enablelocaldbdata\n    } = this.props.compprops;\n    let {\n      activedate,\n      activemonth,\n      activeyear,\n      viewtype\n    } = this.state;\n\n    if (viewname === null) {\n      viewname = \"recentlyviewed\";\n    }\n\n    let viewStartDate, viewEndDate, viewTypeWeekRetrievalStartDate1, viewTypeWeekRetrievalStartDate2, viewTypeMonthRetrievalStartDate1, viewTypeMonthRetrievalStartDate2;\n\n    if (viewtype === \"week\") {\n      let d2 = new Date();\n      console.log(d2);\n      let d2day = d2.getDay();\n      console.log(d2day);\n      let d2date = d2.getDate();\n      console.log(d2date);\n      d2.setDate(d2date - d2day);\n      console.log(d2);\n      let d3 = new Date();\n      console.log(d3);\n      let d3day = d3.getDay();\n      console.log(d3day);\n      let d3date = d3.getDate();\n      console.log(d3date);\n      d3.setDate(d3date + 6 - d3day);\n      console.log(d3);\n      viewStartDate = d2;\n      viewEndDate = d3;\n      viewTypeWeekRetrievalStartDate1 = d2;\n      viewTypeWeekRetrievalStartDate2 = d3;\n    }\n\n    if (viewtype === \"month\") {\n      let d = new Date();\n      d.setDate(1);\n      console.log(d);\n      let d1 = new Date();\n      d1.setDate(0);\n      console.log(d1);\n      d1.setDate(1);\n      console.log(d1);\n      let d2 = new Date();\n      d2.setDate(1);\n      console.log(d2);\n      let d3 = new Date();\n      let d3month = d3.getMonth();\n      d3month = d3month + 1;\n      d3.setMonth(d3month);\n      d3.setDate(0);\n      console.log(d3);\n      viewStartDate = d2;\n      viewEndDate = d3;\n      viewTypeMonthRetrievalStartDate1 = d1;\n      viewTypeMonthRetrievalStartDate2 = d;\n    }\n\n    this.getRecordListMetadataAndDatafromServer({\n      orgname: orgname,\n      userProfileId: userprofileid,\n      userId: userid,\n      tableName: tablename,\n      datasortparambeginswith: \"\",\n      datasortparamequalsto: \"\",\n      action: \"\",\n      // viewName: viewname,\n      datadisplaytype: datadisplaytype,\n      evtdefaultsortparam: evtdefaultsortparam,\n      targetdate: activedate,\n      targetmonth: activemonth,\n      targetyear: activeyear,\n      viewtype: viewtype,\n      hidesidebar: hidesidebar,\n      hidedisplaytypepanel: hidedisplaytypepanel,\n      defaultdatafilter: defaultdatafilter,\n      enablelocaldbdata: enablelocaldbdata,\n      viewStartDate: viewStartDate,\n      viewEndDate: viewEndDate,\n      viewTypeWeekRetrievalStartDate1: viewTypeWeekRetrievalStartDate1,\n      viewTypeWeekRetrievalStartDate2: viewTypeWeekRetrievalStartDate2,\n      viewTypeMonthRetrievalStartDate1: viewTypeMonthRetrievalStartDate1,\n      viewTypeMonthRetrievalStartDate2: viewTypeMonthRetrievalStartDate2\n    });\n  }\n\n  async getRecordListMetadataAndDatafromServer(props) {\n    let {\n      //  orgname,\n      //   userProfileId,\n      //  userId,\n      //   tableName,\n      //  datasortparambeginswith,\n      //  datasortparamequalsto,\n      //  action,\n      viewtype,\n      //   datadisplaytype,\n      //  evtdefaultsortparam,\n      targetdate,\n      targetmonth,\n      targetyear,\n      //   istoday,\n      viewStartDate,\n      viewEndDate,\n      viewTypeMonthRetrievalStartDate1,\n      viewTypeMonthRetrievalStartDate2,\n      viewTypeWeekRetrievalStartDate1,\n      viewTypeWeekRetrievalStartDate2,\n      //   hidesidebar,\n      //    hidedisplaytypepanel,\n      //    defaultdatafilter,\n      enablelocaldbdata\n    } = props;\n    console.log(props);\n    console.log(\"localdbdata\" + localdbdata.localdbdata.data);\n\n    if (localdbdata.localdbdata.data.length > 0 && enablelocaldbdata === \"true\") {\n      let filtereddata = this.filterbydefault({\n        data: localdbdata.localdbdata.data\n      });\n\n      if (viewtype === \"day\") {\n        console.log(localdbdata.localdbdata.data);\n        this.setState({\n          eventdata: filtereddata,\n          activedate: targetdate,\n          activemonth: targetmonth,\n          activeyear: targetyear,\n          viewtype: viewtype\n        });\n      }\n\n      if (viewtype === \"month\") {\n        this.setState({\n          eventdata: filtereddata,\n          viewStartDate: viewStartDate,\n          viewStartDate2: viewStartDate,\n          viewEndDate: viewEndDate,\n          viewTypeMonthRetrievalStartDate1: viewTypeMonthRetrievalStartDate1,\n          viewTypeMonthRetrievalStartDate2: viewTypeMonthRetrievalStartDate2,\n          viewtype: viewtype\n        });\n      }\n\n      if (viewtype === \"week\") {\n        this.setState({\n          eventdata: filtereddata,\n          viewStartDate: viewStartDate,\n          viewStartDate2: viewStartDate,\n          viewEndDate: viewEndDate,\n          viewTypeWeekRetrievalStartDate1: viewTypeWeekRetrievalStartDate1,\n          viewTypeWeekRetrievalStartDate2: viewTypeWeekRetrievalStartDate2,\n          viewtype: viewtype\n        });\n      }\n    } else {// if (viewtype === \"day\") {\n      //   let month, date, year, usrsortparamToday;\n      //   date = targetdate;\n      //   month = targetmonth;\n      //   year = targetyear;\n      //   usrsortparamToday =\n      //     evtdefaultsortparam + \"-\" + userId + \"-\" + year + \"-\";\n      //   if (month !== \"\" && month !== undefined) {\n      //     usrsortparamToday = usrsortparamToday + month + \"-\";\n      //   }\n      //   if (date !== \"\" && date !== undefined) {\n      //     usrsortparamToday = usrsortparamToday + date;\n      //   }\n      //   let dataParams = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       { field: \"id\", value: usrsortparamToday, expression: \"beginswith\" },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   let dataresult = await getRecorddata(dataParams);\n      //   if (dataresult.isSuccess === \"false\") {\n      //     alert(\"data\" + dataresult.message);\n      //   } else {\n      //     console.log(dataresult.dataprops.Items);\n      //     //if (dataresult.dataprops.Items.length > 0) {\n      //     let eventdata = dataresult.dataprops.Items;\n      //     console.log(eventdata);\n      //     let filtereddata = this.filterbydefault({\n      //       data: eventdata,\n      //     });\n      //     this.setState({\n      //       eventdata: filtereddata,\n      //       activedate: date,\n      //       activemonth: month,\n      //       activeyear: year,\n      //       viewtype: viewtype,\n      //     });\n      //     // }\n      //   }\n      // } else if (viewtype === \"month\") {\n      //   let d = viewTypeMonthRetrievalStartDate1;\n      //   let d1 = viewTypeMonthRetrievalStartDate2;\n      //   let dmonth = (d.getMonth() + 1).toString();\n      //   if (dmonth.length === 1) {\n      //     dmonth = \"0\" + dmonth;\n      //   }\n      //   let ddate = d.getDate().toString();\n      //   if (ddate.length === 1) {\n      //     ddate = \"0\" + ddate;\n      //   }\n      //   let dyear = d.getFullYear();\n      //   let d1month = (d1.getMonth() + 1).toString();\n      //   if (d1month.length === 1) {\n      //     d1month = \"0\" + d1month;\n      //   }\n      //   let d1date = d1.getDate().toString();\n      //   if (d1date.length === 1) {\n      //     d1date = \"0\" + d1date;\n      //   }\n      //   let d1year = d1.getFullYear();\n      //   let usrsortparamToday1 =\n      //     evtdefaultsortparam + \"-\" + userId + \"-\" + dyear + \"-\" + dmonth + \"-\";\n      //   let usrsortparamToday2 =\n      //     evtdefaultsortparam +\n      //     \"-\" +\n      //     userId +\n      //     \"-\" +\n      //     d1year +\n      //     \"-\" +\n      //     d1month +\n      //     \"-\";\n      //   let dataParams = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       {\n      //         field: \"id\",\n      //         value: usrsortparamToday1,\n      //         expression: \"beginswith\",\n      //       },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   let dataParams1 = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       {\n      //         field: \"id\",\n      //         value: usrsortparamToday2,\n      //         expression: \"beginswith\",\n      //       },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   console.log(dataParams);\n      //   console.log(dataParams1);\n      //   let dataresult = await getRecorddata(dataParams);\n      //   if (dataresult.isSuccess === \"false\") {\n      //     alert(\"data\" + dataresult.message);\n      //   } else {\n      //     console.log(dataresult.dataprops.Items);\n      //     let eventdata = dataresult.dataprops.Items;\n      //     console.log(eventdata);\n      //     let dataresult1 = await getRecorddata(dataParams1);\n      //     if (dataresult1.isSuccess === \"false\") {\n      //       alert(\"data\" + dataresult1.message);\n      //     } else {\n      //       console.log(dataresult1.dataprops.Items);\n      //       let eventdata2 = dataresult1.dataprops.Items;\n      //       console.log(eventdata2);\n      //       let eventdata3 = [];\n      //       for (let i = 0; i < eventdata.length; i++) {\n      //         eventdata3.push(eventdata[i]);\n      //       }\n      //       for (let i = 0; i < eventdata2.length; i++) {\n      //         eventdata3.push(eventdata2[i]);\n      //       }\n      //       console.log(eventdata3);\n      //       console.log(viewStartDate);\n      //       let filtereddata = this.filterbydefault({\n      //         data: eventdata3,\n      //       });\n      //       this.setState({\n      //         eventdata: filtereddata,\n      //         viewStartDate: viewStartDate,\n      //         viewStartDate2: viewStartDate,\n      //         viewEndDate: viewEndDate,\n      //         viewTypeMonthRetrievalStartDate1: viewTypeMonthRetrievalStartDate1,\n      //         viewTypeMonthRetrievalStartDate2: viewTypeMonthRetrievalStartDate2,\n      //         viewtype: viewtype,\n      //       });\n      //     }\n      //   }\n      // } else if (viewtype === \"week\") {\n      //   let d = viewTypeWeekRetrievalStartDate1;\n      //   let d1 = viewTypeWeekRetrievalStartDate2;\n      //   let dmonth = (d.getMonth() + 1).toString();\n      //   if (dmonth.length === 1) {\n      //     dmonth = \"0\" + dmonth;\n      //   }\n      //   let ddate = d.getDate().toString();\n      //   if (ddate.length === 1) {\n      //     ddate = \"0\" + ddate;\n      //   }\n      //   let dyear = d.getFullYear();\n      //   let d1month = (d1.getMonth() + 1).toString();\n      //   if (d1month.length === 1) {\n      //     d1month = \"0\" + d1month;\n      //   }\n      //   let d1date = d1.getDate().toString();\n      //   if (d1date.length === 1) {\n      //     d1date = \"0\" + d1date;\n      //   }\n      //   let d1year = d1.getFullYear();\n      //   let usrsortparamToday1 =\n      //     evtdefaultsortparam + \"-\" + userId + \"-\" + dyear + \"-\" + dmonth + \"-\";\n      //   let usrsortparamToday2 =\n      //     evtdefaultsortparam +\n      //     \"-\" +\n      //     userId +\n      //     \"-\" +\n      //     d1year +\n      //     \"-\" +\n      //     d1month +\n      //     \"-\";\n      //   let dataParams = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       {\n      //         field: \"id\",\n      //         value: usrsortparamToday1,\n      //         expression: \"beginswith\",\n      //       },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   let dataParams1 = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       {\n      //         field: \"id\",\n      //         value: usrsortparamToday2,\n      //         expression: \"beginswith\",\n      //       },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   console.log(dataParams);\n      //   console.log(dataParams1);\n      //   let dataresult = await getRecorddata(dataParams);\n      //   if (dataresult.isSuccess === \"false\") {\n      //     alert(\"data\" + dataresult.message);\n      //   } else {\n      //     console.log(dataresult.dataprops.Items);\n      //     let eventdata = dataresult.dataprops.Items;\n      //     console.log(eventdata);\n      //     let dataresult1 = await getRecorddata(dataParams1);\n      //     if (dataresult1.isSuccess === \"false\") {\n      //       alert(\"data\" + dataresult1.message);\n      //     } else {\n      //       console.log(dataresult1.dataprops.Items);\n      //       let eventdata2 = dataresult1.dataprops.Items;\n      //       console.log(eventdata2);\n      //       let eventdata3 = [];\n      //       for (let i = 0; i < eventdata.length; i++) {\n      //         eventdata3.push(eventdata[i]);\n      //       }\n      //       for (let i = 0; i < eventdata2.length; i++) {\n      //         eventdata3.push(eventdata2[i]);\n      //       }\n      //       eventdata3 = getUniqueArray({ dataArray: eventdata3, param: \"id\" });\n      //       console.log(eventdata3);\n      //       console.log(viewStartDate);\n      //       let filtereddata = this.filterbydefault({\n      //         data: eventdata3,\n      //       });\n      //       this.setState({\n      //         eventdata: filtereddata,\n      //         viewStartDate: viewStartDate,\n      //         viewStartDate2: viewStartDate,\n      //         viewEndDate: viewEndDate,\n      //         viewTypeWeekRetrievalStartDate1: viewTypeWeekRetrievalStartDate1,\n      //         viewTypeWeekRetrievalStartDate2: viewTypeWeekRetrievalStartDate2,\n      //         viewtype: viewtype,\n      //       });\n      //     }\n      //   }\n      // }\n    }\n  }\n\n  render() {\n    let {\n      // currentdate,\n      // currentmonth,\n      // currentyear,\n      activedate,\n      activemonth,\n      activeyear,\n      viewtype,\n      // eventdata,\n      compType,\n      defaultNewMeetingDate,\n      defaultNewMeetingHour,\n      viewMeetingData\n    } = this.state;\n    let {\n      hidesidebar,\n      hidedisplaytypepanel\n    } = this.props.compprops;\n    console.log(this.state);\n    let calenderFormat = [];\n    calenderFormat.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GetLocalIcon, {\n        name: \"left\",\n        onClick: () => {\n          this.changetoView(\"left\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GetLocalIcon, {\n        name: \"right\",\n        onClick: () => {\n          this.changetoView(\"right\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.changetoView(\"day\");\n        },\n        children: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.changetoView(\"week\");\n        },\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.changetoView(\"month\");\n        },\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1544,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.changetoView(\"today\");\n        },\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1573,\n        columnNumber: 9\n      }, this), viewtype === \"day\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [activeyear, \"-\", activemonth, \"-\", activedate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1581,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1516,\n      columnNumber: 7\n    }, this));\n    let sidebar = [];\n    sidebar.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.newMeeting,\n          children: \"New Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1594,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-fai-c\",\n        children: [\"My Calenders \", /*#__PURE__*/_jsxDEV(GetGoogleIcon, {\n          name: \"expand_more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1597,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-fai-c\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1600,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Birthdays\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1600,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-fai-c\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1603,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1603,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-fai-c\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Training\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1605,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-fai-c\",\n        children: [\"Other Calenders \", /*#__PURE__*/_jsxDEV(GetGoogleIcon, {\n          name: \"expand_more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1609,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"org-datainput\",\n            elementtype: \"searchinput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1611,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1610,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1608,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-fai-c\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1615,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Kishan Rao\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1615,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1614,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-fai-c\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1618,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Yamini\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1618,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-fai-c\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Nagalatha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1592,\n      columnNumber: 7\n    }, this));\n    let maincomp = []; //  let hourrowHtml = [];\n\n    if (hidedisplaytypepanel === \"false\") {\n      maincomp.push(calenderFormat);\n    }\n\n    if (viewtype === \"day\") {\n      maincomp.push(this.getDayHtml());\n    }\n\n    if (viewtype === \"week\") {\n      let dayformathtml = [];\n      dayformathtml.push(this.getWeekHtml());\n      maincomp.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"70vh\",\n          border: \"1px solid black\",\n          width: \"100%\",\n          overflow: \"auto\"\n        },\n        className: \"org-fr\",\n        children: dayformathtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1640,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (viewtype === \"month\") {\n      maincomp.push(this.getMonthHtml());\n    }\n\n    if (viewtype === \"monthh\") {\n      let weekcomp = [];\n\n      for (let i = 0; i < 7; i++) {\n        let datecomp = [];\n        datecomp.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: \"160px\",\n              height: \"130px\",\n              backgroundColor: \"white\",\n              color: \"black\",\n              border: \"1px solid grey\",\n              display: \"inline-block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \" Mon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1672,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"1/12/2018\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1673,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"lightblue\",\n                  marginTop: \"5px\"\n                },\n                children: \"Pradeep Birthday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1675,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"lightblue\",\n                  marginTop: \"5px\"\n                },\n                children: \"Nagalatha Birthday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1678,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"lightblue\",\n                  marginTop: \"5px\"\n                },\n                children: \"Salesforce Training\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1681,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1674,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1662,\n            columnNumber: 13\n          }, this)\n        }, void 0, false));\n        weekcomp.push(datecomp);\n      }\n\n      let monthcomp = [];\n\n      for (let i = 0; i < 4; i++) {\n        monthcomp.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: weekcomp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1693,\n          columnNumber: 24\n        }, this));\n      }\n\n      maincomp.push(monthcomp);\n    }\n\n    let newHtml = []; // newHtml.push(\n    //   <Calendernewaction\n    //     {...this.props}\n    //     onmailsent={this.onmailsent}\n    //     defaultNewMeetingDate={defaultNewMeetingDate}\n    //     defaultNewMeetingHour={defaultNewMeetingHour}\n    //     viewType=\"new\"\n    //   />\n    // );\n\n    let viewHtml = [];\n    viewHtml.push( /*#__PURE__*/_jsxDEV(Calenderviewaction, { ...this.props,\n      onmailsent: this.onmailsent,\n      defaultNewMeetingDate: defaultNewMeetingDate,\n      defaultNewMeetingHour: defaultNewMeetingHour,\n      viewType: \"view\",\n      viewMeetingData: viewMeetingData\n    }, \"calenderviewaction\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 1711,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [compType === \"list\" && hidesidebar === \"false\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-flexbasis-100p\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"org-flexbasis-100p org-mflexbasis-20p org-lflexbasis-20p sp\",\n          children: sidebar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1726,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-flexbasis-100p org-mflexbasis-80p org-lflexbasis-80p sp \",\n          children: maincomp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1729,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 11\n      }, this) : [], compType === \"list\" && hidesidebar === \"true\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr org-flexbasis-100p \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-flexbasis-100p org-mflexbasis-100p org-lflexbasis-100p sp \",\n          children: maincomp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1738,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1737,\n        columnNumber: 11\n      }, this) : []]\n    }, void 0, true);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorssite/src/components/calender.js"],"names":["React","Component","GetLocalIcon","GetGoogleIcon","Calenderviewaction","getMonthStringDisplay","getMonthDigitalDisplay","getDateDigitalDisplay","getDayStringDisplay","localdbdata","F","constructor","props","filterbydefault","data","defaultfiltereddata","defaultdatafilter","compprops","i","length","localdbdatavar","console","log","isequal","j","push","changetoView","viewtype","currentdate","currentmonth","currentyear","activedate","activemonth","activeyear","viewStartDate","viewEndDate","state","reloaddata","d","Date","setDate","getDate","getMonth","toString","getFullYear","getTime","ddate","d2","d2date","viewTypeWeekRetrievalStartDate1","viewTypeWeekRetrievalStartDate2","d1","viewTypeMonthRetrievalStartDate1","viewTypeMonthRetrievalStartDate2","dmonth","setMonth","d2month","day","getDay","remWeekDays","d3","d3month","d2day","d3day","d3date","setState","newMeeting","date","time","undefined","compType","defaultNewMeetingDate","defaultNewMeetingHour","viewMeeting","eventdata","viewMeetingData","onmailsent","halfHourBlockClick","e","datetime","hour","target","dataset","name","stopPropagation","getHalfhourHtml","firsthalfhourevent","secondhalfhourevent","zedIndex","colorindex","halfhoureventHtml","halfhourevent","startdate","enddate","duration","startmin","getMinutes","startminppercentage","parseInt","durationhourppercentage","colortext","halfhoureventwidth","evtDisplay","id","position","width","border","top","height","backgroundColor","zIndex","overflow","whiteSpace","margin","getDayHtml","hourrowHtml","maincomp","hourContentArrayHtml","activedatevar","starthour","getHours","firsthalfhoureventHtml","secondthalfhoureventHtml","borderTop","borderRight","getWeekHtml","dayContentArrayHtml","startdateOfMonth","enddatetime","textAlign","visibility","startyear","startmonth","startdatevalue","hourblockdatetime","viewStartDateMonthDigitalDisplay","monthIndex","viewStartDateDayDigitalDisplay","dateIndex","dayString","dayIndex","startdateOfMonthDate","getMonthHtml","monthHtml","datecompHtml","viewStartDateMonth","viewStartDateMonthDisplay","k","color","display","todaydate","startday","istodaydate","eventcomp","recurrency","isrecurring","recurrencystartdate","recurrencyenddate","marginTop","subject","dataid","orgname","userprofileid","userid","tablename","datadisplaytype","evtdefaultsortparam","hidesidebar","hidedisplaytypepanel","enablelocaldbdata","getRecordListMetadataAndDatafromServer","userProfileId","userId","tableName","datasortparambeginswith","datasortparamequalsto","action","targetdate","targetmonth","targetyear","month","year","componentDidMount","viewname","filtereddata","viewStartDate2","render","calenderFormat","sidebar","dayformathtml","weekcomp","datecomp","monthcomp","newHtml","viewHtml"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GetLocalIcon, GetGoogleIcon } from \"./icons\";\n//import { getRecorddata } from \"../db/index\";\n//import Calendernewaction from \"./calendernewaction\";\nimport Calenderviewaction from \"./calenderviewaction\";\nimport {\n  getMonthStringDisplay,\n  getMonthDigitalDisplay,\n  getDateDigitalDisplay,\n  getDayStringDisplay,\n  // getUniqueArray,\n} from \"../js/index\";\nimport localdbdata from \"../db/localdbdata.json\";\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    let d = new Date();\n    let month = (d.getMonth() + 1).toString();\n    if (month.length === 1) {\n      month = \"0\" + month;\n    }\n    let date = d.getDate().toString();\n    if (date.length === 1) {\n      date = \"0\" + date;\n    }\n\n    let year = d.getFullYear();\n\n    this.state = {\n      compType: \"list\",\n      viewMeetingData: \"\",\n      viewtype: \"month\",\n      currentdate: date,\n      currentmonth: month,\n      currentyear: year,\n      activedate: date,\n      activemonth: month,\n      activeyear: year,\n      eventdata: [],\n      viewStartDate: \"\",\n      viewEndDate: \"\",\n      viewTypeMonthRetrievalStartDate1: \"\",\n      viewTypeMonthRetrievalStartDate2: \"\",\n      viewTypeWeekRetrievalStartDate1: \"\",\n      viewTypeWeekRetrievalStartDate2: \"\",\n      defaultNewMeetingDate: \"\",\n      defaultNewMeetingHour: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props);\n    let {\n      orgname,\n      userprofileid,\n      userid,\n      tablename,\n      datadisplaytype,\n      viewname,\n      evtdefaultsortparam,\n      hidesidebar,\n      hidedisplaytypepanel,\n      defaultdatafilter,\n      enablelocaldbdata,\n    } = this.props.compprops;\n\n    let { activedate, activemonth, activeyear, viewtype } = this.state;\n    if (viewname === null) {\n      viewname = \"recentlyviewed\";\n    }\n\n    let viewStartDate,\n      viewEndDate,\n      viewTypeWeekRetrievalStartDate1,\n      viewTypeWeekRetrievalStartDate2,\n      viewTypeMonthRetrievalStartDate1,\n      viewTypeMonthRetrievalStartDate2;\n\n    if (viewtype === \"week\") {\n      let d2 = new Date();\n      console.log(d2);\n      let d2day = d2.getDay();\n      console.log(d2day);\n      let d2date = d2.getDate();\n      console.log(d2date);\n      d2.setDate(d2date - d2day);\n      console.log(d2);\n\n      let d3 = new Date();\n      console.log(d3);\n      let d3day = d3.getDay();\n      console.log(d3day);\n      let d3date = d3.getDate();\n      console.log(d3date);\n      d3.setDate(d3date + 6 - d3day);\n      console.log(d3);\n\n      viewStartDate = d2;\n      viewEndDate = d3;\n      viewTypeWeekRetrievalStartDate1 = d2;\n      viewTypeWeekRetrievalStartDate2 = d3;\n    }\n\n    if (viewtype === \"month\") {\n      let d = new Date();\n      d.setDate(1);\n      console.log(d);\n\n      let d1 = new Date();\n      d1.setDate(0);\n      console.log(d1);\n      d1.setDate(1);\n      console.log(d1);\n\n      let d2 = new Date();\n      d2.setDate(1);\n      console.log(d2);\n\n      let d3 = new Date();\n      let d3month = d3.getMonth();\n      d3month = d3month + 1;\n      d3.setMonth(d3month);\n      d3.setDate(0);\n      console.log(d3);\n\n      viewStartDate = d2;\n      viewEndDate = d3;\n      viewTypeMonthRetrievalStartDate1 = d1;\n      viewTypeMonthRetrievalStartDate2 = d;\n    }\n    this.getRecordListMetadataAndDatafromServer({\n      orgname: orgname,\n      userProfileId: userprofileid,\n      userId: userid,\n      tableName: tablename,\n      datasortparambeginswith: \"\",\n      datasortparamequalsto: \"\",\n      action: \"\",\n      // viewName: viewname,\n      datadisplaytype: datadisplaytype,\n      evtdefaultsortparam: evtdefaultsortparam,\n      targetdate: activedate,\n      targetmonth: activemonth,\n      targetyear: activeyear,\n      viewtype: viewtype,\n      hidesidebar: hidesidebar,\n      hidedisplaytypepanel: hidedisplaytypepanel,\n      defaultdatafilter: defaultdatafilter,\n      enablelocaldbdata: enablelocaldbdata,\n      viewStartDate: viewStartDate,\n      viewEndDate: viewEndDate,\n      viewTypeWeekRetrievalStartDate1: viewTypeWeekRetrievalStartDate1,\n      viewTypeWeekRetrievalStartDate2: viewTypeWeekRetrievalStartDate2,\n      viewTypeMonthRetrievalStartDate1: viewTypeMonthRetrievalStartDate1,\n      viewTypeMonthRetrievalStartDate2: viewTypeMonthRetrievalStartDate2,\n    });\n  }\n\n  filterbydefault = (props) => {\n    let { data } = props;\n    let defaultfiltereddata = [];\n    let { defaultdatafilter } = this.props.compprops;\n    for (let i = 0; i < data.length; i++) {\n      let localdbdatavar = data[i];\n      console.log(defaultdatafilter);\n      console.log(localdbdatavar);\n      if (localdbdatavar.defaultdatafilter) {\n        let isequal = true;\n        for (let j in defaultdatafilter) {\n          if (defaultdatafilter[j] !== localdbdatavar.defaultdatafilter[j]) {\n            isequal = false;\n          }\n        }\n        if (isequal === true) {\n          defaultfiltereddata.push(localdbdatavar);\n        }\n      }\n    }\n    console.log(defaultfiltereddata);\n    return defaultfiltereddata;\n  };\n\n  async getRecordListMetadataAndDatafromServer(props) {\n    let {\n      //  orgname,\n      //   userProfileId,\n      //  userId,\n      //   tableName,\n      //  datasortparambeginswith,\n      //  datasortparamequalsto,\n      //  action,\n      viewtype,\n      //   datadisplaytype,\n      //  evtdefaultsortparam,\n      targetdate,\n      targetmonth,\n      targetyear,\n      //   istoday,\n      viewStartDate,\n      viewEndDate,\n      viewTypeMonthRetrievalStartDate1,\n      viewTypeMonthRetrievalStartDate2,\n      viewTypeWeekRetrievalStartDate1,\n      viewTypeWeekRetrievalStartDate2,\n      //   hidesidebar,\n      //    hidedisplaytypepanel,\n      //    defaultdatafilter,\n      enablelocaldbdata,\n    } = props;\n    console.log(props);\n\n    console.log(\"localdbdata\" + localdbdata.localdbdata.data);\n    if (\n      localdbdata.localdbdata.data.length > 0 &&\n      enablelocaldbdata === \"true\"\n    ) {\n      let filtereddata = this.filterbydefault({\n        data: localdbdata.localdbdata.data,\n      });\n\n      if (viewtype === \"day\") {\n        console.log(localdbdata.localdbdata.data);\n        this.setState({\n          eventdata: filtereddata,\n          activedate: targetdate,\n          activemonth: targetmonth,\n          activeyear: targetyear,\n          viewtype: viewtype,\n        });\n      }\n      if (viewtype === \"month\") {\n        this.setState({\n          eventdata: filtereddata,\n          viewStartDate: viewStartDate,\n          viewStartDate2: viewStartDate,\n          viewEndDate: viewEndDate,\n          viewTypeMonthRetrievalStartDate1: viewTypeMonthRetrievalStartDate1,\n          viewTypeMonthRetrievalStartDate2: viewTypeMonthRetrievalStartDate2,\n          viewtype: viewtype,\n        });\n      }\n      if (viewtype === \"week\") {\n        this.setState({\n          eventdata: filtereddata,\n          viewStartDate: viewStartDate,\n          viewStartDate2: viewStartDate,\n          viewEndDate: viewEndDate,\n          viewTypeWeekRetrievalStartDate1: viewTypeWeekRetrievalStartDate1,\n          viewTypeWeekRetrievalStartDate2: viewTypeWeekRetrievalStartDate2,\n          viewtype: viewtype,\n        });\n      }\n    } else {\n      // if (viewtype === \"day\") {\n      //   let month, date, year, usrsortparamToday;\n      //   date = targetdate;\n      //   month = targetmonth;\n      //   year = targetyear;\n      //   usrsortparamToday =\n      //     evtdefaultsortparam + \"-\" + userId + \"-\" + year + \"-\";\n      //   if (month !== \"\" && month !== undefined) {\n      //     usrsortparamToday = usrsortparamToday + month + \"-\";\n      //   }\n      //   if (date !== \"\" && date !== undefined) {\n      //     usrsortparamToday = usrsortparamToday + date;\n      //   }\n      //   let dataParams = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       { field: \"id\", value: usrsortparamToday, expression: \"beginswith\" },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   let dataresult = await getRecorddata(dataParams);\n      //   if (dataresult.isSuccess === \"false\") {\n      //     alert(\"data\" + dataresult.message);\n      //   } else {\n      //     console.log(dataresult.dataprops.Items);\n      //     //if (dataresult.dataprops.Items.length > 0) {\n      //     let eventdata = dataresult.dataprops.Items;\n      //     console.log(eventdata);\n      //     let filtereddata = this.filterbydefault({\n      //       data: eventdata,\n      //     });\n      //     this.setState({\n      //       eventdata: filtereddata,\n      //       activedate: date,\n      //       activemonth: month,\n      //       activeyear: year,\n      //       viewtype: viewtype,\n      //     });\n      //     // }\n      //   }\n      // } else if (viewtype === \"month\") {\n      //   let d = viewTypeMonthRetrievalStartDate1;\n      //   let d1 = viewTypeMonthRetrievalStartDate2;\n      //   let dmonth = (d.getMonth() + 1).toString();\n      //   if (dmonth.length === 1) {\n      //     dmonth = \"0\" + dmonth;\n      //   }\n      //   let ddate = d.getDate().toString();\n      //   if (ddate.length === 1) {\n      //     ddate = \"0\" + ddate;\n      //   }\n      //   let dyear = d.getFullYear();\n      //   let d1month = (d1.getMonth() + 1).toString();\n      //   if (d1month.length === 1) {\n      //     d1month = \"0\" + d1month;\n      //   }\n      //   let d1date = d1.getDate().toString();\n      //   if (d1date.length === 1) {\n      //     d1date = \"0\" + d1date;\n      //   }\n      //   let d1year = d1.getFullYear();\n      //   let usrsortparamToday1 =\n      //     evtdefaultsortparam + \"-\" + userId + \"-\" + dyear + \"-\" + dmonth + \"-\";\n      //   let usrsortparamToday2 =\n      //     evtdefaultsortparam +\n      //     \"-\" +\n      //     userId +\n      //     \"-\" +\n      //     d1year +\n      //     \"-\" +\n      //     d1month +\n      //     \"-\";\n      //   let dataParams = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       {\n      //         field: \"id\",\n      //         value: usrsortparamToday1,\n      //         expression: \"beginswith\",\n      //       },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   let dataParams1 = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       {\n      //         field: \"id\",\n      //         value: usrsortparamToday2,\n      //         expression: \"beginswith\",\n      //       },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   console.log(dataParams);\n      //   console.log(dataParams1);\n      //   let dataresult = await getRecorddata(dataParams);\n      //   if (dataresult.isSuccess === \"false\") {\n      //     alert(\"data\" + dataresult.message);\n      //   } else {\n      //     console.log(dataresult.dataprops.Items);\n      //     let eventdata = dataresult.dataprops.Items;\n      //     console.log(eventdata);\n      //     let dataresult1 = await getRecorddata(dataParams1);\n      //     if (dataresult1.isSuccess === \"false\") {\n      //       alert(\"data\" + dataresult1.message);\n      //     } else {\n      //       console.log(dataresult1.dataprops.Items);\n      //       let eventdata2 = dataresult1.dataprops.Items;\n      //       console.log(eventdata2);\n      //       let eventdata3 = [];\n      //       for (let i = 0; i < eventdata.length; i++) {\n      //         eventdata3.push(eventdata[i]);\n      //       }\n      //       for (let i = 0; i < eventdata2.length; i++) {\n      //         eventdata3.push(eventdata2[i]);\n      //       }\n      //       console.log(eventdata3);\n      //       console.log(viewStartDate);\n      //       let filtereddata = this.filterbydefault({\n      //         data: eventdata3,\n      //       });\n      //       this.setState({\n      //         eventdata: filtereddata,\n      //         viewStartDate: viewStartDate,\n      //         viewStartDate2: viewStartDate,\n      //         viewEndDate: viewEndDate,\n      //         viewTypeMonthRetrievalStartDate1: viewTypeMonthRetrievalStartDate1,\n      //         viewTypeMonthRetrievalStartDate2: viewTypeMonthRetrievalStartDate2,\n      //         viewtype: viewtype,\n      //       });\n      //     }\n      //   }\n      // } else if (viewtype === \"week\") {\n      //   let d = viewTypeWeekRetrievalStartDate1;\n      //   let d1 = viewTypeWeekRetrievalStartDate2;\n      //   let dmonth = (d.getMonth() + 1).toString();\n      //   if (dmonth.length === 1) {\n      //     dmonth = \"0\" + dmonth;\n      //   }\n      //   let ddate = d.getDate().toString();\n      //   if (ddate.length === 1) {\n      //     ddate = \"0\" + ddate;\n      //   }\n      //   let dyear = d.getFullYear();\n      //   let d1month = (d1.getMonth() + 1).toString();\n      //   if (d1month.length === 1) {\n      //     d1month = \"0\" + d1month;\n      //   }\n      //   let d1date = d1.getDate().toString();\n      //   if (d1date.length === 1) {\n      //     d1date = \"0\" + d1date;\n      //   }\n      //   let d1year = d1.getFullYear();\n      //   let usrsortparamToday1 =\n      //     evtdefaultsortparam + \"-\" + userId + \"-\" + dyear + \"-\" + dmonth + \"-\";\n      //   let usrsortparamToday2 =\n      //     evtdefaultsortparam +\n      //     \"-\" +\n      //     userId +\n      //     \"-\" +\n      //     d1year +\n      //     \"-\" +\n      //     d1month +\n      //     \"-\";\n      //   let dataParams = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       {\n      //         field: \"id\",\n      //         value: usrsortparamToday1,\n      //         expression: \"beginswith\",\n      //       },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   let dataParams1 = {\n      //     objectName: tableName,\n      //     objectData: {},\n      //     keyConditions: [\n      //       {\n      //         field: \"orgname\",\n      //         value: orgname,\n      //         expression: \"=\",\n      //       },\n      //       {\n      //         field: \"id\",\n      //         value: usrsortparamToday2,\n      //         expression: \"beginswith\",\n      //       },\n      //     ],\n      //     filterConditions: [],\n      //     pageSize: \"\",\n      //     limit: \"\",\n      //     exclusiveStartKey: \"\",\n      //   };\n      //   console.log(dataParams);\n      //   console.log(dataParams1);\n      //   let dataresult = await getRecorddata(dataParams);\n      //   if (dataresult.isSuccess === \"false\") {\n      //     alert(\"data\" + dataresult.message);\n      //   } else {\n      //     console.log(dataresult.dataprops.Items);\n      //     let eventdata = dataresult.dataprops.Items;\n      //     console.log(eventdata);\n      //     let dataresult1 = await getRecorddata(dataParams1);\n      //     if (dataresult1.isSuccess === \"false\") {\n      //       alert(\"data\" + dataresult1.message);\n      //     } else {\n      //       console.log(dataresult1.dataprops.Items);\n      //       let eventdata2 = dataresult1.dataprops.Items;\n      //       console.log(eventdata2);\n      //       let eventdata3 = [];\n      //       for (let i = 0; i < eventdata.length; i++) {\n      //         eventdata3.push(eventdata[i]);\n      //       }\n      //       for (let i = 0; i < eventdata2.length; i++) {\n      //         eventdata3.push(eventdata2[i]);\n      //       }\n      //       eventdata3 = getUniqueArray({ dataArray: eventdata3, param: \"id\" });\n      //       console.log(eventdata3);\n      //       console.log(viewStartDate);\n      //       let filtereddata = this.filterbydefault({\n      //         data: eventdata3,\n      //       });\n      //       this.setState({\n      //         eventdata: filtereddata,\n      //         viewStartDate: viewStartDate,\n      //         viewStartDate2: viewStartDate,\n      //         viewEndDate: viewEndDate,\n      //         viewTypeWeekRetrievalStartDate1: viewTypeWeekRetrievalStartDate1,\n      //         viewTypeWeekRetrievalStartDate2: viewTypeWeekRetrievalStartDate2,\n      //         viewtype: viewtype,\n      //       });\n      //     }\n      //   }\n      // }\n    }\n  }\n  changetoView = async (viewtype) => {\n    let {\n      currentdate,\n      currentmonth,\n      currentyear,\n      activedate,\n      activemonth,\n      activeyear,\n      viewStartDate,\n      viewEndDate,\n      //  viewTypeMonthRetrievalStartDate1,\n      //  viewTypeMonthRetrievalStartDate2,\n      //  viewTypeWeekRetrievalStartDate1,\n      //  viewTypeWeekRetrievalStartDate2,\n    } = this.state;\n\n    if (viewtype === \"today\") {\n      console.log(this.state);\n      this.reloaddata({\n        activedate: currentdate,\n        activemonth: currentmonth,\n        activeyear: currentyear,\n        viewtype: \"day\",\n      });\n    } else {\n      if (viewtype === \"left\" || viewtype === \"right\") {\n        if (this.state.viewtype === \"day\") {\n          let d;\n          if (viewtype === \"left\") {\n            d = new Date(\n              activeyear + \"-\" + activemonth + \"-\" + activedate + \"T00:00:00\"\n            );\n            d.setDate(d.getDate() - 1);\n          } else if (viewtype === \"right\") {\n            d = new Date(\n              activeyear + \"-\" + activemonth + \"-\" + activedate + \"T00:00:00\"\n            );\n            d.setDate(d.getDate() + 1);\n          }\n          activemonth = (d.getMonth() + 1).toString();\n          if (activemonth.length === 1) {\n            activemonth = \"0\" + activemonth;\n          }\n          activedate = d.getDate().toString();\n          if (activedate.length === 1) {\n            activedate = \"0\" + activedate;\n          }\n\n          activeyear = d.getFullYear();\n\n          this.reloaddata({\n            activedate: activedate,\n            activemonth: activemonth,\n            activeyear: activeyear,\n            viewtype: \"day\",\n          });\n        }\n        if (this.state.viewtype === \"week\" && viewtype === \"left\") {\n          let d = new Date(viewStartDate.getTime());\n          console.log(d);\n          let ddate = d.getDate();\n          d.setDate(ddate - 7);\n          console.log(d);\n\n          let d2 = new Date(viewEndDate.getTime());\n          let d2date = d2.getDate();\n          d2.setDate(d2date - 7);\n          console.log(d2);\n\n          this.reloaddata({\n            viewStartDate: d,\n            viewEndDate: d2,\n            viewtype: \"week\",\n            viewTypeWeekRetrievalStartDate1: d,\n            viewTypeWeekRetrievalStartDate2: d2,\n          });\n        }\n        if (this.state.viewtype === \"week\" && viewtype === \"right\") {\n          let d = new Date(viewStartDate.getTime());\n          console.log(d);\n          let ddate = d.getDate();\n          d.setDate(ddate + 7);\n          console.log(d);\n\n          let d2 = new Date(viewEndDate.getTime());\n          let d2date = d2.getDate();\n          d2.setDate(d2date + 7);\n          console.log(d2);\n\n          this.reloaddata({\n            viewStartDate: d,\n            viewEndDate: d2,\n            viewtype: \"week\",\n            viewTypeWeekRetrievalStartDate1: d,\n            viewTypeWeekRetrievalStartDate2: d2,\n          });\n        }\n        if (this.state.viewtype === \"month\" && viewtype === \"left\") {\n          console.log(this.state);\n          let d = new Date(viewStartDate.getTime());\n          console.log(d);\n          d.setDate(0);\n          console.log(d);\n          d.setDate(1);\n          console.log(d);\n\n          let d2 = new Date(viewEndDate.getTime());\n          d2.setDate(1);\n          d2.setDate(0);\n          console.log(d);\n\n          let d1 = new Date(d.getTime());\n          d1.setDate(0);\n          d1.setDate(1);\n          console.log(d1);\n\n          this.reloaddata({\n            viewStartDate: d,\n            viewEndDate: d2,\n            viewtype: \"month\",\n            viewTypeMonthRetrievalStartDate1: d,\n            viewTypeMonthRetrievalStartDate2: d1,\n          });\n        }\n        if (this.state.viewtype === \"month\" && viewtype === \"right\") {\n          console.log(this.state);\n          let d = new Date(viewStartDate.getTime());\n          let dmonth = d.getMonth();\n          console.log(d);\n          d.setMonth(dmonth + 1);\n          console.log(d);\n\n          let d2 = new Date(viewEndDate.getTime());\n          let d2month = d2.getMonth();\n          console.log(d2);\n          d2.setMonth(d2month + 1);\n          console.log(d2);\n\n          let d1 = new Date(viewStartDate.getTime());\n\n          console.log(d1);\n\n          this.reloaddata({\n            viewStartDate: d,\n            viewEndDate: d2,\n            viewtype: \"month\",\n            viewTypeMonthRetrievalStartDate1: d1,\n            viewTypeMonthRetrievalStartDate2: d,\n          });\n        }\n      } else if (viewtype === \"weekk\") {\n        let d;\n        d = new Date(\n          currentyear + \"-\" + currentmonth + \"-\" + currentdate + \"T00:00:00\"\n        );\n        let day = d.getDay();\n        console.log(d);\n        console.log(day);\n        let viewStartDate = d.setDate(d.getDate() - day);\n        let remWeekDays = 6 - day;\n        let viewEndDate = d.setDate(d.getDate() + remWeekDays);\n\n        this.reloaddata({\n          viewStartDate: viewStartDate,\n          viewEndDate: viewEndDate,\n        });\n      } else if (viewtype === \"month\") {\n        let d = new Date();\n        d.setDate(1);\n        console.log(d);\n\n        let d1 = new Date();\n        d1.setDate(0);\n        console.log(d1);\n        d1.setDate(1);\n        console.log(d1);\n\n        let d2 = new Date();\n        d2.setDate(1);\n        console.log(d2);\n\n        let d3 = new Date();\n        let d3month = d3.getMonth();\n        d3month = d3month + 1;\n        d3.setMonth(d3month);\n        d3.setDate(0);\n        console.log(d3);\n\n        this.reloaddata({\n          viewStartDate: d2,\n          viewEndDate: d3,\n          viewtype: viewtype,\n          viewTypeMonthRetrievalStartDate1: d1,\n          viewTypeMonthRetrievalStartDate2: d,\n        });\n      } else if (viewtype === \"week\") {\n        let d2 = new Date();\n        console.log(d2);\n        let d2day = d2.getDay();\n        console.log(d2day);\n        let d2date = d2.getDate();\n        console.log(d2date);\n        d2.setDate(d2date - d2day);\n        console.log(d2);\n\n        let d3 = new Date();\n        console.log(d3);\n        let d3day = d3.getDay();\n        console.log(d3day);\n        let d3date = d3.getDate();\n        console.log(d3date);\n        d3.setDate(d3date + 6 - d3day);\n        console.log(d3);\n\n        this.reloaddata({\n          viewStartDate: d2,\n          viewEndDate: d3,\n          viewtype: viewtype,\n          viewTypeWeekRetrievalStartDate1: d2,\n          viewTypeWeekRetrievalStartDate2: d3,\n        });\n      } else if (viewtype === \"day\") {\n        console.log(this.state);\n        this.reloaddata({\n          activedate: currentdate,\n          activemonth: currentmonth,\n          activeyear: currentyear,\n          viewtype: \"day\",\n        });\n      } else {\n        this.setState({ viewtype: viewtype });\n      }\n    }\n  };\n\n  newMeeting = async (props) => {\n    let { date, time } = props;\n    let { activedate, activemonth, activeyear } = this.state;\n    if (time !== undefined && date === undefined) {\n      date = activeyear + \"-\" + activemonth + \"-\" + activedate;\n    }\n\n    console.log(date);\n    console.log(time);\n    this.setState({\n      compType: \"new\",\n      defaultNewMeetingDate: date,\n      defaultNewMeetingHour: time,\n    });\n  };\n\n  viewMeeting = async (props) => {\n    let { eventdata } = props;\n    this.setState({\n      compType: \"view\",\n      viewMeetingData: eventdata,\n    });\n  };\n\n  onmailsent = (props) => {\n    let {\n      //activedate,\n      // activemonth,\n      // activeyear,\n      viewtype,\n    } = this.state;\n    this.changetoView(viewtype);\n    this.setState({ compType: \"list\" });\n  };\n\n  halfHourBlockClick = (props) => {\n    let { e, eventdata, datetime, hour } = props;\n    console.log(eventdata);\n    console.log(datetime);\n    console.log(hour);\n    if (e && e.target) {\n      console.log(e.target.dataset.name);\n\n      e.stopPropagation();\n      this.viewMeeting({ eventdata: eventdata });\n    } else {\n      let d = new Date(datetime);\n      let dmonth = d.getMonth() + 1;\n      if (dmonth < 10) {\n        dmonth = \"0\" + dmonth;\n      }\n      let ddate = d.getDate();\n      if (ddate < 10) {\n        ddate = \"0\" + ddate;\n      }\n      console.log(d.getFullYear() + \"-\" + dmonth + \"-\" + ddate);\n      console.log(hour);\n      this.newMeeting({\n        date: d.getFullYear() + \"-\" + dmonth + \"-\" + ddate,\n        time: hour,\n      });\n    }\n  };\n\n  getHalfhourHtml = (props) => {\n    let { firsthalfhourevent, secondhalfhourevent, zedIndex } = props;\n    console.log(\"abcd\");\n    console.log(firsthalfhourevent);\n    console.log(secondhalfhourevent);\n    console.log(zedIndex);\n    let colorindex = 1;\n    let halfhoureventHtml = [];\n    let halfhourevent = [];\n    for (let j = 0; j < firsthalfhourevent.length; j++) {\n      halfhourevent.push(firsthalfhourevent[j]);\n    }\n    for (let j = 0; j < secondhalfhourevent.length; j++) {\n      halfhourevent.push(secondhalfhourevent[j]);\n    }\n    for (let j = 0; j < halfhourevent.length; j++) {\n      let startdate = new Date(halfhourevent[j].startdate);\n      let enddate = new Date(halfhourevent[j].enddate);\n      let duration = enddate.getTime() - startdate.getTime();\n      let startmin = startdate.getMinutes();\n\n      let startminppercentage = (parseInt(startmin) * 10) / 3;\n      if (secondhalfhourevent.length > 0) {\n        startminppercentage = startminppercentage - 100;\n      }\n      startminppercentage = startminppercentage.toString() + \"%\";\n\n      duration = duration / 60000;\n      let durationhourppercentage = (parseInt(duration) * 10) / 3;\n      durationhourppercentage = durationhourppercentage.toString() + \"%\";\n      let colortext = \"\";\n      if (colorindex === 1) {\n        colortext = \"#00B2A5\";\n      }\n      if (colorindex === 2) {\n        colortext = \"#99B2A5\";\n      }\n      if (colorindex === 3) {\n        colortext = \"#CCB2A5\";\n      }\n      let halfhoureventwidth = parseInt(100 / halfhourevent.length) + \"%\";\n      let evtDisplay =\n        halfhourevent[j].id +\n        \"-\" +\n        halfhourevent[j].startdate +\n        \"-\" +\n        halfhourevent[j].enddate;\n      halfhoureventHtml.push(\n        <div\n          key={j}\n          style={{\n            position: \"relative\",\n            width: halfhoureventwidth,\n          }}\n        >\n          <div\n            style={{\n              border: \"1px solid black\",\n              position: \"absolute\",\n              top: startminppercentage,\n              width: \"100%\",\n              height: durationhourppercentage,\n              backgroundColor: colortext,\n              zIndex: zedIndex,\n            }}\n          >\n            <div\n              style={{\n                width: \"50%\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                margin: \"auto\",\n              }}\n              data-name=\"event\"\n              onClick={(e) =>\n                this.halfHourBlockClick({\n                  e: e,\n                  eventdata: halfhourevent[j],\n                  datetime: \"\",\n                  hour: \"\",\n                })\n              }\n              title={evtDisplay}\n            >\n              {evtDisplay}\n            </div>\n          </div>\n        </div>\n      );\n      zedIndex = zedIndex + 1;\n      colorindex = colorindex + 1;\n      if (colorindex === 4) {\n        colorindex = 1;\n      }\n    }\n    console.log(halfhoureventHtml);\n    return halfhoureventHtml;\n  };\n\n  getDayHtml = () => {\n    let hourrowHtml = [];\n    let maincomp = [];\n    let { eventdata, activedate, activemonth, activeyear } = this.state;\n    console.log(eventdata);\n    let zedIndex = 2;\n    //   let spacing = 0;\n    // let colorindex = 1;\n    for (let i = 0; i < 24; i++) {\n      //   spacing = 0;\n      //  colorindex = 1;\n      let hourContentArrayHtml = [];\n      let firsthalfhourevent = [];\n      let secondhalfhourevent = [];\n      for (let j = 0; j < eventdata.length; j++) {\n        let startdate = new Date(eventdata[j].startdate);\n\n        let activedatevar = new Date(\n          activeyear + \"-\" + activemonth + \"-\" + activedate + \"T00:00:00\"\n        );\n\n        let startmin = startdate.getMinutes();\n        let starthour = startdate.getHours();\n        if (\n          startdate.getDate() === activedatevar.getDate() &&\n          startdate.getMonth() === activedatevar.getMonth() &&\n          startdate.getFullYear() === activedatevar.getFullYear()\n        ) {\n          if (i === parseInt(starthour) && parseInt(startmin) < 30) {\n            firsthalfhourevent.push(eventdata[j]);\n          }\n          if (i === parseInt(starthour) && parseInt(startmin) >= 30) {\n            secondhalfhourevent.push(eventdata[j]);\n          }\n        }\n      }\n      let firsthalfhoureventHtml = [];\n      if (firsthalfhourevent.length > 0) {\n        firsthalfhoureventHtml = this.getHalfhourHtml({\n          firsthalfhourevent,\n          secondhalfhourevent: [],\n          zedIndex,\n        });\n      }\n      zedIndex = firsthalfhourevent.length + 1;\n      let secondthalfhoureventHtml = [];\n      //     colorindex = 1;\n      if (secondhalfhourevent.length > 0) {\n        secondthalfhoureventHtml = this.getHalfhourHtml({\n          firsthalfhourevent: [],\n          secondhalfhourevent,\n          zedIndex,\n        });\n      }\n\n      hourContentArrayHtml.push(\n        <div\n          key={i}\n          className=\"org-fr\"\n          style={{\n            height: \"50%\",\n          }}\n        >\n          {firsthalfhoureventHtml}\n        </div>\n      );\n      hourContentArrayHtml.push(\n        <div key={i} className=\"org-fr\" style={{ height: \"50%\" }}>\n          {secondthalfhoureventHtml}\n        </div>\n      );\n\n      hourrowHtml.push(\n        <div\n          key={i}\n          className=\"org-fr\"\n          style={{\n            height: \"20%\",\n            backgroundColor: \"green\",\n            width: \"100%\",\n          }}\n        >\n          <div\n            style={{\n              width: \"10%\",\n              height: \"100%\",\n            }}\n            onClick={() => {\n              this.newMeeting({ time: i });\n            }}\n          >\n            {i}:00\n          </div>\n          <div\n            style={{\n              width: \"90%\",\n              borderTop: \"1px solid black\",\n              borderRight: \"1px solid black\",\n              height: \"100%\",\n            }}\n          >\n            {hourContentArrayHtml}\n          </div>\n        </div>\n      );\n    }\n\n    maincomp.push(\n      <div\n        style={{\n          height: \"70vh\",\n          border: \"1px solid black\",\n          width: \"100%\",\n          overflow: \"auto\",\n        }}\n        className=\"org-fr\"\n      >\n        {hourrowHtml}\n      </div>\n    );\n    return maincomp;\n  };\n\n  getWeekHtml = () => {\n    let hourrowHtml = [];\n    let maincomp = [];\n    let { viewStartDate, viewEndDate, eventdata } = this.state;\n    console.log(eventdata);\n    let zedIndex = 2;\n    //  let spacing = 0;\n    //  let colorindex = 1;\n    let dayContentArrayHtml = [];\n    if (viewStartDate) {\n      let startdateOfMonth = new Date(viewStartDate.getTime());\n\n      let enddatetime = viewEndDate.getTime();\n\n      hourrowHtml = [];\n      for (let i = 0; i < 24; i++) {\n        let hourContentArrayHtml = [];\n        //      let firsthalfhourevent = [];\n        //     let secondhalfhourevent = [];\n\n        hourContentArrayHtml.push(\n          <div\n            style={{\n              height: \"50%\",\n              textAlign: \"center\",\n            }}\n          >\n            {i}:00\n          </div>\n        );\n\n        hourrowHtml.push(\n          <div\n            className=\"org-fr\"\n            style={{\n              height: \"20%\",\n              backgroundColor: \"green\",\n              width: \"100%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n\n                borderRight: \"1px solid black\",\n                height: \"100%\",\n              }}\n            >\n              {hourContentArrayHtml}\n            </div>\n          </div>\n        );\n      }\n\n      dayContentArrayHtml.push(\n        <div style={{ width: \"9%\", height: \"100%\" }}>\n          <div>\n            <div style={{ textAlign: \"center\", visibility: \"hidden\" }}>tse</div>\n            <div style={{ textAlign: \"center\", visibility: \"hidden\" }}>\n              test\n            </div>\n          </div>\n          {hourrowHtml}\n        </div>\n      );\n\n      // for (let k = 17; k < 24; k++) {\n      while (startdateOfMonth.getTime() <= enddatetime) {\n        hourrowHtml = [];\n        for (let i = 0; i < 24; i++) {\n          //  spacing = 0;\n          //  colorindex = 1;\n          let hourContentArrayHtml = [];\n          let firsthalfhourevent = [];\n          let secondhalfhourevent = [];\n          for (let j = 0; j < eventdata.length; j++) {\n            let startdate = new Date(eventdata[j].startdate);\n            let startyear = startdate.getFullYear();\n            let startmonth = startdate.getMonth();\n            let startdatevalue = startdate.getDate();\n            let startmin = startdate.getMinutes();\n            let starthour = startdate.getHours();\n            if (\n              startdateOfMonth.getFullYear() === startyear &&\n              startdateOfMonth.getMonth() === startmonth &&\n              startdateOfMonth.getDate() === startdatevalue &&\n              i === parseInt(starthour) &&\n              parseInt(startmin) < 30\n            ) {\n              firsthalfhourevent.push(eventdata[j]);\n            }\n            if (\n              startdateOfMonth.getFullYear() === startyear &&\n              startdateOfMonth.getMonth() === startmonth &&\n              startdateOfMonth.getDate() === startdatevalue &&\n              i === parseInt(starthour) &&\n              parseInt(startmin) >= 30\n            ) {\n              secondhalfhourevent.push(eventdata[j]);\n            }\n          }\n          let firsthalfhoureventHtml = [];\n          if (firsthalfhourevent.length > 0) {\n            firsthalfhoureventHtml = this.getHalfhourHtml({\n              firsthalfhourevent,\n              secondhalfhourevent: [],\n              zedIndex,\n            });\n          }\n          zedIndex = firsthalfhourevent.length + 1;\n          let secondthalfhoureventHtml = [];\n          //   colorindex = 1;\n          if (secondhalfhourevent.length > 0) {\n            secondthalfhoureventHtml = this.getHalfhourHtml({\n              firsthalfhourevent: [],\n              secondhalfhourevent,\n              zedIndex,\n            });\n          }\n\n          hourContentArrayHtml.push(\n            <div\n              className=\"org-fr\"\n              style={{\n                height: \"50%\",\n              }}\n            >\n              {firsthalfhoureventHtml}\n            </div>\n          );\n          hourContentArrayHtml.push(\n            <div className=\"org-fr\" style={{ height: \"50%\" }}>\n              {secondthalfhoureventHtml}\n            </div>\n          );\n          let hourblockdatetime = startdateOfMonth.getTime();\n          hourrowHtml.push(\n            <div\n              className=\"org-fr\"\n              style={{\n                height: \"20%\",\n                backgroundColor: \"green\",\n                width: \"100%\",\n              }}\n              data-name=\"eventblank\"\n              onClick={() => {\n                this.halfHourBlockClick({\n                  e: \"\",\n                  eventdata: \"\",\n                  datetime: hourblockdatetime,\n                  hour: i,\n                });\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  borderTop: \"1px solid black\",\n                  borderRight: \"1px solid black\",\n                  height: \"100%\",\n                }}\n              >\n                {hourContentArrayHtml}\n              </div>\n            </div>\n          );\n        }\n\n        let viewStartDateMonthDigitalDisplay = getMonthDigitalDisplay({\n          monthIndex: startdateOfMonth.getMonth(),\n        });\n\n        let viewStartDateDayDigitalDisplay = getDateDigitalDisplay({\n          dateIndex: startdateOfMonth.getDate(),\n        });\n\n        let dayString = getDayStringDisplay({\n          dayIndex: startdateOfMonth.getDay(),\n        });\n\n        dayContentArrayHtml.push(\n          <div style={{ width: \"13%\", height: \"100%\" }}>\n            <div>\n              <div style={{ textAlign: \"center\" }}>{dayString}</div>\n              <div style={{ textAlign: \"center\" }}>\n                {startdateOfMonth.getFullYear()}-{\" \"}\n                {viewStartDateMonthDigitalDisplay}-\n                {viewStartDateDayDigitalDisplay}\n              </div>\n            </div>\n            {hourrowHtml}\n          </div>\n        );\n        let startdateOfMonthDate = startdateOfMonth.getDate() + 1;\n        startdateOfMonth.setDate(startdateOfMonthDate);\n      }\n\n      maincomp.push(\n        <div\n          style={{\n            height: \"70vh\",\n            border: \"1px solid black\",\n            width: \"100%\",\n            overflow: \"auto\",\n          }}\n          className=\"org-fr\"\n        >\n          {dayContentArrayHtml}\n        </div>\n      );\n    }\n    return maincomp;\n  };\n\n  getMonthHtml = () => {\n    let { viewStartDate, eventdata } = this.state;\n    let monthHtml = [];\n    let datecompHtml = [];\n    if (viewStartDate) {\n      let startdateOfMonth = new Date(viewStartDate.getTime());\n      let viewStartDateMonth = viewStartDate.getMonth();\n      let viewStartDateMonthDisplay = getMonthStringDisplay({\n        monthIndex: viewStartDateMonth,\n      });\n      let viewStartDateMonthDigitalDisplay = getMonthDigitalDisplay({\n        monthIndex: viewStartDateMonth,\n      });\n      for (let k = 0; k < viewStartDate.getDay(); k++) {\n        datecompHtml.push(\n          <div\n            style={{\n              width: \"14.28%\",\n              height: \"130px\",\n              backgroundColor: \"grey\",\n              color: \"black\",\n              border: \"1px solid grey\",\n              display: \"inline-block\",\n              overflow: \"auto\",\n            }}\n          >\n            .\n          </div>\n        );\n      }\n      let todaydate = new Date();\n      for (let i = 0; i < 35; i++) {\n        let startday;\n        let istodaydate = false;\n        if (\n          startdateOfMonth.getDate() === todaydate.getDate() &&\n          startdateOfMonth.getMonth() === todaydate.getMonth() &&\n          startdateOfMonth.getFullYear() === todaydate.getFullYear()\n        ) {\n          istodaydate = true;\n        }\n        startday = startdateOfMonth.getDay();\n        startday = getDayStringDisplay({ dayIndex: startday });\n        let eventcomp = [];\n        // update 1:03/17, if event is recurring defect fix\n        for (let j = 0; j < eventdata.length; j++) {\n          let startdate = new Date(eventdata[j].startdate);\n          let startdatevalue = startdate.getDate();\n          let startmonth = startdate.getMonth();\n\n          if (eventdata[j].recurrency.isrecurring === \"true\") {\n            let recurrencystartdate = new Date(\n              eventdata[j].recurrency.startdate\n            );\n            let recurrencyenddate = new Date(eventdata[j].recurrency.enddate);\n            if (\n              todaydate.getTime() > recurrencystartdate.getTime() &&\n              todaydate.getTime() < recurrencyenddate.getTime() &&\n              startmonth === startdateOfMonth.getMonth()\n            ) {\n              eventcomp.push(\n                <div\n                  style={{\n                    backgroundColor: \"lightblue\",\n                    marginTop: \"5px\",\n                    //  whiteSpace: \"nowrap\",\n                    overflow: \"scroll\",\n                  }}\n                  onClick={() => {\n                    this.viewMeeting({ eventdata: eventdata[j] });\n                  }}\n                >\n                  {eventdata[j].subject}\n                </div>\n              );\n            }\n          } else if (\n            startdatevalue === startdateOfMonth.getDate() &&\n            startmonth === startdateOfMonth.getMonth()\n          ) {\n            eventcomp.push(\n              <div\n                style={{\n                  backgroundColor: \"lightblue\",\n                  marginTop: \"5px\",\n                  //  whiteSpace: \"nowrap\",\n                  overflow: \"scroll\",\n                }}\n                onClick={() => {\n                  this.viewMeeting({ eventdata: eventdata[j] });\n                }}\n              >\n                {eventdata[j].subject}\n              </div>\n            );\n          }\n        }\n\n        if (viewStartDateMonth === startdateOfMonth.getMonth()) {\n          let dataid =\n            startdateOfMonth.getFullYear() +\n            \"-\" +\n            viewStartDateMonthDigitalDisplay +\n            \"-\" +\n            getDateDigitalDisplay({\n              dateIndex: startdateOfMonth.getDate(),\n            });\n          datecompHtml.push(\n            <div\n              style={{\n                width: \"14.28%\",\n                height: \"130px\",\n                backgroundColor: \"white\",\n                color: \"black\",\n                border: \"1px solid grey\",\n                display: \"inline-block\",\n                overflow: \"auto\",\n              }}\n            >\n              {istodaydate === true ? (\n                <div\n                  style={{ textAlign: \"center\", backgroundColor: \"lightblue\" }}\n                >\n                  {startday}\n                </div>\n              ) : (\n                <div style={{ textAlign: \"center\" }}>{startday}</div>\n              )}\n\n              {istodaydate === true ? (\n                <div\n                  style={{ textAlign: \"center\", backgroundColor: \"lightblue\" }}\n                  data-meetingdate={dataid}\n                  onClick={() => {\n                    this.newMeeting({\n                      date: dataid,\n                    });\n                  }}\n                >\n                  {startdateOfMonth.getFullYear()}-{\" \"}\n                  {viewStartDateMonthDigitalDisplay}-\n                  {getDateDigitalDisplay({\n                    dateIndex: startdateOfMonth.getDate(),\n                  })}\n                </div>\n              ) : (\n                <div\n                  style={{ textAlign: \"center\" }}\n                  data-meetingdate={dataid}\n                  onClick={() => {\n                    this.newMeeting({\n                      date: dataid,\n                    });\n                  }}\n                >\n                  {startdateOfMonth.getFullYear()}-{\" \"}\n                  {viewStartDateMonthDigitalDisplay}-\n                  {getDateDigitalDisplay({\n                    dateIndex: startdateOfMonth.getDate(),\n                  })}\n                </div>\n              )}\n              <div>{eventcomp}</div>\n            </div>\n          );\n        }\n        let startdateOfMonthDate = startdateOfMonth.getDate() + 1;\n        startdateOfMonth.setDate(startdateOfMonthDate);\n      }\n      monthHtml.push(\n        <div className=\"org-fr org-fjc-c\">\n          {viewStartDate.getFullYear()}-{viewStartDateMonthDisplay}\n        </div>\n      );\n      monthHtml.push(<div className=\"org-fr\">{datecompHtml}</div>);\n    }\n    return monthHtml;\n  };\n\n  reloaddata = (props) => {\n    let {\n      orgname,\n      userprofileid,\n      userid,\n      tablename,\n      datadisplaytype,\n\n      evtdefaultsortparam,\n      hidesidebar,\n      hidedisplaytypepanel,\n      defaultdatafilter,\n      enablelocaldbdata,\n    } = this.props.compprops;\n    let {\n      activedate,\n      activemonth,\n      activeyear,\n      viewStartDate,\n      viewEndDate,\n      viewtype,\n      viewTypeMonthRetrievalStartDate1,\n      viewTypeMonthRetrievalStartDate2,\n      viewTypeWeekRetrievalStartDate1,\n      viewTypeWeekRetrievalStartDate2,\n    } = props;\n    this.getRecordListMetadataAndDatafromServer({\n      orgname: orgname,\n      userProfileId: userprofileid,\n      userId: userid,\n      tableName: tablename,\n      datasortparambeginswith: \"\",\n      datasortparamequalsto: \"\",\n      action: \"\",\n      viewtype: viewtype,\n      datadisplaytype: datadisplaytype,\n      evtdefaultsortparam: evtdefaultsortparam,\n      targetdate: activedate,\n      targetmonth: activemonth,\n      targetyear: activeyear,\n      viewStartDate: viewStartDate,\n      viewEndDate: viewEndDate,\n      viewTypeMonthRetrievalStartDate1: viewTypeMonthRetrievalStartDate1,\n      viewTypeMonthRetrievalStartDate2: viewTypeMonthRetrievalStartDate2,\n      viewTypeWeekRetrievalStartDate1: viewTypeWeekRetrievalStartDate1,\n      viewTypeWeekRetrievalStartDate2: viewTypeWeekRetrievalStartDate2,\n      hidesidebar: hidesidebar,\n      hidedisplaytypepanel: hidedisplaytypepanel,\n      defaultdatafilter: defaultdatafilter,\n      enablelocaldbdata: enablelocaldbdata,\n    });\n  };\n\n  render() {\n    let {\n      // currentdate,\n      // currentmonth,\n      // currentyear,\n      activedate,\n      activemonth,\n      activeyear,\n      viewtype,\n      // eventdata,\n      compType,\n      defaultNewMeetingDate,\n      defaultNewMeetingHour,\n      viewMeetingData,\n    } = this.state;\n    let { hidesidebar, hidedisplaytypepanel } = this.props.compprops;\n    console.log(this.state);\n    let calenderFormat = [];\n    calenderFormat.push(\n      <div>\n        <GetLocalIcon\n          name=\"left\"\n          onClick={() => {\n            this.changetoView(\"left\");\n          }}\n        />\n        <GetLocalIcon\n          name=\"right\"\n          onClick={() => {\n            this.changetoView(\"right\");\n          }}\n        />\n\n        <button\n          onClick={() => {\n            this.changetoView(\"day\");\n          }}\n        >\n          Day\n        </button>\n        <button\n          onClick={() => {\n            this.changetoView(\"week\");\n          }}\n        >\n          Week\n        </button>\n        <button\n          onClick={() => {\n            this.changetoView(\"month\");\n          }}\n        >\n          Month\n        </button>\n        {/* <button\n          onClick={() => {\n            this.changetoView(\"year\");\n          }}\n        >\n          Year\n        </button>\n         <button\n          onClick={() => {\n            this.changetoView(\"blue\");\n          }}\n        >\n          Blue Background\n        </button>\n        <button\n          onClick={() => {\n            this.changetoView(\"yellow\");\n          }}\n        >\n          Yellow Background\n        </button> */}\n\n        <button\n          onClick={() => {\n            this.changetoView(\"today\");\n          }}\n        >\n          Today\n        </button>\n        {viewtype === \"day\" ? (\n          <span>\n            {activeyear}-{activemonth}-{activedate}\n          </span>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n\n    let sidebar = [];\n    sidebar.push(\n      <div>\n        <div>\n          <button onClick={this.newMeeting}>New Meeting</button>\n        </div>\n        <div className=\"org-fr org-fai-c\">\n          My Calenders <GetGoogleIcon name=\"expand_more\" />\n        </div>\n        <div className=\"org-fr org-fai-c\">\n          <input type=\"checkbox\" /> <div>Birthdays</div>\n        </div>\n        <div className=\"org-fr org-fai-c\">\n          <input type=\"checkbox\" /> <div>Personal</div>\n        </div>\n        <div className=\"org-fr org-fai-c\">\n          <input type=\"checkbox\" /> <div>Training</div>\n        </div>\n        <div className=\"org-fr org-fai-c\">\n          Other Calenders <GetGoogleIcon name=\"expand_more\" />\n          <div>\n            <input className=\"org-datainput\" elementtype=\"searchinput\" />\n          </div>\n        </div>\n        <div className=\"org-fr org-fai-c\">\n          <input type=\"checkbox\" /> <div>Kishan Rao</div>\n        </div>\n        <div className=\"org-fr org-fai-c\">\n          <input type=\"checkbox\" /> <div>Yamini</div>\n        </div>\n        <div className=\"org-fr org-fai-c\">\n          <input type=\"checkbox\" /> <div>Nagalatha</div>\n        </div>\n      </div>\n    );\n\n    let maincomp = [];\n    //  let hourrowHtml = [];\n    if (hidedisplaytypepanel === \"false\") {\n      maincomp.push(calenderFormat);\n    }\n    if (viewtype === \"day\") {\n      maincomp.push(this.getDayHtml());\n    }\n    if (viewtype === \"week\") {\n      let dayformathtml = [];\n\n      dayformathtml.push(this.getWeekHtml());\n\n      maincomp.push(\n        <div\n          style={{\n            height: \"70vh\",\n            border: \"1px solid black\",\n            width: \"100%\",\n            overflow: \"auto\",\n          }}\n          className=\"org-fr\"\n        >\n          {dayformathtml}\n        </div>\n      );\n    }\n    if (viewtype === \"month\") {\n      maincomp.push(this.getMonthHtml());\n    }\n    if (viewtype === \"monthh\") {\n      let weekcomp = [];\n      for (let i = 0; i < 7; i++) {\n        let datecomp = [];\n        datecomp.push(\n          <>\n            <span\n              style={{\n                width: \"160px\",\n                height: \"130px\",\n                backgroundColor: \"white\",\n                color: \"black\",\n                border: \"1px solid grey\",\n                display: \"inline-block\",\n              }}\n            >\n              <div style={{ textAlign: \"center\" }}> Mon</div>\n              <div style={{ textAlign: \"center\" }}>1/12/2018</div>\n              <div>\n                <div style={{ backgroundColor: \"lightblue\", marginTop: \"5px\" }}>\n                  Pradeep Birthday\n                </div>\n                <div style={{ backgroundColor: \"lightblue\", marginTop: \"5px\" }}>\n                  Nagalatha Birthday\n                </div>\n                <div style={{ backgroundColor: \"lightblue\", marginTop: \"5px\" }}>\n                  Salesforce Training\n                </div>\n              </div>\n            </span>\n          </>\n        );\n        weekcomp.push(datecomp);\n      }\n\n      let monthcomp = [];\n      for (let i = 0; i < 4; i++) {\n        monthcomp.push(<div>{weekcomp}</div>);\n      }\n\n      maincomp.push(monthcomp);\n    }\n    let newHtml = [];\n    // newHtml.push(\n    //   <Calendernewaction\n    //     {...this.props}\n    //     onmailsent={this.onmailsent}\n    //     defaultNewMeetingDate={defaultNewMeetingDate}\n    //     defaultNewMeetingHour={defaultNewMeetingHour}\n    //     viewType=\"new\"\n    //   />\n    // );\n\n    let viewHtml = [];\n    viewHtml.push(\n      <Calenderviewaction\n        key=\"calenderviewaction\"\n        {...this.props}\n        onmailsent={this.onmailsent}\n        defaultNewMeetingDate={defaultNewMeetingDate}\n        defaultNewMeetingHour={defaultNewMeetingHour}\n        viewType=\"view\"\n        viewMeetingData={viewMeetingData}\n      />\n    );\n\n    return (\n      <>\n        {compType === \"list\" && hidesidebar === \"false\" ? (\n          <div className=\"org-fr org-flexbasis-100p\">\n            <span className=\"org-flexbasis-100p org-mflexbasis-20p org-lflexbasis-20p sp\">\n              {sidebar}\n            </span>\n            <div className=\"org-flexbasis-100p org-mflexbasis-80p org-lflexbasis-80p sp \">\n              {maincomp}\n            </div>\n          </div>\n        ) : (\n          []\n        )}\n        {compType === \"list\" && hidesidebar === \"true\" ? (\n          <div className=\"org-fr org-flexbasis-100p \">\n            <div className=\"org-flexbasis-100p org-mflexbasis-100p org-lflexbasis-100p sp \">\n              {maincomp}\n            </div>\n          </div>\n        ) : (\n          []\n        )}\n      </>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}